<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rmoff&#39;s random ramblings</title>
    <link>https://rmoff.net/</link>
    <description>Recent content on rmoff&#39;s random ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>2020-01-22</lastBuildDate>
    
        <atom:link href="https://rmoff.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kafka Connect - ClassCastException</title>
      <link>https://rmoff.net/2020/01/22/kafka-connect-classcastexception/</link>
      <pubDate>2020-01-22</pubDate>
      
      <guid>https://rmoff.net/2020/01/22/kafka-connect-classcastexception/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/01/IMG_2266.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here&amp;#8217;s a fun one that Kafka Connect can sometimes throw out:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;java.lang.ClassCastException: 
java.util.HashMap cannot be cast to org.apache.kafka.connect.data.Struct&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;HashMap? Struct? HUH?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;tenor-gif-embed&#34; data-postid=&#34;9286799&#34; data-share-method=&#34;host&#34; data-width=&#34;100%&#34; data-aspect-ratio=&#34;1.0&#34;&gt;&lt;a href=&#34;https://tenor.com/view/confused-confusing-noidea-cat-gif-9286799&#34;&gt;GIF&lt;/a&gt; from &lt;a href=&#34;https://tenor.com/search/confused-gifs&#34;&gt;Confused GIFs&lt;/a&gt;&lt;/div&gt;&lt;script type=&#34;text/javascript&#34; async src=&#34;https://tenor.com/embed.js&#34;&gt;&lt;/script&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_what_went_wrong&#34;&gt;What went wrong?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The connector you&amp;#8217;re using relies on the data having a &lt;strong&gt;declared schema&lt;/strong&gt;, and you didn&amp;#8217;t pass it one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_schemas_in_my_data&#34;&gt;Schemas? In my data?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are currently (January 2020) two ways that this can happen:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Avro with the Confluent Schema Registry (the best option IMO)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSON with an embedded schema per message&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This is not just JSON that you glance at and can say &#34;yeah I reckon I know the schema&#34;, or JSON with your own funky schema definition embedded in your own funky bespoke way. This is JSON that looks like this, with &lt;code&gt;schema&lt;/code&gt; and &lt;code&gt;payload&lt;/code&gt; root elements:&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;schema&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;struct&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;fields&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; [
      { &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ID&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt; },
      { &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Artist&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt; },
      { &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Song&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt; }
    ] },
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;payload&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Artist&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Rick Astley&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Song&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Never Gonna Give You Up&amp;#34;&lt;/span&gt;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Read more about it &lt;a href=&#34;https://www.confluent.io/blog/kafka-connect-deep-dive-converters-serialization-explained/#json-schemas&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_so_what_went_wrong&#34;&gt;So what went wrong?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You&amp;#8217;ve got JSON data in your Kafka topic, so you told Kafka Connect to use the JSON converter. Makes sense:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;value.converter&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;BUT&lt;/strong&gt; then you set this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;value.converter.schemas.enable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now the JSON &lt;em&gt;converter&lt;/em&gt; will read the data, but the connector (e.g. the Influx DB Sink) relies on there being a declared schema—which there isn&amp;#8217;t (and we told the JSON converter not to parse for one, by setting &lt;code&gt;&#34;value.converter.schemas.enable&#34;:&#34;false&#34;&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_how_do_i_fix_it&#34;&gt;How do I fix it?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you&amp;#8217;ve got JSON data with a schema embedded like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;schema&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;struct&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;fields&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; [
      { &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ID&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt; },
      { &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Artist&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt; },
      { &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Song&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt; }
    ] },
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;payload&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Artist&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Rick Astley&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Song&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Never Gonna Give You Up&amp;#34;&lt;/span&gt;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;then you can just fix the configuration of your converter, by setting:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;value.converter.schemas.enable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you get &lt;code&gt;JsonDeserializer with schemas.enable requires &#34;schema&#34; and &#34;payload&#34; fields and may not contain additional fields&lt;/code&gt; check &lt;a href=&#34;http://rmoff.net/2017/09/06/kafka-connect-jsondeserializer-with-schemas.enable-requires-schema-and-payload-fields/&#34;&gt;this link&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But if you don&amp;#8217;t actually have a schema present, then you&amp;#8217;re going to need to declare one and make it available as part of your Kafka message - either embedded in the JSON, or using Avro (a better solution).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_sounds_like_a_good_idea_how_do_i_add_a_schema_to_my_kafka_message&#34;&gt;Sounds like a good idea! How do I add a schema to my Kafka message?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let&amp;#8217;s assume that you can&amp;#8217;t just fix this at source, and have your producer write data that&amp;#8217;s got the schema declared already (since this is the overall best solution). Your source data looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Artist&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Rick Astley&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Song&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Never Gonna Give You Up&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You&amp;#8217;ve got a couple of approaches to fixing this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_option_1_stream_processingthe_right_way&#34;&gt;Option 1 : Stream Processing—the right way&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Use ksqlDB, Kafka Streams, or another stream processing to read your source messages from a topic, apply the schema, and write the message to a new topic. That new topic is then the one that you consume from Kafka Connect (and anywhere else that will benefit from a declared schema).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here&amp;#8217;s an example of doing it using ksqlDB:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Declare the schema on the existing topic&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM TESTDATA_JSON (ID &lt;span style=&#34;color:#008000&#34;&gt;VARCHAR&lt;/span&gt;, ARTIST &lt;span style=&#34;color:#008000&#34;&gt;VARCHAR&lt;/span&gt;, SONG &lt;span style=&#34;color:#008000&#34;&gt;VARCHAR&lt;/span&gt;) &lt;span style=&#34;&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;testdata-json&amp;#39;&lt;/span&gt;, VALUE_FORMAT&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;JSON&amp;#39;&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reserialise the data to Avro&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM TESTDATA 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (VALUE_FORMAT&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;, KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;testdata-avro&amp;#39;&lt;/span&gt;) 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; TESTDATA_JSON;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you&amp;#8217;re going to use Avro make sure you change your converter config in the connector:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;value.converter&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;value.converter.schema.registry.url&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;http://schema-registry:8081&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Read more about this technique &lt;a href=&#34;https://www.confluent.io/blog/kafka-connect-deep-dive-converters-serialization-explained/#applying-schema&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_option_2_stream_processing_the_hacky_way&#34;&gt;Option 2 : Stream processing the hacky way&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Sometimes needs must. We know we should do it the right way, but we need a dirty little fix. Here&amp;#8217;s that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let&amp;#8217;s assume that we don&amp;#8217;t care about:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Message timestamps&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Message headers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Message keys&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Message partitions&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;not to mention&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Maintainability&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Supportability&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The hack here is to interpolate the JSON-with-schema template with the payload value from the source, using kafkacat. &lt;code&gt;kafkacat&lt;/code&gt; reads from the topic, pipes it into &lt;code&gt;jq&lt;/code&gt; which adds the schema definition, and then pipes it to another instance of &lt;code&gt;kafkacat&lt;/code&gt; which writes it to a new topic.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;kafkacat -b localhost:9092 -q -u -X auto.offset.reset&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;earliest -G rmoff_cg_01 testdata-json | &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;jq --compact-output --unbuffered &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;. |
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;    {   schema: { type: &amp;#34;struct&amp;#34;, optional: false, version: 1, fields: [
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;                { field: &amp;#34;ID&amp;#34;, type: &amp;#34;string&amp;#34;, optional: true},
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;                { field: &amp;#34;Artist&amp;#34;, type: &amp;#34;string&amp;#34;, optional: true},
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;                { field: &amp;#34;Song&amp;#34;, type: &amp;#34;string&amp;#34;, optional: true}]},
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;        payload: {
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            ID: .ID,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            Artist: .Artist,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            Song: .Song
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            }
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;    }&amp;#39;&lt;/span&gt; | &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;kafkacat -b localhost:9092 -t testdata-json-with-schema -P -T -u | jq --unbuffered &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It runs using a consumer group so can be stopped and started, and even scaled out if you have more than one partition. It also dumps to screen the transformed message - remove the final &lt;code&gt;jq&lt;/code&gt; if you don&amp;#8217;t want that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The transformed message looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;schema&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;struct&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;fields&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; [
      {
        &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ID&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;
      },
      {
        &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Artist&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;
      },
      {
        &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Song&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;
      }
    ]
  },
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;payload&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Artist&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Rick Astley&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Song&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Never Gonna Give You Up&amp;#34;&lt;/span&gt;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_wouldnt_it_be_easier_if_the_json_converter_could_just_infer_the_schema&#34;&gt;Wouldn&amp;#8217;t it be easier if the JSON Converter could just infer the schema?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Probably - and that&amp;#8217;s why &lt;a href=&#34;https://cwiki.apache.org/confluence/display/KAFKA/KIP-301%3A+Schema+Inferencing+for+JsonConverter&#34;&gt;KIP-301&lt;/a&gt; exists. PRs are open if you want to contribute :)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Monitoring Sonos with ksqlDB, InfluxDB, and Grafana</title>
      <link>https://rmoff.net/2020/01/21/monitoring-sonos-with-ksqldb-influxdb-and-grafana/</link>
      <pubDate>2020-01-21</pubDate>
      
      <guid>https://rmoff.net/2020/01/21/monitoring-sonos-with-ksqldb-influxdb-and-grafana/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/01/IMG_2259.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I&amp;#8217;m quite a fan of Sonos audio equipment but recently had some trouble with some of the devices glitching and even cutting out whilst playing. Under the covers Sonos stuff is running Linux (of course) and exposes some diagnostics through a rudimentary frontend that you can access at &lt;code&gt;http://&amp;lt;sonos player IP&amp;gt;:1400/support/review&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/01/sonos00.png&#34; alt=&#34;Sonos Network Matrix&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Whilst this gives you the current state, you can&amp;#8217;t get historical data on it. It &lt;em&gt;felt&lt;/em&gt; like the problems were happening &#34;all the time&#34;, but &lt;strong&gt;were they actually&lt;/strong&gt;? For that, we need some cold, hard, data! Something like this, in fact:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------+---------+----------+---------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;WINDOW_START_TS      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;DEVICE   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;STATUS    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;STATUS_COUNT   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------+---------+----------+---------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Kitchen  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;YELLOW    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;183&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Kitchen  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;RED       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;162&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Kitchen  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ORANGE    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;156&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Kitchen  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;GREEN     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;              &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
[&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Summaries are nice, but so&amp;#8217;s a plot of the data over time:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/01/sonos01.png&#34; alt=&#34;Sonos connectivity data over time&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this article I&amp;#8217;ll walk through how to collect this data and process it using some of my favourite tools including ksqlDB, InfluxDB, and Grafana.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Which data are we going to collect? For now it&amp;#8217;s based on two metrics of interest here - &lt;code&gt;Noise Floor&lt;/code&gt; and &lt;code&gt;OFDM ANI level&lt;/code&gt;. Why these two? Well, if we open up the code behind the Network Matrix shown above, we can see the Javascript that defines the colour of the cells evaluates these two:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;[&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;]
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt;( nf &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;94&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ofdm &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt; )
    td.style.background &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;rgb(32,190,32)&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;// GREEN
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt;( nf &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;89&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ofdm &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt; )
    td.style.background &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;rgb(255,255,32)&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;// YELLOW
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt;( nf &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;84&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ofdm &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt; )
    td.style.background &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;rgb(255,159,32)&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;// ORANGE
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;else&lt;/span&gt;
    td.style.background &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;rgb(255,32,32)&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;// RED
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;[&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_stack&#34;&gt;The stack&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;curl&lt;/code&gt; to poll the API for diagnostics, and parse it with &lt;a href=&#34;https://github.com/kislyuk/yq&#34;&gt;&lt;code&gt;xq&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/edenhill/kafkacat&#34;&gt;kafkacat&lt;/a&gt; to stream the data into Kafka&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kafka.apache.org&#34;&gt;Apache Kafka&lt;/a&gt; to stream and store the data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ksqldb.io&#34;&gt;ksqlDB&lt;/a&gt; to process, wrangle, and query the data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kafka.apache.org&#34;&gt;Kafka Connect&lt;/a&gt; to load the data into &lt;a href=&#34;https://www.influxdata.com/&#34;&gt;InfluxDB&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://grafana.com/&#34;&gt;Grafana&lt;/a&gt; to visualise it all&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Why Kafka? Because we&amp;#8217;re doing all of this with streams of events. We want to have a low-latency pipeline from event to dashboard, and we also want to be able to replay and re-use the data.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_ingest_diagnostics_data_from_sonos_into_kafka&#34;&gt;Ingest diagnostics data from Sonos into Kafka&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We&amp;#8217;re going to go full-MacGyver for part of this, since Sonos does not offer a nice API. The diagnostics that Sonos devices serve up on the &lt;code&gt;http://&amp;lt;sonos player IP&amp;gt;:1400/support/review&lt;/code&gt; interface (I&amp;#8217;ll not actually call it an API, since it isn&amp;#8217;t really) are XML-wrapped plaintext. So whilst XML may actually be nicer than YAML to work with (who knew), plain text is not so nice to work with. Fancy parsing this for key/value pairs? It&amp;#8217;s going to be all hand-crafted code needed:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Mode: INFRA (sonosnet)
Operating on channel 2437
Home channel is 2437
HT Channel is 0
RF Chains: RX:4 TX:4
RF Chainmask: RX:0x0F TX:0x0F
Max Spatial Streams: RX:4 TX:4
Noise Floor:    0 dBm (chain 0 ctl)
Noise Floor:    0 dBm (chain 1 ctl)
Noise Floor:    0 dBm (chain 2 ctl)
Noise Floor:    0 dBm (chain 3 ctl)
PHY errors since last reading/reset: 3882&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To pull the data from Sonos you just need to hit one of the devices, since it serves up the stats for all the others too. I&amp;#8217;m using &lt;a href=&#34;https://github.com/kislyuk/yq&#34;&gt;&lt;code&gt;xq&lt;/code&gt;&lt;/a&gt; here which is an XML version of the superb &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt; tool (which is for JSON). It means that I can stream data from &lt;code&gt;curl&lt;/code&gt; into &lt;code&gt;xq&lt;/code&gt; and parse the document structure for fields and values that I want, as well as starting to manipulate the data into more of a structure for processing (such as splitting the &lt;code&gt;status&lt;/code&gt; data shown above into an array).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once it&amp;#8217;s parsed the data it pipes it into &lt;code&gt;kafkacat&lt;/code&gt; which writes it to a Kafka topic, as well as echo&amp;#8217;ing it to the terminal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;while [ 1 -eq 1 ];do
    curl -s &#39;http://192.168.10.98:1400/support/review&#39; | \
        xq -c &#39;.ZPNetworkInfo.ZPSupportInfo[] |
            {ZPInfo: .ZPInfo.ZoneName,
            data: [(.File[] |
                    select (.&#34;@name&#34; == &#34;/proc/ath_rincon/status&#34;) |
                    .&#34;#text&#34; |
                    split(&#34;\n&#34;)[] |
                    select((. | contains(&#34;OFDM&#34;)) or (.|contains(&#34;Noise&#34;)) or (.|contains(&#34;PHY&#34;))))]
                }&#39; | \
            docker exec -i kafkacat kafkacat \
                -b kafka-1:39092,kafka-2:49092,kafka-3:59092 \
                -t sonos-metrics -P -T | jq &#39;.&#39;
    sleep 20
done&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_query_the_streams_of_data_in_ksqldb&#34;&gt;Query the streams of data in ksqlDB&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now the data&amp;#8217;s in Kafka we can examine and process it with ksqlDB. First up we need to create a stream on top of the topic—which is just declaring the schema for the data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM SONOS_RAW (ZPINFO STRING, &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DATA&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;ARRAY&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#008000&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;,RAWDATA STRING) 
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;sonos-metrics&amp;#39;&lt;/span&gt;, VALUE_FORMAT&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;JSON&amp;#39;&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can query this data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;auto.offset.reset&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;earliest&amp;#39;&lt;/span&gt;;

ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(ROWTIME,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Europe/London&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; TS, 
             ZPINFO, 
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DATA&lt;/span&gt; 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SONOS_RAW 
        EMIT CHANGES 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------+-------------+-----------------------------------------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;TS                   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ZPINFO       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DATA&lt;/span&gt;                                                       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------+-------------+-----------------------------------------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;23&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;09&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Study (R)    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;[Noise Floor:    &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; dBm (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;chain&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; ctl), Noise Floor:    &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; dBm&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;chain&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; ctl), Noise Floor:    &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; dBm (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;chain&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt; ctl), Noise &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Floor:    &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; dBm (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;chain&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt; ctl), PHY errors since &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;last&lt;/span&gt; readin&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;g&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;reset&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;6803&lt;/span&gt;        ]                                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;Limit&lt;/span&gt; Reached
Query terminated
ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and we can manipulate the data using standard SQL capabilities - for example to take a substring of a value and cast it to a new type:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; ZPINFO, 
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DATA&lt;/span&gt;[&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;],
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CAST&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SUBSTRING&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DATA&lt;/span&gt;[&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;],&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; DOUBLE) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; NOISE_FLOOR_DBM0
     &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt;   SONOS_RAW
     EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;----------------+---------------------------------------------+---------------------------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ZPINFO          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;KSQL_COL_1                                   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;NOISE_FLOOR_DBM0                             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;----------------+---------------------------------------------+---------------------------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Bedroom         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Noise Floor: &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;104&lt;/span&gt; dBm (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;chain&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; ctl)          &lt;span style=&#34;color:#666&#34;&gt;|-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;104&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;                                       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Study (L)       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Noise Floor:    &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; dBm (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;chain&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; ctl)          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;                                          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
[&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_transform_the_data_in_ksqldb&#34;&gt;Transform the data in ksqlDB&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The actual data that we want to pull out for now is just the device name (&lt;code&gt;ZPINFO&lt;/code&gt;), &lt;code&gt;Noise Floor&lt;/code&gt;, and &lt;code&gt;OFDM ANI level&lt;/code&gt;. We&amp;#8217;ll do this with some data wrangling along the same lines as shown above.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A key thing to note is that the &lt;code&gt;CREATE STREAM&lt;/code&gt; here is now writing the results of this query to a new stream, underpinned by a new Kafka topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM SONOS_HEALTH_METRICS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;sonos_metrics_01&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; 
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;MAP&lt;/span&gt;(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;DEVICE&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;ZPINFO) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; TAGS,
            (( (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CAST&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SUBSTRING&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DATA&lt;/span&gt;[&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;],&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; DOUBLE) &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CAST&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SUBSTRING&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DATA&lt;/span&gt;[&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;],&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; DOUBLE) &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CAST&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SUBSTRING&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DATA&lt;/span&gt;[&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;],&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; DOUBLE)) &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt; )) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; AVG_NOISE_FLOOR_DBM,
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CAST&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SUBSTRING&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DATA&lt;/span&gt;[&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;],&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; DOUBLE) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; NOISE_FLOOR_DBM0,
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CAST&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SUBSTRING&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DATA&lt;/span&gt;[&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;],&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; DOUBLE) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; NOISE_FLOOR_DBM1,
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CAST&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SUBSTRING&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DATA&lt;/span&gt;[&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;],&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; DOUBLE) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; NOISE_FLOOR_DBM2,
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CAST&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SUBSTRING&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DATA&lt;/span&gt;[&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;],&lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;INT&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; OFDM_ANI_LEVEL,
            (&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CAST&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SUBSTRING&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DATA&lt;/span&gt;[&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;],&lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;INT&lt;/span&gt;))&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt; OFDM_ANI_LEVEL_ADJUSTED
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt;   SONOS_RAW
    EMIT CHANGES ;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note the schemas includes a &lt;code&gt;MAP&lt;/code&gt; for the tags, which we&amp;#8217;ll use to load into InfluxDB shortly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DESCRIBE&lt;/span&gt; SONOS_HEALTH_METRICS;

Name                 : SONOS_HEALTH_METRICS
 Field                   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;Type&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt; ROWTIME                 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;BIGINT&lt;/span&gt;           (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;system&lt;/span&gt;)
 ROWKEY                  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;VARCHAR&lt;/span&gt;(STRING)  (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;system&lt;/span&gt;)
 TAGS                    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;MAP&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;STRING, &lt;span style=&#34;color:#008000&#34;&gt;VARCHAR&lt;/span&gt;(STRING)&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;
 AVG_NOISE_FLOOR_DBM     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; DOUBLE
 NOISE_FLOOR_DBM0        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; DOUBLE
 NOISE_FLOOR_DBM1        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; DOUBLE
 NOISE_FLOOR_DBM2        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; DOUBLE
 OFDM_ANI_LEVEL          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;INTEGER&lt;/span&gt;
 OFDM_ANI_LEVEL_ADJUSTED &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;INTEGER&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;For&lt;/span&gt; runtime &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;statistics&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;and&lt;/span&gt; query details run: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DESCRIBE&lt;/span&gt; EXTENDED &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;Stream,&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;Table&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;From this fairly simple transformation we now have a set of metrics which we can query from the stream:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(ROWTIME,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Europe/London&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; TS, 
             TAGS[&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;DEVICE&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; DEVICE, 
             AVG_NOISE_FLOOR_DBM, 
             OFDM_ANI_LEVEL_ADJUSTED 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SONOS_HEALTH_METRICS 
        EMIT CHANGES 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------+-------------+----------------------+-------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;TS                   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;DEVICE       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;AVG_NOISE_FLOOR_DBM   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;OFDM_ANI_LEVEL_ADJUSTED  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------+-------------+----------------------+-------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;06&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;33&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;24&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Sitting Room &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;                   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;06&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;34&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;26&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Kitchen      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;104&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;33333333333333&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;                        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;06&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;36&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Study (L)    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;                   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;06&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;32&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Bedroom      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;103&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;66666666666667&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;                        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;06&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;32&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Study (R)    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;                   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;Limit&lt;/span&gt; Reached
Query terminated
ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can also query it from the underlying Kafka topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; PRINT sonos_metrics_01 &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;;
Format:JSON
&lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ROWTIME&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;1578956524472&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ROWKEY&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;null&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;TAGS&amp;#34;&lt;/span&gt;:&lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;DEVICE&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Study (R)&amp;#34;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;AVG_NOISE_FLOOR_DBM&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM0&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM1&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM2&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;OFDM_ANI_LEVEL&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;OFDM_ANI_LEVEL_ADJUSTED&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ROWTIME&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;1578956524472&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ROWKEY&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;null&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;TAGS&amp;#34;&lt;/span&gt;:&lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;DEVICE&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Dining Room&amp;#34;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;AVG_NOISE_FLOOR_DBM&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM0&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM1&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM2&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;OFDM_ANI_LEVEL&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;OFDM_ANI_LEVEL_ADJUSTED&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ROWTIME&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;1578956524472&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ROWKEY&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;null&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;TAGS&amp;#34;&lt;/span&gt;:&lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;DEVICE&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Kitchen&amp;#34;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;AVG_NOISE_FLOOR_DBM&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;104&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;33333333333333&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM0&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;104&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM1&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;109&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM2&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;E&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;OFDM_ANI_LEVEL&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;OFDM_ANI_LEVEL_ADJUSTED&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ROWTIME&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;1578956524472&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ROWKEY&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;null&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;TAGS&amp;#34;&lt;/span&gt;:&lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;DEVICE&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Sitting Room&amp;#34;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;AVG_NOISE_FLOOR_DBM&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM0&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM1&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM2&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;OFDM_ANI_LEVEL&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;OFDM_ANI_LEVEL_ADJUSTED&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ROWTIME&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;1578956603128&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ROWKEY&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;null&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;TAGS&amp;#34;&lt;/span&gt;:&lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;DEVICE&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Study (R)&amp;#34;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;AVG_NOISE_FLOOR_DBM&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM0&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM1&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;NOISE_FLOOR_DBM2&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;OFDM_ANI_LEVEL&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;OFDM_ANI_LEVEL_ADJUSTED&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_transform_the_message_structure_to_load_into_influxdb&#34;&gt;Transform the message structure to load into InfluxDB&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In a moment we&amp;#8217;re going to stream all this data into InfluxDB, but first we need to do a little &lt;a href=&#34;https://libquotes.com/linus-torvalds/quote/lbr1k4j&#34;&gt;&lt;code&gt;random jiggling&lt;/code&gt;&lt;/a&gt; to get the data into an appropriate format.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Warning&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
This is not part of a normal ksqlDB pipeline! It&amp;#8217;s just a hacky workaround to deal with some slightly misaligned interfaces.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In a nutshell, the InfluxDB connector needs the data to either have a schema embedded in the JSON, or the Avro schema to be constructed a certain way (&lt;code&gt;map&lt;/code&gt; not &lt;code&gt;array&lt;/code&gt;). Here we&amp;#8217;ll interpolate the JSON-with-schema shell with the payload value, using kafkacat:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;kafkacat&lt;/code&gt; reads from the topic, pipes it into &lt;code&gt;jq&lt;/code&gt; which adds the schema definition, and then pipes it to another instance of &lt;code&gt;kafkacat&lt;/code&gt; which writes it to a new topic.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker exec -it kafkacat /bin/sh -c &#39;kafkacat -b kafka-1:39092,kafka-2:49092,kafka-3:59092 -q -u -X auto.offset.reset=latest -G sonos_rmoff_cg_01 sonos_metrics_01 |jq -c &#39;&#34;&#39;&#34;&#39;. |
{   schema: { type: &#34;struct&#34;, optional: false, version: 1, fields: [
            { field: &#34;tags&#34;, type: &#34;map&#34;, keys: {type: &#34;string&#34;, optional: false}, values: {type: &#34;string&#34;, optional: false}, optional: false },
            { field: &#34;AVG_NOISE_FLOOR_DBM&#34;, type: &#34;double&#34;, optional: true},
            { field: &#34;NOISE_FLOOR_DBM0&#34;, type: &#34;double&#34;, optional: true},
            { field: &#34;NOISE_FLOOR_DBM1&#34;, type: &#34;double&#34;, optional: true},
            { field: &#34;NOISE_FLOOR_DBM2&#34;, type: &#34;double&#34;, optional: true},
            { field: &#34;OFDM_ANI_LEVEL&#34;, type: &#34;double&#34;, optional: true},
            { field: &#34;OFDM_ANI_LEVEL_ADJUSTED&#34;, type: &#34;double&#34;, optional: true}]},
    payload: {
        tags:  .TAGS ,
        AVG_NOISE_FLOOR_DBM: .AVG_NOISE_FLOOR_DBM,
        NOISE_FLOOR_DBM0: .NOISE_FLOOR_DBM0,
        NOISE_FLOOR_DBM1: .NOISE_FLOOR_DBM1,
        NOISE_FLOOR_DBM2: .NOISE_FLOOR_DBM2,
        OFDM_ANI_LEVEL: .OFDM_ANI_LEVEL,
        OFDM_ANI_LEVEL_ADJUSTED: .OFDM_ANI_LEVEL_ADJUSTED
        }
}&#39;&#34;&#39;&#34;&#39; | \
kafkacat -b kafka-1:39092,kafka-2:49092,kafka-3:59092 -t sonos_metrics_01_json_with_schema -P -T&#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &#34;TAGS&#34;: {
    &#34;DEVICE&#34;: &#34;Kitchen&#34;
  },
  &#34;AVG_NOISE_FLOOR_DBM&#34;: 104.33333333333333,
  &#34;NOISE_FLOOR_DBM0&#34;: -104,
  &#34;NOISE_FLOOR_DBM1&#34;: -109,
  &#34;NOISE_FLOOR_DBM2&#34;: -100,
  &#34;OFDM_ANI_LEVEL&#34;: 5,
  &#34;OFDM_ANI_LEVEL_ADJUSTED&#34;: 3
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Becomes this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
    &#34;schema&#34;: { &#34;type&#34;: &#34;struct&#34;, &#34;optional&#34;: false, &#34;version&#34;: 1, &#34;fields&#34;: [
        {&#34;field&#34;: &#34;tags&#34;, &#34;type&#34;: &#34;map&#34;, &#34;keys&#34;: { &#34;type&#34;: &#34;string&#34;, &#34;optional&#34;: false }, &#34;values&#34;: { &#34;type&#34;: &#34;string&#34;, &#34;optional&#34;: false }, &#34;optional&#34;: false },
        {&#34;field&#34;: &#34;AVG_NOISE_FLOOR_DBM&#34;, &#34;type&#34;: &#34;double&#34;, &#34;optional&#34;: true },
        { &#34;field&#34;: &#34;NOISE_FLOOR_DBM0&#34;, &#34;type&#34;: &#34;double&#34;, &#34;optional&#34;: true },
        { &#34;field&#34;: &#34;NOISE_FLOOR_DBM1&#34;, &#34;type&#34;: &#34;double&#34;, &#34;optional&#34;: true },
        { &#34;field&#34;: &#34;NOISE_FLOOR_DBM2&#34;, &#34;type&#34;: &#34;double&#34;, &#34;optional&#34;: true },
        { &#34;field&#34;: &#34;OFDM_ANI_LEVEL&#34;, &#34;type&#34;: &#34;double&#34;, &#34;optional&#34;: true },
        { &#34;field&#34;: &#34;OFDM_ANI_LEVEL_ADJUSTED&#34;, &#34;type&#34;: &#34;double&#34;, &#34;optional&#34;: true }
        ]
    },
    &#34;payload&#34;: {
        &#34;tags&#34;: { &#34;device&#34;: &#34;Dining Room&#34; },
        &#34;AVG_NOISE_FLOOR_DBM&#34;: -0,
        &#34;NOISE_FLOOR_DBM0&#34;: 0,
        &#34;NOISE_FLOOR_DBM1&#34;: 0,
        &#34;NOISE_FLOOR_DBM2&#34;: 0,
        &#34;OFDM_ANI_LEVEL&#34;: null,
        &#34;OFDM_ANI_LEVEL_ADJUSTED&#34;: null
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Whilst kafkacat is pretty neat for this kind of message manipulation, note that it will not preserve the partition, timestamp, or header of the source message.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_stream_data_from_kafka_into_influxdb&#34;&gt;Stream data from Kafka into InfluxDB&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Back in ksqlDB we can now create a connector:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;CREATE SINK CONNECTOR SINK_INFLUX_01 WITH (
        &#39;connector.class&#39;               = &#39;io.confluent.influxdb.InfluxDBSinkConnector&#39;,
        &#39;value.converter&#39;               = &#39;org.apache.kafka.connect.json.JsonConverter&#39;,
        &#39;value.converter.schemas.enable&#39;= &#39;true&#39;,
        &#39;topics&#39;                        = &#39;sonos_metrics_01_json_with_schema&#39;,
        &#39;influxdb.url&#39;                  = &#39;http://influxdb:8086&#39;,
        &#39;influxdb.db&#39;                   = &#39;sonos&#39;,
        &#39;measurement.name.format&#39;       = &#39;metrics&#39;
  );&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Check the connector status:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&amp;gt; SHOW CONNECTORS;

 Connector Name | Type | Class                                       | Status
---------------------------------------------------------------------------------------------------
 SINK_INFLUX_01 | SINK | io.confluent.influxdb.InfluxDBSinkConnector | RUNNING (1/1 tasks RUNNING)
---------------------------------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And in InfluxDB itself we can see data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker &lt;span style=&#34;color:#008000&#34;&gt;exec&lt;/span&gt; -it influxdb influx -execute &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;SHOW MEASUREMENTS&amp;#39;&lt;/span&gt; -database &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;sonos&amp;#39;&lt;/span&gt;
name: measurements
name
----
metrics
----

docker &lt;span style=&#34;color:#008000&#34;&gt;exec&lt;/span&gt; -it influxdb influx -database &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;sonos&amp;#39;&lt;/span&gt; -execute &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;SELECT LAST(&amp;#34;AVG_NOISE_FLOOR_DBM&amp;#34;) FROM &amp;#34;metrics&amp;#34; GROUP BY &amp;#34;device&amp;#34; LIMIT 3;&amp;#39;&lt;/span&gt;
name: metrics
tags: &lt;span style=&#34;color:#19177c&#34;&gt;device&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;Bedroom
&lt;span style=&#34;color:#008000&#34;&gt;time&lt;/span&gt;                last
----                ----
&lt;span style=&#34;color:#666&#34;&gt;1579608296503000000&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;103&lt;/span&gt;.66666666666667

name: metrics
tags: &lt;span style=&#34;color:#19177c&#34;&gt;device&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;Dining Room
&lt;span style=&#34;color:#008000&#34;&gt;time&lt;/span&gt;                last
----                ----
&lt;span style=&#34;color:#666&#34;&gt;1579608234480000000&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;

name: metrics
tags: &lt;span style=&#34;color:#19177c&#34;&gt;device&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;Kitchen
&lt;span style=&#34;color:#008000&#34;&gt;time&lt;/span&gt;                last
----                ----
&lt;span style=&#34;color:#666&#34;&gt;1579608296491000000&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;104&lt;/span&gt;.33333333333333&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_visualisation&#34;&gt;Visualisation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Grafana is the tool I&amp;#8217;m more familiar with, and plays nicely with InfluxDB.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/01/sonos01.png&#34; alt=&#34;Sonos data plotted in Grafana&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I&amp;#8217;ve taken the thresholds that the Sonos network matrix javascript code (quoted above) uses to determine good/warning/bad and overlaid these on the charts and used them to background colour the current values.&lt;/p&gt;
&lt;/div&gt;
&lt;iframe src=&#34;https://snapshot.raintank.io/dashboard-solo/snapshot/CcjhhhJZy2sVCqYylAAlxF62cx6DaFgi?orgId=2&amp;from=1579644113369&amp;to=1579652250260&amp;var-Device=Bedroom&amp;var-Device=Kitchen&amp;panelId=7&#34; width=&#34;550&#34; height=&#34;200&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can try the Grafana dashboard &lt;a href=&#34;https://snapshot.raintank.io/dashboard/snapshot/qBALXdQGwjU37KTO8Q1zAZ7o8IjaGisB&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It&amp;#8217;s worth noting that in recent years Influx have developed their own visualisation tool, Chronograf, which is pretty nice too&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/01/sonos02.png&#34; alt=&#34;Sonos data plotted in Chronograf&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_aggregation_in_ksqldb&#34;&gt;Aggregation in ksqlDB&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Because ksqlDB gives you a SQL interface to the data in Apache Kafka you can do things like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Apply threshold calculations to the data as it passes through:&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM DEVICE_STATUS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; 
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(ROWTIME,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Europe/London&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; TS, 
            TAGS[&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;DEVICE&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; DEVICE, 
            AVG_NOISE_FLOOR_DBM,
            OFDM_ANI_LEVEL_ADJUSTED,
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CASE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHEN&lt;/span&gt; AVG_NOISE_FLOOR_DBM &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;94&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AND&lt;/span&gt; OFDM_ANI_LEVEL_ADJUSTED &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;THEN&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;GREEN&amp;#39;&lt;/span&gt;
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHEN&lt;/span&gt; AVG_NOISE_FLOOR_DBM &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;89&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AND&lt;/span&gt; OFDM_ANI_LEVEL_ADJUSTED &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;THEN&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;YELLOW&amp;#39;&lt;/span&gt;
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHEN&lt;/span&gt; AVG_NOISE_FLOOR_DBM &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;84&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AND&lt;/span&gt; OFDM_ANI_LEVEL_ADJUSTED &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;THEN&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;ORANGE&amp;#39;&lt;/span&gt;
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHEN&lt;/span&gt; OFDM_ANI_LEVEL_ADJUSTED &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;THEN&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ELSE&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;RED&amp;#39;&lt;/span&gt;
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; STATUS
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt;    SONOS_HEALTH_METRICS
    EMIT CHANGES;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TS, DEVICE, AVG_NOISE_FLOOR_DBM, OFDM_ANI_LEVEL_ADJUSTED, STATUS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; DEVICE_STATUS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; STATUS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;NULL&lt;/span&gt; EMIT CHANGES &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+----------+---------------------+------------------------+-------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;TS                  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;DEVICE    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;AVG_NOISE_FLOOR_DBM  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;OFDM_ANI_LEVEL_ADJUSTED &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;STATUS &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+----------+---------------------+------------------------+-------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;06&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;23&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;04&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Bedroom   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;103&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;66666666666667&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;                       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ORANGE &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;05&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Bedroom   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;103&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;66666666666667&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;                       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ORANGE &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Bedroom   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;103&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;66666666666667&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;                       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ORANGE &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;06&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;24&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;06&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Bedroom   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;103&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;                       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ORANGE &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;29&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Bedroom   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;103&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;66666666666667&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;                       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;RED    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;Limit&lt;/span&gt; Reached
Query terminated&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Show aggregate values based on the data in the Kafka topic:&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(WINDOWSTART(),&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Europe/London&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; WINDOW_START_TS, 
             DEVICE, 
             STATUS, 
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; STATUS_COUNT 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; DEVICE_STATUS 
                WINDOW TUMBLING (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SIZE&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DAY&lt;/span&gt;) 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; DEVICE&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Kitchen&amp;#39;&lt;/span&gt; 
          &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AND&lt;/span&gt; ROWTIME &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; (UNIX_TIMESTAMP() &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;86400000&lt;/span&gt;) 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; DEVICE, STATUS 
        EMIT CHANGES;

&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------+---------+----------+---------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;WINDOW_START_TS      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;DEVICE   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;STATUS    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;STATUS_COUNT   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------+---------+----------+---------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Kitchen  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;YELLOW    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;183&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Kitchen  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;RED       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;162&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Kitchen  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ORANGE    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;156&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Kitchen  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;GREEN     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;              &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
[&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_try_it_out&#34;&gt;Try it out!&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Grab the &lt;a href=&#34;https://github.com/confluentinc/demo-scene/blob/master/sonos&#34;&gt;Docker Compose from here&lt;/a&gt;, and give it a whirl.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;You need to find the IP of your Sonos device (e.g. from the Sonos mobile app &lt;code&gt;About My System&lt;/code&gt;), and put this in the &lt;code&gt;log-sonos-to-kafka.sh&lt;/code&gt; file and then execute it:&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;./log-sonos-to-kafka.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Launch ksqlDB CLI:&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker &lt;span style=&#34;color:#008000&#34;&gt;exec&lt;/span&gt; -it ksqldb-cli bash -c &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;echo -e &amp;#34;\n\n⏳ Waiting for ksqlDB to be available before launching CLI\n&amp;#34;; while : ; do curl_status=$(curl -s -o /dev/null -w %{http_code} http://ksqldb-server:8088/info) ; echo -e $(date) &amp;#34; ksqlDB server listener HTTP state: &amp;#34; $curl_status &amp;#34; (waiting for 200)&amp;#34; ; if [ $curl_status -eq 200 ] ; then  break ; fi ; sleep 5 ; done ; ksql http://ksqldb-server:8088&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then run through the article as shown, and enjoy!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You&amp;#8217;ll find Grafana at &lt;a href=&#34;http://localhost:3000&#34; class=&#34;bare&#34;&gt;http://localhost:3000&lt;/a&gt; (login &lt;code&gt;admin&lt;/code&gt;/&lt;code&gt;admin&lt;/code&gt;) and Chronograf at &lt;a href=&#34;http://localhost:8888/&#34; class=&#34;bare&#34;&gt;http://localhost:8888/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_appendix_todo&#34;&gt;Appendix : TODO&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The data at &lt;code&gt;http://&amp;lt;sonos player IP&amp;gt;:1400/support/review&lt;/code&gt; also includes other things that would be interesting to extract and plot:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;the signal strength between each device&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the &lt;code&gt;ifconfig&lt;/code&gt; stats for each device (packets received/dropped/errors etc)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_appendix_other_interesting_sonos_web_endpoints&#34;&gt;Appendix : Other interesting Sonos web endpoints&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/status/zp&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/status/proc/ath_rincon/status&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/status/ifconfig&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/status/showstp&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/tools.htm&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_footnote&#34;&gt;Footnote&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Turns out the timing of this blog &lt;a href=&#34;https://www.theverge.com/2019/12/30/21042871/sonos-recycle-mode-trade-up-program-controversy&#34;&gt;wasn&amp;#8217;t so great&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Thread! I just got a letter from &lt;a href=&#34;https://twitter.com/Sonos?ref_src=twsrc%5Etfw&#34;&gt;@Sonos&lt;/a&gt; about one of my old speakers. At face value it seems innocuous, but read between the lines and it&amp;#39;s actually fairly threatening. &lt;a href=&#34;https://t.co/b0DZCrBuwW&#34;&gt;pic.twitter.com/b0DZCrBuwW&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sean Bonner Ⓥ (@seanbonner) &lt;a href=&#34;https://twitter.com/seanbonner/status/1219760460028760065?ref_src=twsrc%5Etfw&#34;&gt;January 21, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    <item>
      <title>UnsupportedClassVersionError: `&lt;x&gt;` has been compiled by a more recent version of the Java Runtime</title>
      <link>https://rmoff.net/2020/01/21/unsupportedclassversionerror-x-has-been-compiled-by-a-more-recent-version-of-the-java-runtime/</link>
      <pubDate>2020-01-21</pubDate>
      
      <guid>https://rmoff.net/2020/01/21/unsupportedclassversionerror-x-has-been-compiled-by-a-more-recent-version-of-the-java-runtime/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/01/IMG_2114.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This article is just for Googlers and my future self encountering this error. Recently I was building a Docker image from the ksqlDB code base, and whilst it built successfully the ksqlDB server process in the Docker container when instantiated failed with a &lt;code&gt;UnsupportedClassVersionError&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;java.lang.UnsupportedClassVersionError: javafx/beans/value/ObservableValue has been compiled by a more recent version of the Java Runtime &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;class file version &lt;span style=&#34;color:#666&#34;&gt;54&lt;/span&gt;.0&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;, this version of the Java Runtime only recognizes class file versions up to &lt;span style=&#34;color:#666&#34;&gt;52&lt;/span&gt;.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here&amp;#8217;s how I fixed it, courtesy of help from my colleagues Colin and Tim.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Download &lt;a href=&#34;https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html&#34;&gt;JDK 8 (&#34;Java SE&#34;)&lt;/a&gt; and install it&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;On my Mac I had an existing Java, &lt;a href=&#34;https://medium.com/@devkosal/switching-java-jdk-versions-on-macos-80bc868e686a&#34;&gt;this article&lt;/a&gt; showed how to list them and switch between them&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ /usr/libexec/java_home -V

Matching Java Virtual Machines &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;:
    &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;.0.2, x86_64:	&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;OpenJDK 12.0.2&amp;#34;&lt;/span&gt;	/Library/Java/JavaVirtualMachines/adoptopenjdk-12.0.2.jdk/Contents/Home
    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.8.0_241, x86_64:	&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Java SE 8&amp;#34;&lt;/span&gt;	/Library/Java/JavaVirtualMachines/jdk1.8.0_241.jdk/Contents/Home&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set the &lt;code&gt;JAVA_HOME&lt;/code&gt; for your current shell to JDK 8&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#008000&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#19177c&#34;&gt;JAVA_HOME&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;`&lt;/span&gt;/usr/libexec/java_home -v &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.8&lt;span style=&#34;color:#ba2121&#34;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the same shell, run&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;`&lt;/span&gt;mvn clean&lt;span style=&#34;color:#ba2121&#34;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the same shell, run the actual Maven build, which will now be done under Java 8 and should work 🤞&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Changing the Logging Level for Kafka Connect Dynamically</title>
      <link>https://rmoff.net/2020/01/16/changing-the-logging-level-for-kafka-connect-dynamically/</link>
      <pubDate>2020-01-16</pubDate>
      
      <guid>https://rmoff.net/2020/01/16/changing-the-logging-level-for-kafka-connect-dynamically/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/01/IMG_0102.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Logs are magical things. They tell us what an application is doing—or not doing. They help us debug problems. As it happens, they also underpin the &lt;a href=&#34;https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying&#34;&gt;entire philosophy of Apache Kafka&lt;/a&gt;, but that&amp;#8217;s a story for another day. Today we&amp;#8217;re talking about logs written by Kafka Connect, and how we can change the amount of detail written.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;By default, Kafka Connect will write logs at &lt;code&gt;INFO&lt;/code&gt; and above. So when it starts up, the settings that it&amp;#8217;s using, and any &lt;code&gt;WARN&lt;/code&gt; or &lt;code&gt;ERROR&lt;/code&gt; messages along the way - a missing configuration, a broken connector, and so on. If you want to peer under the covers of what&amp;#8217;s happening, perhaps in a given connector, you&amp;#8217;d want to see &lt;code&gt;DEBUG&lt;/code&gt; or even &lt;code&gt;TRACE&lt;/code&gt; messages too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Until Apache Kafka 2.4 it was necessary to bring down the Kafka Connect worker, &lt;a href=&#34;https://rmoff.net/post/kafka-connect-change-log-level-and-write-log-to-file/&#34;&gt;change the log configuration file&lt;/a&gt;, and restart the worker. There are a few problems with this approach:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Where&amp;#8217;s the log configuration file? It can be fiddly to find, especially if you&amp;#8217;re not regularly working with it&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you&amp;#8217;re troubleshooting a connector with an issue that&amp;#8217;s intermittent, restarting the worker may clear the problem, so you lose the opportunity to see the more detailed log&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you&amp;#8217;re trying to get the log files for just a certain element of the logs generated it can be trial-and-error to get the configuration for this, and thus a really long-winded process with stopping and starting the worker each time until you get it right&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_changing_the_log_level_of_kafka_connect&#34;&gt;Changing the log level of Kafka Connect&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the implementation of &lt;a href=&#34;https://cwiki.apache.org/confluence/display/KAFKA/KIP-495%3A+Dynamically+Adjust+Log+Levels+in+Connect&#34;&gt;KIP-495&lt;/a&gt; it&amp;#8217;s possible to leave the Kafka Connect worker running and change log levels dynamically. This is &lt;strong&gt;VERY&lt;/strong&gt; useful. Let me show you why.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To start with Kafka Connect is running at the default &lt;code&gt;INFO&lt;/code&gt; level. We can confirm this by querying the new &lt;code&gt;admin/logger&lt;/code&gt; API:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ curl -s http://localhost:8083/admin/loggers/ | jq
&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;org.apache.kafka.connect.runtime.rest&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;level&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;WARN&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;org.reflections&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;level&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ERROR&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;root&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;level&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;INFO&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For reference, this corresponds to the three loggers that are configured in log4j:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ cat /etc/kafka/connect-log4j.properties

log4j.rootLogger&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;INFO, stdout
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;…&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
log4j.logger.org.reflections&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;ERROR
log4j.logger.org.apache.kafka.connect.runtime.rest&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;WARN&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can reference any particular logger that you want. Imagine you&amp;#8217;ve got a connector that you want to inspect, but without the noise of &lt;code&gt;TRACE&lt;/code&gt; logging throughout. You can target just this set of logs:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ curl -s -X PUT -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    http://localhost:8083/admin/loggers/org.apache.kafka.connect.runtime.WorkerSourceTask &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;TRACE&amp;#34;}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;script id=&#34;asciicast-rrTTMT9Bb3jpss0IhSsqIhJsT&#34; src=&#34;https://asciinema.org/a/rrTTMT9Bb3jpss0IhSsqIhJsT.js&#34; async&gt;&lt;/script&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To revert the logging you just re-issue the API call with a different &lt;code&gt;level&lt;/code&gt; set:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ curl -s -X PUT -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    http://localhost:8083/admin/loggers/org.apache.kafka.connect.runtime.WorkerSourceTask &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;INFO&amp;#34;}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_dynamic_log_levels_in_action_for_troubleshooting_debezium&#34;&gt;Dynamic log levels in action for troubleshooting Debezium&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I had great use for this just today when I was &lt;a href=&#34;https://stackoverflow.com/a/59756354/350613&#34;&gt;debugging a problem that someone was having with Debezium&lt;/a&gt;. In this case, I spun up Kafka Connect with its default config, and simply bumped up the logs for Debezium so that I could see in detail what it was doing:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ curl -s -X PUT -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    http://localhost:8083/admin/loggers/io.debezium &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;TRACE&amp;#34;}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;io.debezium&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;io.debezium.connector.mysql.MySqlConnector&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;io.debezium.connector.postgresql.PostgresConnector&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;io.debezium.util.IoUtil&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now I can see exactly what&amp;#8217;s going on&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;…
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;-01-16 &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;:47:26,864&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; TRACE Polling &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; events &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;io.debezium.connector.mysql.MySqlConnectorTask&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;-01-16 &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;:47:26,864&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; TRACE Polling &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; next batch of records &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;io.debezium.connector.mysql.BinlogReader&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;-01-16 &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;:47:26,866&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; INFO Creating thread debezium-mysqlconnector-asgard-binlog-client &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;io.debezium.util.Threads&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;-01-16 &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;:47:26,913&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; DEBUG Rotating logs: Event&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;header&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;EventHeaderV4&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;eventType&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;ROTATE, &lt;span style=&#34;color:#19177c&#34;&gt;serverId&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;headerLength&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;19&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;dataLength&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;nextPosition&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;flags&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;RotateEventData&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;binlogFilename&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;binlog.000002&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;binlogPosition&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;155&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}}&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;io.debezium.connector.mysql.BinlogReader&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;-01-16 &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;:47:26,914&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; DEBUG Clearing table converters &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;io.debezium.connector.mysql.RecordMakers&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;-01-16 &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;:47:26,916&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; TRACE Received event: Event&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;header&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;EventHeaderV4&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;eventType&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;ROTATE, &lt;span style=&#34;color:#19177c&#34;&gt;serverId&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;headerLength&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;19&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;dataLength&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;nextPosition&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;flags&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;RotateEventData&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;binlogFilename&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;binlog.000002&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;binlogPosition&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;155&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}}&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;io.debezium.connector.mysql.BinlogReader&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;-01-16 &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;:47:26,918&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; TRACE Ignoring event due to missing handler: Event&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;header&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;EventHeaderV4&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1579212895000&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;eventType&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;FORMAT_DESCRIPTION, &lt;span style=&#34;color:#19177c&#34;&gt;serverId&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;headerLength&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;19&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;dataLength&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;101&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;nextPosition&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;flags&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;FormatDescriptionEventData&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;binlogVersion&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;serverVersion&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;8.0.18&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;headerLength&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;19&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;dataLength&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;96&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;checksumType&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;CRC32&lt;span style=&#34;color:#666&#34;&gt;}}&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;io.debezium.connector.mysql.BinlogReader&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;-01-16 &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;:47:26,918&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; TRACE Received event: Event&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;header&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;EventHeaderV4&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1579212895000&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;eventType&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;FORMAT_DESCRIPTION, &lt;span style=&#34;color:#19177c&#34;&gt;serverId&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;headerLength&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;19&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;dataLength&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;101&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;nextPosition&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;flags&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;FormatDescriptionEventData&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;binlogVersion&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;serverVersion&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;8.0.18&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;headerLength&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;19&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;dataLength&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;96&lt;/span&gt;, &lt;span style=&#34;color:#19177c&#34;&gt;checksumType&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;CRC32&lt;span style=&#34;color:#666&#34;&gt;}}&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;io.debezium.connector.mysql.BinlogReader&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;-01-16 &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;:47:31,929&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; TRACE Completed batch of &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; records &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;io.debezium.connector.mysql.BinlogReader&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
…&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and when I&amp;#8217;m done troubleshooting I can leave the stack undisturbed and simple dial down the logging:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ curl -s -X PUT -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    http://localhost:8083/admin/loggers/io.debezium &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;INFO&amp;#34;}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;No more restarting workers, no more fiddling with logging configuration files - just simple and straightforward dynamic log levels 😍&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_preset_values_for_troubleshooting_connectors&#34;&gt;Preset values for troubleshooting connectors&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Set &lt;code&gt;TRACE&lt;/code&gt; logging for all but the noisiest of logs:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;curl -s -X PUT http://localhost:8083/admin/loggers/root -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;TRACE&amp;#34;}&amp;#39;&lt;/span&gt; | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
curl -s -X PUT http://localhost:8083/admin/loggers/org.apache.kafka.clients.consumer.internals -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;INFO&amp;#34;}&amp;#39;&lt;/span&gt; | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
curl -s -X PUT http://localhost:8083/admin/loggers/org.apache.kafka.clients.FetchSessionHandler -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;INFO&amp;#34;}&amp;#39;&lt;/span&gt; | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
curl -s -X PUT http://localhost:8083/admin/loggers/org.apache.kafka.clients.Metadata -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;INFO&amp;#34;}&amp;#39;&lt;/span&gt; | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
curl -s -X PUT http://localhost:8083/admin/loggers/org.apache.kafka.clients.NetworkClient -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;INFO&amp;#34;}&amp;#39;&lt;/span&gt; | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
curl -s -X PUT http://localhost:8083/admin/loggers/org.apache.kafka.common.metrics -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;INFO&amp;#34;}&amp;#39;&lt;/span&gt; | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
curl -s -X PUT http://localhost:8083/admin/loggers/org.eclipse.jetty -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;INFO&amp;#34;}&amp;#39;&lt;/span&gt; | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Trace specific connectors:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;curl -s -X PUT http://localhost:8083/admin/loggers/io.debezium -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;TRACE&amp;#34;}&amp;#39;&lt;/span&gt; | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
curl -s -X PUT http://localhost:8083/admin/loggers/io.confluent.influxdb -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;TRACE&amp;#34;}&amp;#39;&lt;/span&gt; | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Dial down the logging a bit:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;curl -s -X PUT http://localhost:8083/admin/loggers/io.confluent.influxdb -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;DEBUG&amp;#34;}&amp;#39;&lt;/span&gt; | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
curl -s -X PUT http://localhost:8083/admin/loggers/org.apache.kafka.connect.runtime -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;INFO&amp;#34;}&amp;#39;&lt;/span&gt; | jq &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    <item>
      <title>How to win [or at least not suck] at the conference abstract submission game</title>
      <link>https://rmoff.net/2020/01/16/how-to-win-or-at-least-not-suck-at-the-conference-abstract-submission-game/</link>
      <pubDate>2020-01-16</pubDate>
      
      <guid>https://rmoff.net/2020/01/16/how-to-win-or-at-least-not-suck-at-the-conference-abstract-submission-game/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/01/IMG_2206.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just over a year ago, I put together the crudely-titled &lt;a href=&#34;https://rmoff.net/2018/12/19/quick-thoughts-on-not-writing-a-crap-abstract/&#34;&gt;&#34;Quick Thoughts on Not Writing a Crap Abstract&#34;&lt;/a&gt; after reviewing a few dozen conference abstracts. This time around I&amp;#8217;ve had the honour of being on a conference programme committee and with it the pleasure of reading 250+ abstracts—from which I have some more snarky words of wisdom to impart on the matter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_remind_mehow_does_this_conference_game_work&#34;&gt;Remind me…how does this conference game work?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Before we really get into it, let&amp;#8217;s recap how this whole game works, because plenty of people are new to conference speaking.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;A conference will usually have a &#34;call for papers&#34; (CfP) that is open for a period of time, during which you can submit your &#34;paper&#34;. Except, this isn&amp;#8217;t an academic conference to which you &lt;strong&gt;actually&lt;/strong&gt; submit a paper for peer-review prior to presenting it. Technical conferences generally work on &#34;abstracts&#34;.&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your abstract is a description of the talk that you intend to give. At this stage its sole purpose is as a &#34;pitch&#34; to the conference programme committee. &lt;strong&gt;You do not need to have written your talk before submitting the abstract&lt;/strong&gt;. In fact, if it&amp;#8217;s a new talk, I wouldn&amp;#8217;t write it until you get it accepted somewhere. Abstracts let you test the water for an idea, and once you have an audience for it, &lt;strong&gt;then&lt;/strong&gt; you can develop it into a talk.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the CfP has closed (and occasionally before) the conference&amp;#8217;s programme committee will review all of the submitted abstracts.&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Allow me to let you into a dirty little secret: not every abstract is always going to get read in its entirety and at length&lt;/em&gt;. Conferences will have &lt;em&gt;hundreds&lt;/em&gt; (if not thousands) of submissions, and most of the time the programme committee will be volunteers kindly giving up their time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Consider this: if you have 200 abstracts to review and spend &lt;strong&gt;just two minutes&lt;/strong&gt; on each, that&amp;#8217;s already nearly seven hours. And think what you can actually do in that time (including the context switching between subjects, opening the abstract, logging the score). It&amp;#8217;s not a lot…scan the title, start reading the abstract…&lt;strong&gt;tick tock…DONE. NEXT ABSTRACT&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Even allowing for a more leisurely review process, the point still stands: &lt;strong&gt;you need to stack the odds in your favour&lt;/strong&gt; because in general if your abstract is not &lt;em&gt;crystal clear&lt;/em&gt; people are not going to go searching through it to discern what you meant - it&amp;#8217;ll just go onto the &#39;maybe&#39; or &#39;nope&#39; pile.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The programme committee decides on the talks to accept and send out notifications.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Your talk got accepted? Yay! Now you get to go and write it :)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your talk didn&amp;#8217;t get accepted? Never mind. In 2019 I got accepted by 57% of conferences to which I submitted - which is the same as saying that pretty much half the conferences reject every submission - and I&amp;#8217;ve been doing this a while so know a thing or two about crafting abstracts. Not to say they couldn&amp;#8217;t be improved, but just to give you an idea of how often you might strike out.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Don&amp;#8217;t hold off submitting to speak at conferences until your dream conference (Kafka Summit, obviously) comes up. I&amp;#8217;m not saying to submit your talk to &lt;em&gt;every single conference ever&lt;/em&gt;. But I am saying get practice in writing abstracts, navigating the CfP process, and getting experience speaking - all of these will help you, in the long run, to load the dice in your favour when it comes to conferences at which you &lt;em&gt;really really&lt;/em&gt; want to speak.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_show_that_you_care&#34;&gt;Show that you care&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you&amp;#8217;re serious about wanting to speak at a conference then I would recommend that you &lt;strong&gt;invest some serious time in preparing your abstract&lt;/strong&gt;. You need to do everything you can to show the programme committee of a conference that &lt;strong&gt;you deserve that speaking slot&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One way that you do this is by showing that you have taken the CfP process seriously. Just like teachers at school could spot the homework that was done whilst sat on the bus ride to school the day it was due in, the same goes for your conference abstracts. Abstracts that are mistargeted, lazily written, poorly spelt (plus all the things I list below too) shout out &#34;&lt;em&gt;Yeah I fancy speaking at your conference, but I&amp;#8217;ve got better things to do than spend time on this…but can I do a talk anyway?&lt;/em&gt;&#34;. Or to put it more simply from how the programme committee might see it when weighing up your abstract against others: &#34;&lt;em&gt;&#39;Do I feel lucky?&#39; Well, do you, punk?&lt;/em&gt;&#34;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here are some concrete ways you can ensure you&amp;#8217;re doing everything to prepare your abstract:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;READ THIS ADVICE! Not just mine, but all the other advice that&amp;#8217;s out there. You would be surprised how many people don&amp;#8217;t. A lot of this process is &#39;playing the game&#39;, and these kinds of blogs all spell out the rules to follow:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://sqlblog.com/blogs/adam_machanic/archive/2013/02/22/*capturing-attention-writing-great-session-descriptions.aspx&#34;&gt;Adam Machanic - Capturing Attention: Writing Great Session Descriptions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.pythian.com/blog/concrete-advice-for-abstract-writers/&#34;&gt;Gwen Shapira - Concrete Advice for Abstract Writers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://dbakevlar.com/2013/10/abstracts-reviews-and-conferences-oh-my/&#34;&gt;Kellyn Pot’Vin-Gorman - Abstracts, Reviews and Conferences, Oh My!&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://alistapart.com/article/conference-proposals-that-dont-suck&#34;&gt;Russ Unger - Conference Proposals that Don’t Suck&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mwidlake.wordpress.com/2015/04/17/tips-on-submitting-an-abstract-to-conference/&#34;&gt;Martin Widlake - Tips on Submitting an Abstract to Conference&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://bridgetkromhout.com/blog/give-actionable-takeaways/&#34;&gt;Bridget Kromhout - give actionable takeaways&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Proofread your abstract. Read it out loud (not just mutter it under your breath, but actually out loud). Proofread it again. Use &lt;a href=&#34;https://grammarly.com&#34;&gt;Grammarly&lt;/a&gt; to proofread it. There is no excuse for spelling or grammatical errors and they give a REALLY bad impression for your abstract because they imply a lack of attention to detail that the programme committee might assume will be present in your talk too.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get others to review your abstract. Put it in a Google Doc, give people comment access, and send them the link. A couple of tips for getting the most out of this:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Don&amp;#8217;t do it the day before the abstract is due in. Make sure there&amp;#8217;s enough time for you to review the changes that might be suggested.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Respect the reviewer&amp;#8217;s time. Don&amp;#8217;t send over a draft abstract you just chucked together. It&amp;#8217;s not their job to write it for you, but to &lt;em&gt;help&lt;/em&gt; you write a good abstract. Make sure you&amp;#8217;ve read some of the material I&amp;#8217;ve linked to above and that you&amp;#8217;re not repeating some of the basic mistakes that show you&amp;#8217;ve not really spent any time on this.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get some speaking experience. This is not about the abstract as such, but speaking in general. Speak at meetups. If a reviewer is wavering on your talk then you having zero experience may push them to reject. Meetups always want speakers—it&amp;#8217;s a great way to trial your talks, develop your relationship with the community - and to increase your hours in front of an audience.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_why_didnt_my_talk_get_accepted&#34;&gt;Why didn&amp;#8217;t my talk get accepted?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Whilst these are specific to a Kafka-focussed conference, the premise of them will be transferable to other technologies.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Scale alone does not get you a speaking slot&lt;/strong&gt;. I don&amp;#8217;t care if you&amp;#8217;re processing 1 gazillion messages - that in itself is not a 45-minute conference talk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Just because you use Kafka in your architecture doesn&amp;#8217;t itself mean that the audience want to hear about your bespoke Llama-shaving software you wrote with it. Make the talk about the technology or the problems you solved—not the bespoke software that you wrote (that&amp;#8217;s just your vehicle for the story that you&amp;#8217;re going to tell).&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Kafka is a fairly mature technology now. &#34;Show &amp;amp; Tell&#34; is not enough. Just because you have a system using it in Production, that&amp;#8217;s not enough. You need something engaging; a hook, a story. &#34;We&amp;#8217;re using Kafka, we&amp;#8217;ll talk about the problems we encountered&#34; is not compelling. It&amp;#8217;s the same as probably 75% of the other abstracts.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pay attention to the conference subject(s)&lt;/strong&gt;. If it&amp;#8217;s a Kafka conference don&amp;#8217;t submit a talk that&amp;#8217;s about a technology that&amp;#8217;s not Kafka unless you can clearly explain in your abstract why it&amp;#8217;s relevant.&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Your use of the technology needs to be relevant too. If you use Kafka to stream your messages in but then your talk is 90% all about how you use Spark to process them I am going to wonder what it&amp;#8217;s doing at a Kafka conference. Maybe a great talk for Strata, but not a Kafka conference.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Read the CfP closely - conferences will say what kind of talks they want, what subjects and technologies they want.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kafka and Kubernetes, it&amp;#8217;s &lt;em&gt;so&lt;/em&gt; 2019 😜&lt;/strong&gt;. Either get &lt;em&gt;ahead&lt;/em&gt; of the BS curve if that&amp;#8217;s your intended route in for a talk—or if you do want to talk about something that&amp;#8217;s now &#34;early majority&#34; then make sure you&amp;#8217;re pitching beyond simply &#34;hey &amp;lt;buzzwords!&amp;gt;&#34; and instead have something to say about it that others don&amp;#8217;t.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_abstract_specifics&#34;&gt;Abstract specifics&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here are some of the common mistakes that I&amp;#8217;ve noticed people make. Some of them you might disagree with, but in general if you can check off all this list as things you&amp;#8217;ve avoided doing then you&amp;#8217;re off to a good start.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I don&amp;#8217;t care what your system&amp;#8217;s internal name is and nor do conference attendees. It&amp;#8217;s just confusing, even if it&amp;#8217;s the wittiest acronym ever.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Think about &lt;strong&gt;the audience&lt;/strong&gt;. What are they going to &lt;strong&gt;gain&lt;/strong&gt; from attending your talk? Ensure that your abstract makes that clear. If you&amp;#8217;re talking about an implementation then focus on something relevant within what you built that you want to share with people for them to benefit from.&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An analogy would be the 1000 photos from your latest holiday. Do you take five photos of that 1000 and weave a good story around each one, or do you subject someone to every single step and sight of the journey with every one of those 1000 photos?&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Capitalise your words correctly (Kafka has a Kapital K!) ESPECIALLY in your titles! If you don&amp;#8217;t then it looks sloppy and gives a bad impression from the outset.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don&amp;#8217;t include &lt;strong&gt;all&lt;/strong&gt; the URLs! Especially if it&amp;#8217;s plain text then a dozen &lt;code&gt;http://&lt;/code&gt; quickly pollute the readability of the text. You only need one or two at the very most. You&amp;#8217;re writing an abstract, not a blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&#34;&lt;em&gt;If there&amp;#8217;s time&lt;/em&gt;&#34; / &#34;&lt;em&gt;Bonus content if time permits&lt;/em&gt;&#34; - don&amp;#8217;t put this in your abstract. Either cover &amp;lt;x&amp;gt;, or don&amp;#8217;t. By putting this in you&amp;#8217;re suggesting to me that you don&amp;#8217;t really have a handle on what your talk will be like.&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Pro-tip: no-one will actually read your abstract back against the delivered talk. So long as you don&amp;#8217;t completely lie and deliver a talk about Mozart when you promised the crowd Meatloaf, you are fine to ad-lib content that wasn&amp;#8217;t included in your abstract.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Just as you should not be terse in your abstract, do not be too verbose.&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The reviewer will get bored and be desperate for a tl;dr&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it suggests that if you cannot be clear and concise in your abstract maybe your talk will also be waffly and wordy.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don&amp;#8217;t submit too many abstracts. If I see your name multiple times my eyes as a reviewer start to glaze over. Pick a small handful of your best topics and pitch those. Focus on the conference and work out which is likely to fit best. If you really have half a dozen talks that are all perfect for the conference then just pick the ones that &lt;strong&gt;you&lt;/strong&gt; would like to deliver most.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The few hundred words that you have in your abstract are your &lt;strong&gt;only&lt;/strong&gt; opportunity to pitch your talk to the programme committee. Take care with those words and make them justify their space on the screen. Don&amp;#8217;t assume that the programme committee will have mind-reading powers and will somehow magically know what an amazing talk you &lt;em&gt;might&lt;/em&gt; give - lay it out in front of them in the abstract.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Links to talks and blogs are useful to indicate that you&amp;#8217;ve got experience in the subject, but they are not a substitute for a good abstract. Chances are the programme committee won&amp;#8217;t have time to read and watch them, so you still need to nail the abstract.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use white space! Use paragraphs! Confronted with this, how many people will take the time to pick through it?&lt;/p&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/01/ks02.png&#34; alt=&#34;ks02&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Compared to this, where the paragraph breaks make it nice and easy to grok:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/01/ks01.png&#34; alt=&#34;ks01&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_thoughts_questions&#34;&gt;Thoughts? Questions?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/rmoff&#34;&gt;@ me on Twitter!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    <item>
      <title>Exploring ksqlDB window start time</title>
      <link>https://rmoff.net/2020/01/09/exploring-ksqldb-window-start-time/</link>
      <pubDate>2020-01-09</pubDate>
      
      <guid>https://rmoff.net/2020/01/09/exploring-ksqldb-window-start-time/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/01/IMG_2144.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Prompted by &lt;a href=&#34;https://stackoverflow.com/questions/59629748/ksql-aggregating-data-based-on-last-1-year-365-days&#34;&gt;a question on StackOverflow&lt;/a&gt; I had a bit of a dig into how windows behave in ksqlDB, specifically with regards to their start time. This article shows also how to create test data in ksqlDB and create data to be handled with a timestamp in the past.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For a general background to windowing in ksqlDB see &lt;a href=&#34;https://docs.ksqldb.io/en/latest/concepts/time-and-windows-in-ksqldb-queries/&#34;&gt;the excellent docs&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The nice thing about recent releases of ksqlDB/KSQL is that you can create and populate streams directly with &lt;code&gt;CREATE STREAM&lt;/code&gt; and &lt;code&gt;INSERT INTO&lt;/code&gt; respectively. Much as I love kafkacat, being able to build a whole example within the ksqlDB CLI is very useful.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_create_the_stream&#34;&gt;Create the stream&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This creates the stream as well as the underlying topic. Since the topic doesn&amp;#8217;t exist already I&amp;#8217;ve specified its name and also &lt;code&gt;PARITIONS&lt;/code&gt; - without these ksqlDB won&amp;#8217;t create it for me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM SOURCE_DATA (OP_TS &lt;span style=&#34;color:#008000&#34;&gt;BIGINT&lt;/span&gt;, CUSTOMER &lt;span style=&#34;color:#008000&#34;&gt;VARCHAR&lt;/span&gt;, COST &lt;span style=&#34;color:#008000&#34;&gt;INT&lt;/span&gt;) 
  &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;MY_DATA&amp;#39;&lt;/span&gt;, 
        VALUE_FORMAT&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;, 
        PARTITIONS&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;OP_TS&amp;#39;&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that I&amp;#8217;ve created &lt;code&gt;OP_TS&lt;/code&gt; to hold the timestamp as an epoch (hence &lt;code&gt;BIGINT&lt;/code&gt;) and indicated to ksqlDB that this column is to be used as the timestamp for the records when doing any time-based processing. By default ksqlDB will use the timestamp of the Kafka message.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_populate_the_stream&#34;&gt;Populate the stream&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using &lt;a href=&#34;https://www.epochconverter.com/&#34; class=&#34;bare&#34;&gt;https://www.epochconverter.com/&lt;/a&gt; for ease I came up with a handful of times within the past year, and inserted messages into the stream for these:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; SOURCE_DATA (OP_TS, CUSTOMER, COST) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;1549715863000&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; SOURCE_DATA (OP_TS, CUSTOMER, COST) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;1560083863000&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; SOURCE_DATA (OP_TS, CUSTOMER, COST) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;1574339863000&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; SOURCE_DATA (OP_TS, CUSTOMER, COST) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;1575981463000&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; SOURCE_DATA (OP_TS, CUSTOMER, COST) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;1576931863000&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; SOURCE_DATA (OP_TS, CUSTOMER, COST) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;1578573463000&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_query_the_stream&#34;&gt;Query the stream&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here&amp;#8217;s how the data looks. Note a few things:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;The use of &lt;code&gt;TIMESTAMPTOSTRING&lt;/code&gt; to make the milliseconds-since-epoch more readable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;UNIX_TIMESTAMP&lt;/code&gt; function is used to do some date maths to show how long ago from now the timestamp is.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ROWTIME&lt;/code&gt; and &lt;code&gt;OP_TS&lt;/code&gt; match, because that&amp;#8217;s what we told ksqlDB with the &lt;code&gt;WITH TIMESTAMP&lt;/code&gt; clause in the &lt;code&gt;CREATE STREAM&lt;/code&gt;. If we hadn&amp;#8217;t, then the &lt;code&gt;ROWTIME&lt;/code&gt; would just be the time at which the rows were `INSERT`ed above.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(ROWTIME,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Europe/London&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; ROWTIME_STR,
             TIMESTAMPTOSTRING(OP_TS,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Europe/London&amp;#39;&lt;/span&gt;)   &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; OP_TS, 
             (UNIX_TIMESTAMP()&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;OP_TS) &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; DAYS_DIFF , 
             CUSTOMER, 
             COST 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SOURCE_DATA 
        EMIT CHANGES;

&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+--------------------+----------+-----------+-----+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ROWTIME_STR         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;OP_TS               &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;DAYS_DIFF &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;CUSTOMER   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;COST &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+--------------------+----------+-----------+-----+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;09&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;09&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;334&lt;/span&gt;       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;09&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;09&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;214&lt;/span&gt;       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;49&lt;/span&gt;        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt;        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;19&lt;/span&gt;        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;09&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;09&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_tumbling_window_examples&#34;&gt;Tumbling window examples&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here&amp;#8217;s the output of tumbling windows of various sizes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;7 Days&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(WINDOWSTART(),&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Europe/London&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; WINDOW_START_TS, 
             CUSTOMER, 
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SUM&lt;/span&gt;(COST) 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SOURCE_DATA 
                WINDOW TUMBLING (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SIZE&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;7&lt;/span&gt; DAYS) 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; CUSTOMER 
        EMIT CHANGES ;

&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;----------------------+----------+------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;WINDOW_START_TS       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;CUSTOMER  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;KSQL_COL_2  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;----------------------+----------+------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;07&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;06&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;05&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;19&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;09&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is pretty much what we&amp;#8217;d expect to see&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;31 days&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I was hoping for a month, but ksqlDB only supports:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Caused by: line 1:160: mismatched input &#39;MONTH&#39; expecting {&#39;DAY&#39;, &#39;HOUR&#39;,
        &#39;MINUTE&#39;, &#39;SECOND&#39;, &#39;MILLISECOND&#39;, &#39;DAYS&#39;, &#39;HOURS&#39;, &#39;MINUTES&#39;, &#39;SECONDS&#39;,
        &#39;MILLISECONDS&#39;}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Hence here&amp;#8217;s 31 days instead:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(WINDOWSTART(),&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Europe/London&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; WINDOW_START_TS, 
             CUSTOMER, 
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SUM&lt;/span&gt;(COST) 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SOURCE_DATA 
                WINDOW TUMBLING (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SIZE&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;31&lt;/span&gt; DAYS) 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; CUSTOMER 
        EMIT CHANGES ;    

&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;-----------------------+----------+------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;WINDOW_START_TS        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;CUSTOMER  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;KSQL_COL_2  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;-----------------------+----------+------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;05&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;28&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;28&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;29&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that two of the values (for &lt;code&gt;2019-12-10&lt;/code&gt;, &lt;code&gt;2019-12-21&lt;/code&gt;) fall within the same window (starting &lt;code&gt;2019-11-28&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;365 days&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As noted above ksqlDB support &lt;code&gt;DAYS&lt;/code&gt; as the largest unit of time, so I&amp;#8217;ll have to approximate 1 year ~~ 365 days&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(WINDOWSTART(),&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Europe/London&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; WINDOW_START_TS, 
             CUSTOMER, 
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SUM&lt;/span&gt;(COST) 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SOURCE_DATA 
                WINDOW TUMBLING (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SIZE&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt; DAYS) 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; CUSTOMER 
        EMIT CHANGES ;    

&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;-----------------------+----------+------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;WINDOW_START_TS        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;CUSTOMER  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;KSQL_COL_2  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;-----------------------+----------+------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2018&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So this is where it gets interesting - looking back on the query output above you can see we only have data within the last year, but for a tumbling window of 365 days we&amp;#8217;re getting two values, starting on December 20th of two consecutive years.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_window_start_date&#34;&gt;Window start &lt;strong&gt;date&lt;/strong&gt;&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When calculating an time window &lt;strong&gt;within a day&lt;/strong&gt; the window starts at midnight. For a window greater than a day, it seems that the window &lt;strong&gt;date&lt;/strong&gt; from which the window end date is calculated is based on &lt;a href=&#34;https://en.wikipedia.org/wiki/Unix_time&#34;&gt;Unix time&lt;/a&gt; (which also ties in with window sizes less than a day starting a midnight).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let&amp;#8217;s double-check this assumption. Unix time starts at 1st January 1970 00:00:00. Taking our window size of 365 days, this is:&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 50%;&#34;&gt;
&lt;col style=&#34;width: 50%;&#34;&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;days&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;365&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;hours&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;8760&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;minutes&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;525600&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;seconds&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;31536000&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;millseconds&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;31536000000&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now let&amp;#8217;s look at the epoch returned by &lt;code&gt;WINDOWSTART()&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; WINDOWSTART() &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; WINDOW_START_EPOCH,
             CUSTOMER,
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SUM&lt;/span&gt;(COST)
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SOURCE_DATA
                WINDOW TUMBLING (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SIZE&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;365&lt;/span&gt; DAYS)
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; CUSTOMER
        EMIT CHANGES ;

&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+---------+-----------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;WINDOW_START_EPOCH  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;CUSTOMER &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;KSQL_COL_2 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+---------+-----------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1545264000000&lt;/span&gt;       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1576800000000&lt;/span&gt;       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;A        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first of these is &lt;code&gt;1545264000000&lt;/code&gt;. What do we get if we divide this by the number of milliseconds in a 365-day window (&lt;code&gt;31536000000&lt;/code&gt;)? We find that it fits &lt;strong&gt;exactly&lt;/strong&gt;: &lt;code&gt;1545264000000➗31536000000 = 49&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This suggests that if you want to build monthly or yearly aggregates in ksqlDB that start based on the Gregorian calendar markers, ksqlDB will need to add support for &lt;code&gt;MONTH&lt;/code&gt; and &lt;code&gt;YEAR&lt;/code&gt; as window sizes (&lt;em&gt;tracking in &lt;a href=&#34;https://github.com/confluentinc/ksql/issues/1968&#34;&gt;issue #1968&lt;/a&gt;&lt;/em&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    <item>
      <title>Streaming messages from RabbitMQ into Kafka with Kafka Connect</title>
      <link>https://rmoff.net/2020/01/08/streaming-messages-from-rabbitmq-into-kafka-with-kafka-connect/</link>
      <pubDate>2020-01-08</pubDate>
      
      <guid>https://rmoff.net/2020/01/08/streaming-messages-from-rabbitmq-into-kafka-with-kafka-connect/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/01/IMG_2114.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This was prompted by &lt;a href=&#34;https://stackoverflow.com/questions/59632068/kafka-connect-is-sending-a-malformed-json&#34;&gt;a question&lt;/a&gt; on StackOverflow to which I thought the answer would be straightforward, but turned out not to be so. And then I got a bit carried away and ended up with a nice example of how you can handle schema-less data coming from a system such as RabbitMQ and apply a schema to it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
This same pattern for ingesting bytes and applying a schema will work with other connectors such as &lt;a href=&#34;https://www.confluent.io/hub/confluentinc/kafka-connect-jms&#34;&gt;JMS&lt;/a&gt;, &lt;a href=&#34;https://www.confluent.io/hub/confluentinc/kafka-connect-mqtt&#34;&gt;MQTT&lt;/a&gt;, and &lt;a href=&#34;https://www.confluent.io/hub/confluentinc/kafka-connect-activemq&#34;&gt;ActiveMQ&lt;/a&gt; etc
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_what_why&#34;&gt;What? Why?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/java/comments/elv88o/streaming_messages_from_rabbitmq_into_kafka_with/fdkftsw&#34;&gt;&lt;code&gt;aeveltstra&lt;/code&gt; had this very good question&lt;/a&gt;. I mean, RabbitMQ and Kafka, why would you want to integrate them? Seems weird, right? Here&amp;#8217;s my quick take on it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What? Why?&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Often RabbitMQ is in use already and it&amp;#8217;s easier to stream the messages from it into Kafka (e.g. to use with ksqlDB, drive other Kafka apps, persist for analysis elsewhere, etc) than it is to re-plumb the existing application(s) that are using RabbitMQ.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Why would you choose to implement Kafka next to an existing RabbitMQ? Don&amp;#8217;t they serve the same purpose?&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There is overlap for sure. Kafka tends to come into its own for things like scale, persistence, stream processing, integration with other technologies, and so on. In a large organisation (or even not-so-large) you&amp;#8217;ll often find different teams adopting different technologies, and so whilst it may seem odd to have both, you&amp;#8217;ll quite often see these similar (in part) technologies side-by-side.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
If you want to learn more about this, check out &lt;a href=&#34;https://www.confluent.io/whitepaper/comparing-confluent-platform-with-traditional-messaging-middleware/&#34;&gt;Comparing Confluent Platform with Traditional Messaging Middleware&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_setup_optional&#34;&gt;Setup (optional)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to follow along with this example, you can use Docker Compose to create the environment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Clone the repo&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/confluentinc/demo-scene.git
cd demo-scene/rabbitmq-into-kafka&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bring up the test environment&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker-compose up -d&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_create_queue_and_test_message_on_rabbitmq&#34;&gt;Create queue and test message on RabbitMQ&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;This uses the &lt;a href=&#34;https://www.rabbitmq.com/management.html&#34;&gt;Management API&lt;/a&gt; which has been enabled on the Docker container automagically.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Create the queue&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl --user guest:guest \
      -X PUT -H &#39;content-type: application/json&#39; \
      --data-binary &#39;{&#34;vhost&#34;:&#34;/&#34;,&#34;name&#34;:&#34;test-queue-01&#34;,&#34;durable&#34;:&#34;true&#34;,&#34;auto_delete&#34;:&#34;false&#34;,&#34;arguments&#34;:{&#34;x-queue-type&#34;:&#34;classic&#34;}}&#39; \
      &#39;http://localhost:15672/api/queues/%2F/test-queue-01&#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Confirm that the queue has been created&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -s --user guest:guest \
        -X GET -H &#39;content-type: application/json&#39; \
        &#39;http://localhost:15672/api/queues/%2F/&#39; | jq &#39;.[].name&#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&#34;test-queue-01&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Send a test message&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo &#39;{&#34;vhost&#34;:&#34;/&#34;,&#34;name&#34;:&#34;amq.default&#34;,&#34;properties&#34;:{&#34;delivery_mode&#34;:1,&#34;headers&#34;:{}},&#34;routing_key&#34;:&#34;test-queue-01&#34;,&#34;delivery_mode&#34;:&#34;1&#34;,&#34;payload&#34;:&#34;{\&#34;transaction\&#34;: \&#34;PAYMENT\&#34;, \&#34;amount\&#34;: \&#34;$125.0\&#34;, \&#34;timestamp\&#34;: \&#34;&#39;$(date)&#39;\&#34; }&#34;,&#34;headers&#34;:{},&#34;props&#34;:{},&#34;payload_encoding&#34;:&#34;string&#34;}&#39; |
curl --user guest:guest \
      -X POST -H &#39;content-type: application/json&#39; \
      --data-binary @-  \
      &#39;http://localhost:15672/api/exchanges/%2F/amq.default/publish&#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test consuming messages from the queue&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl --silent --user guest:guest \
        -X POST -H &#39;content-type: application/json&#39; \
        --data-binary &#39;{&#34;ackmode&#34;:&#34;ack_requeue_true&#34;,&#34;encoding&#34;:&#34;auto&#34;,&#34;count&#34;:&#34;10&#34;}&#39; \
        &#39;http://localhost:15672/api/queues/%2F/test-queue-01/get&#39; | jq &#39;.[].payload|fromjson&#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &#34;transaction&#34;: &#34;PAYMENT&#34;,
  &#34;amount&#34;: &#34;$125.0&#34;,
  &#34;timestamp&#34;: &#34;Wed 8 Jan 2020 10:41:45 GMT&#34;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can see the RabbitMQ Web UI (login &lt;code&gt;guest&lt;/code&gt;/&lt;code&gt;guest&lt;/code&gt;) at &lt;a href=&#34;http://localhost:15672/#/&#34; class=&#34;bare&#34;&gt;http://localhost:15672/#/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_create_the_kafka_connect_connector&#34;&gt;Create the Kafka Connect connector&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;This uses the &lt;a href=&#34;https://docs.confluent.io/current/connect/kafka-connect-rabbitmq/index.html&#34;&gt;RabbitMQ plugin for Kafka Connect&lt;/a&gt;, which has been installed in the Docker container already. You can install it yourself from &lt;a href=&#34;http://hub.confluent.io/&#34;&gt;Confluent Hub&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -i -X PUT -H  &#34;Content-Type:application/json&#34; \
    http://localhost:8083/connectors/source-rabbitmq-00/config \
    -d &#39;{
        &#34;connector.class&#34; : &#34;io.confluent.connect.rabbitmq.RabbitMQSourceConnector&#34;,
        &#34;kafka.topic&#34; : &#34;rabbit-test-00&#34;,
        &#34;rabbitmq.queue&#34; : &#34;test-queue-01&#34;,
        &#34;rabbitmq.username&#34;: &#34;guest&#34;,
        &#34;rabbitmq.password&#34;: &#34;guest&#34;,
        &#34;rabbitmq.host&#34;: &#34;rabbitmq&#34;,
        &#34;rabbitmq.port&#34;: &#34;5672&#34;,
        &#34;rabbitmq.virtual.host&#34;: &#34;/&#34;,
        &#34;confluent.license&#34;:&#34;&#34;,
        &#34;confluent.topic.bootstrap.servers&#34;:&#34;kafka:29092&#34;,
        &#34;confluent.topic.replication.factor&#34;:1,
        &#34;value.converter&#34;: &#34;org.apache.kafka.connect.converters.ByteArrayConverter&#34;,
        &#34;key.converter&#34;: &#34;org.apache.kafka.connect.storage.StringConverter&#34;
    } &#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the connector created we check that it&amp;#8217;s running:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -s &#34;http://localhost:8083/connectors?expand=info&amp;amp;expand=status&#34; | \
           jq &#39;. | to_entries[] | [ .value.info.type, .key, .value.status.connector.state,.value.status.tasks[].state,.value.info.config.&#34;connector.class&#34;]|join(&#34;:|:&#34;)&#39; | \
           column -s : -t| sed &#39;s/\&#34;//g&#39;| sort&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;source  |  source-rabbitmq-00  |  RUNNING  |  RUNNING  |  io.confluent.connect.rabbitmq.RabbitMQSourceConnector&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And then we can check the topic that&amp;#8217;s being written to. Here I&amp;#8217;m using kafkacat but you can use any Kafka consumer:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker exec kafkacat \
  kafkacat -b kafka:29092 \
           -t rabbit-test-00
           -C -u&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The message we sent to RabbitMQ shows up in Kafka:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;{&#34;transaction&#34;: &#34;PAYMENT&#34;, &#34;amount&#34;: &#34;$125.0&#34;, &#34;timestamp&#34;: &#34;Wed 8 Jan 2020 10:41:45 GMT&#34;}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you open another window and use the same &lt;code&gt;curl&lt;/code&gt; statement (bottom pane) above to send more messages to RabbitMQ, you&amp;#8217;ll see them appear in the Kafka topic (top pane) straight away:&lt;/p&gt;
&lt;/div&gt;
&lt;script id=&#34;asciicast-A0dpWpN7WVs1UVnf0BjLNqqnv&#34; src=&#34;https://asciinema.org/a/A0dpWpN7WVs1UVnf0BjLNqqnv.js&#34; async&gt;&lt;/script&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One of the important things to note in the configuration of the connector is that we&amp;#8217;re using the &lt;a href=&#34;https://cwiki.apache.org/confluence/display/KAFKA/KIP-128%3A+Add+ByteArrayConverter+for+Kafka+Connect&#34;&gt;&lt;code&gt;ByteArrayConverter&lt;/code&gt;&lt;/a&gt; for the value of the message, which just takes whatever bytes are on the RabbitMQ message and writes them to the Kafka message. Whilst on first look it appears that we&amp;#8217;ve got a JSON message on RabbitMQ and so would evidently use the JsonConverter, this is not the case. If we do that, the converter will try to encode the bytes as JSON, and we&amp;#8217;ll end up with this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&#34;eyJ0cmFuc2FjdGlvbiI6ICJQQVlNRU5UIiwgImFtb3VudCI6ICIkNDcuMyIsICJ0aW1lc3RhbXAiOiAiV2VkIDggSmFuIDIwMjAgMTM6MDE6MjEgR01UIiB9&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To understand more about converters and serialisation see this article: &lt;a href=&#34;https://www.confluent.io/blog/kafka-connect-deep-dive-converters-serialization-explained/&#34;&gt;Kafka Connect Deep Dive – Converters and Serialization Explained&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can dig into the payload further with kafkacat to examine the headers etc:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker exec kafkacat \
  kafkacat -b kafka:29092 -t rabbit-test-00 -C -u -q \
  -f &#39;Topic %t / Partition %p / Offset: %o / Timestamp: %T\nHeaders: %h\nKey (%K bytes): %k\nPayload (%S bytes): %s\n--\n&#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The output looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Topic rabbit-test-00 / Partition 0 / Offset: 48 / Timestamp: 1578480718010
Headers: rabbitmq.consumer.tag=amq.ctag--gWoke550mjIPbeJhquS9g,rabbitmq.content.type=NULL,rabbitmq.content.encoding=NULL,rabbitmq.delivery.mode=1,rabbitmq.priority=0,rabbitmq.correlation.id=NULL,rabbitmq.reply.to=NULL,rabbitmq.expiration=NULL,rabbitmq.message.id=NULL,rabbitmq.timestamp=NULL,rabbitmq.type=NULL,rabbitmq.user.id=NULL,rabbitmq.app.id=NULL,rabbitmq.delivery.tag=45,rabbitmq.redeliver=false,rabbitmq.exchange=,rabbitmq.routing.key=test-queue-01
Key (-1 bytes):
Payload (91 bytes): {&#34;transaction&#34;: &#34;PAYMENT&#34;, &#34;amount&#34;: &#34;$125.0&#34;, &#34;timestamp&#34;: &#34;Wed 8 Jan 2020 10:51:57 GMT&#34; }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_apply_a_schema_and_manipulate_the_data_in_ksqldb&#34;&gt;Apply a schema and manipulate the data in ksqlDB&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So far we&amp;#8217;ve got the message (which happens to be JSON) from RabbitMQ into a Kafka topic. Now let&amp;#8217;s actually declare the schema so that we can work with the data. For that we&amp;#8217;re going to use ksqlDB to do a little bit of stream processing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Fire up the ksqlDB CLI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker exec -it ksqldb-cli ksql http://ksqldb-server:8088&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Inspect the raw topic contents:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&amp;gt; PRINT &#39;rabbit-test-00&#39; FROM BEGINNING;
Format:JSON
{&#34;ROWTIME&#34;:1578477403591,&#34;ROWKEY&#34;:&#34;null&#34;,&#34;transaction&#34;:&#34;PAYMENT&#34;,&#34;amount&#34;:&#34;$125.0&#34;}
{&#34;ROWTIME&#34;:1578477598555,&#34;ROWKEY&#34;:&#34;null&#34;,&#34;transaction&#34;:&#34;PAYMENT&#34;,&#34;amount&#34;:&#34;$125.0&#34;}
{&#34;ROWTIME&#34;:1578478171540,&#34;ROWKEY&#34;:&#34;null&#34;,&#34;transaction&#34;:&#34;PAYMENT&#34;,&#34;amount&#34;:&#34;$125.0&#34;}
{&#34;ROWTIME&#34;:1578480036859,&#34;ROWKEY&#34;:&#34;null&#34;,&#34;transaction&#34;:&#34;PAYMENT&#34;,&#34;amount&#34;:&#34;$125.0&#34;,&#34;timestamp&#34;:&#34;Wed 8 Jan 2020 10:40:36 GMT&#34;}
{&#34;ROWTIME&#34;:1578480105771,&#34;ROWKEY&#34;:&#34;null&#34;,&#34;transaction&#34;:&#34;PAYMENT&#34;,&#34;amount&#34;:&#34;$125.0&#34;,&#34;timestamp&#34;:&#34;Wed 8 Jan 2020 10:41:45 GMT&#34;}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Declare the stream (which is just the existing Kafka topic with an explicit schema):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;CREATE STREAM rabbit (transaction VARCHAR,
                      amount VARCHAR,
                      timestamp VARCHAR)
  WITH (KAFKA_TOPIC=&#39;rabbit-test-00&#39;,
        VALUE_FORMAT=&#39;JSON&#39;);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we can query the stream of data, starting at the beginning:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&amp;gt; SET &#39;auto.offset.reset&#39; = &#39;earliest&#39;;
Successfully changed local property &#39;auto.offset.reset&#39; to &#39;earliest&#39;. Use the UNSET command to revert your change.

ksql&amp;gt; SELECT transaction, amount, timestamp FROM rabbit EMIT CHANGES;
+------------+---------+----------------------------+
|TRANSACTION |AMOUNT   |TIMESTAMP                   |
+------------+---------+----------------------------+
|PAYMENT     |$125.0   |null                        |
|PAYMENT     |$125.0   |null                        |
|PAYMENT     |$125.0   |null                        |
|PAYMENT     |$125.0   |Wed 8 Jan 2020 10:40:36 GMT |
|PAYMENT     |$125.0   |Wed 8 Jan 2020 10:41:45 GMT |&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;code&gt;AMOUNT&lt;/code&gt; column is clearly a currency, but the source data is a character string (&lt;code&gt;$125.0&lt;/code&gt;). Let&amp;#8217;s write a stream processor to split these into more appropriate columns, and also drop messages with no timestamp (that we&amp;#8217;ll class as invalid data for this example):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;CREATE STREAM TRANSACTIONS WITH (VALUE_FORMAT=&#39;AVRO&#39;) AS
  SELECT TRANSACTION AS TX_TYPE,
         SUBSTRING(AMOUNT,1,1) AS CURRENCY,
         CAST(SUBSTRING(AMOUNT,2,LEN(AMOUNT)-1) AS DECIMAL(9,2)) AS TX_AMOUNT,
         TIMESTAMP AS TX_TIMESTAMP
    FROM rabbit
   WHERE TIMESTAMP IS NOT NULL
    EMIT CHANGES;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This creates a new Kafka topic, populated by the transformed data driven by the original Kafka topic populated from RabbitMQ:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&amp;gt; SELECT TX_TYPE, CURRENCY, TX_AMOUNT, TX_TIMESTAMP FROM TRANSACTIONS EMIT CHANGES;
+--------+----------+----------+----------------------------+
|TX_TYPE |CURRENCY  |TX_AMOUNT |TX_TIMESTAMP                |
+--------+----------+----------+----------------------------+
|PAYMENT |$         |125.00    |Wed 8 Jan 2020 10:40:36 GMT |
|PAYMENT |$         |125.00    |Wed 8 Jan 2020 10:41:45 GMT |&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that the messages without a timestamp are not present in the new stream.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Compare our source schema:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&amp;gt; DESCRIBE rabbit;

Name                 : RABBIT
 Field       | Type
-----------------------------------------
 ROWTIME     | BIGINT           (system)
 ROWKEY      | VARCHAR(STRING)  (system)
 TRANSACTION | VARCHAR(STRING)
 AMOUNT      | VARCHAR(STRING)
 TIMESTAMP   | VARCHAR(STRING)
-----------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;with the transformed schema&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&amp;gt; DESCRIBE TRANSACTIONS;

Name                 : TRANSACTIONS
 Field        | Type
------------------------------------------
 ROWTIME      | BIGINT           (system)
 ROWKEY       | VARCHAR(STRING)  (system)
 TX_TYPE      | VARCHAR(STRING)
 CURRENCY     | VARCHAR(STRING)
 TX_AMOUNT    | DECIMAL
 TX_TIMESTAMP | VARCHAR(STRING)
------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Because we&amp;#8217;ve applied a schema to the data we can now make better sense of it, as well as do useful things like write it to a database. Since we have a proper schema for the data (stored for us in the Schema Registry because we&amp;#8217;re using Avro) Kafka Connect can actually build the target database table that it&amp;#8217;s going to write data to:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;CREATE SINK CONNECTOR SINK_POSTGRES WITH (
    &#39;connector.class&#39;     = &#39;io.confluent.connect.jdbc.JdbcSinkConnector&#39;,
    &#39;connection.url&#39;      = &#39;jdbc:postgresql://postgres:5432/&#39;,
    &#39;connection.user&#39;     = &#39;postgres&#39;,
    &#39;connection.password&#39; = &#39;postgres&#39;,
    &#39;topics&#39;              = &#39;TRANSACTIONS&#39;,
    &#39;key.converter&#39;       = &#39;org.apache.kafka.connect.storage.StringConverter&#39;,
    &#39;auto.create&#39;         = &#39;true&#39;,
    &#39;transforms&#39;          = &#39;dropSysCols&#39;,
    &#39;transforms.dropSysCols.type&#39; = &#39;org.apache.kafka.connect.transforms.ReplaceField$Value&#39;,
    &#39;transforms.dropSysCols.blacklist&#39; = &#39;ROWKEY,ROWTIME&#39;
  );&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now in Postgres we have the data almost as soon as it&amp;#8217;s written to RabbitMQ, with the light transformation applied to it:&lt;/p&gt;
&lt;/div&gt;
&lt;script id=&#34;asciicast-292407&#34; src=&#34;https://asciinema.org/a/292407.js&#34; async&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    <item>
      <title>Analysing network behaviour with ksqlDB and MongoDB</title>
      <link>https://rmoff.net/2019/12/20/analysing-network-behaviour-with-ksqldb-and-mongodb/</link>
      <pubDate>2019-12-20</pubDate>
      
      <guid>https://rmoff.net/2019/12/20/analysing-network-behaviour-with-ksqldb-and-mongodb/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2019/12/IMG_1399.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this post I want to build on &lt;a href=&#34;https://rmoff.net/2019/12/18/detecting-and-analysing-ssh-attacks-with-ksqldb/&#34;&gt;my previous one&lt;/a&gt; and show another use of the Syslog data that I&amp;#8217;m capturing. Instead of looking for &lt;a href=&#34;https://rmoff.net/2019/12/18/detecting-and-analysing-ssh-attacks-with-ksqldb/&#34;&gt;SSH attacks&lt;/a&gt;, I&amp;#8217;m going to analyse the behaviour of my networking components.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
You can find all the code to run this on &lt;a href=&#34;https://github.com/confluentinc/demo-scene/tree/master/syslog&#34;&gt;GitHub&lt;/a&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_getting_syslog_data_into_kafka&#34;&gt;Getting Syslog data into Kafka&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As before, let&amp;#8217;s create ourselves a &lt;a href=&#34;https://www.confluent.io/hub/confluentinc/kafka-connect-syslog&#34;&gt;syslog connector&lt;/a&gt; in ksqlDB:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;CREATE SOURCE CONNECTOR SOURCE_SYSLOG_UDP_01 WITH (
    &#39;tasks.max&#39; = &#39;1&#39;,
    &#39;connector.class&#39; = &#39;io.confluent.connect.syslog.SyslogSourceConnector&#39;,
    &#39;topic&#39; = &#39;syslog&#39;,
    &#39;syslog.port&#39; = &#39;42514&#39;,
    &#39;syslog.listener&#39; = &#39;UDP&#39;,
    &#39;syslog.reverse.dns.remote.ip&#39; = &#39;true&#39;,
    &#39;confluent.license&#39; = &#39;&#39;,
    &#39;confluent.topic.bootstrap.servers&#39; = &#39;kafka:29092&#39;,
    &#39;confluent.topic.replication.factor&#39; = &#39;1&#39;
);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Check that it&amp;#8217;s running :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DESCRIBE&lt;/span&gt; CONNECTOR SOURCE_SYSLOG_UDP_01;

Name                 : SOURCE_SYSLOG_UDP_01
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;Class&lt;/span&gt;                : io.confluent.&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;connect&lt;/span&gt;.syslog.SyslogSourceConnector
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;Type&lt;/span&gt;                 : &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;source&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;State&lt;/span&gt;                : RUNNING
WorkerId             : kafka&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;8083&lt;/span&gt;

 Task ID &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;State&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; Error Trace
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; RUNNING &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_configuring_unifi_devices_to_send_syslog_data_to_kafka&#34;&gt;Configuring Unifi devices to send Syslog data to Kafka&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now configure my networking equipment (switches, access points, routers) to route their syslog data to this machine&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/12/syslog_networking.png&#34; alt=&#34;syslog networking&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I&amp;#8217;m using &lt;a href=&#34;https://www.ui.com/&#34;&gt;Ubiquiti&lt;/a&gt;&#39;s &lt;a href=&#34;https://unifi-network.ui.com/&#34;&gt;UniFi&lt;/a&gt; network, so just make this configuration change through the UI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/12/unifi01.png&#34; alt=&#34;unifi01&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now if I dump the Syslog Kafka topic to screen I can see it being populated with messages from my network devices:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; PRINT syslog;
Format:AVRO
&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;19&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;24&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;35&lt;/span&gt; AM UTC, usgmoffattme, &lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;RFC3164&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;root : TTY=unknown ; PWD=/ ; USER=root ; COMMAND=/usr/sbin/ipsec statusall&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;usgmoffattme&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;level&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;tag&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;sudo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;extension&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;severity&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;appName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;facility&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;remoteAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;192.168.10.1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;rawMessage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;lt;86&amp;gt;Dec 20 10:24:35 usgmoffattme sudo:     root : TTY=unknown ; PWD=/ ; USER=root ; COMMAND=/usr/sbin/ipsec statusall&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;processId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;messageId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;structuredData&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceVendor&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceProduct&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceEventClassId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;1576837475000&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;19&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;25&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;52&lt;/span&gt; AM UTC, usgmoffattme, &lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;RFC3164&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;[WAN_IN-3006-A]IN=eth0 OUT=eth1 MAC=f0:9f:c2:12:a8:f4:04:2a:e2:c7:4c:1a:08:00 SRC=x.x.x.x DST=192.168.10.105 LEN=60 TOS=0x00 PREC=0x00 TTL=51 ID=30052 DF PROTO=TCP SPT=35214 DPT=22 WINDOW=29200 RES=0x00 SYN URGP=0 &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;usgmoffattme&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;level&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;tag&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;kernel&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;extension&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;severity&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;appName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;facility&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;remoteAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;192.168.10.1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;rawMessage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;lt;4&amp;gt;Dec 20 10:25:52 usgmoffattme kernel: [WAN_IN-3006-A]IN=eth0 OUT=eth1 MAC=f0:9f:c2:12:a8:f4:04:2a:e2:c7:4c:1a:08:00 SRC=x.x.x.x DST=192.168.10.105 LEN=60 TOS=0x00 PREC=0x00 TTL=51 ID=30052 DF PROTO=TCP SPT=35214 DPT=22 WINDOW=29200 RES=0x00 SYN URGP=0 &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;processId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;messageId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;structuredData&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceVendor&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceProduct&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceEventClassId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;1576837552000&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_analysing_syslog_hosts_with_ksqldb&#34;&gt;Analysing Syslog hosts with ksqlDB&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Let&amp;#8217;s have a look at which devices we&amp;#8217;ve got Syslog data for&lt;/strong&gt;. First off we&amp;#8217;ll declare a ksqlDB stream on top of the topic.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;CREATE STREAM SYSLOG WITH (KAFKA_TOPIC=&#39;syslog&#39;, VALUE_FORMAT=&#39;AVRO&#39;);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Since we&amp;#8217;re writing to the topic using Avro we don&amp;#8217;t need to enter a schema here (since it already exists in the Schema Registry). ksqlDB works with JSON and CSV (🤮) too but you&amp;#8217;d have to declare the schema at this point.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we can use the schema of the data to query the data. We&amp;#8217;re going to tell ksqlDB to read all the data in the Kafka topic by setting &lt;code&gt;SET &#39;auto.offset.reset&#39; = &#39;earliest&#39;;&lt;/code&gt; and then run an aggregation:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;, &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; SYSLOG_MESSAGE_COUNT &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SYSLOG &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt; EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;----------------------------------+---------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;                              &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;SYSLOG_MESSAGE_COUNT &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;----------------------------------+---------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;asgard03                          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;17278&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;BZ2,&lt;span style=&#34;color:#666&#34;&gt;24&lt;/span&gt;a43cde91a0,v4.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10871&lt;/span&gt;:   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3023&lt;/span&gt;                 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;BZ2,dc9fdbec6a10,v4.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10871&lt;/span&gt;:   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;5194&lt;/span&gt;                 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;MacBook&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;Pro                       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;42269&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;proxmox01                         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;37279&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;rpi&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;03&lt;/span&gt;                            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;30125&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;U7PG2,&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt;e829e930a0,v4.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10871&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;6592&lt;/span&gt;                 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;U7PG2,f09fc2238301,v4.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10871&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;38283&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;USC8,fcecdabfcf6d,v4.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;66&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10832&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;26&lt;/span&gt;                   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;usgmoffattme                      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;45695&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You might look at that query and think it looks pretty like any other SQL you&amp;#8217;ve seen, except for the &lt;code&gt;EMIT CHANGES&lt;/code&gt;. All that means is that ksqlDB will keep sending us the changes to the data as it occurs - so each new Syslog event that arrives will increase the aggregate value of the &lt;code&gt;COUNT(*)&lt;/code&gt; per host, and so it is re-emitted:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/12/ksqldb_syslog_01.gif&#34; alt=&#34;ksqldb syslog 01&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The alternative is to materialise this data into a state store…&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; HOST_SYSLOG_AGG &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;, 
               &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; MESSAGE_COUNT 
          &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SYSLOG 
      &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;…that we can then query directly:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; MESSAGE_COUNT &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; HOST_SYSLOG_AGG &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; ROWKEY&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;asgard03&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;-----------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;MESSAGE_COUNT    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;-----------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;17278&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
Query terminated
ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/12/ksqldb_syslog_02.gif&#34; alt=&#34;ksqldb syslog 02&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that the query says &lt;code&gt;Query terminated&lt;/code&gt; since it returns back to the user. It&amp;#8217;s called a &#34;pull query&#34; - the user requests the state of a key from ksqlDB, which is returned. Contrast that to the above &#34;push query&#34; in which &lt;code&gt;EMIT CHANGES&lt;/code&gt; tells ksqlDB to keep sending us the changes to the state as it occurs.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_creating_a_dedicated_unifi_syslog_stream&#34;&gt;Creating a dedicated Unifi Syslog stream&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So…we&amp;#8217;ve got Syslog data for a bunch of different hosts. Let&amp;#8217;s create a new Kafka topic that&amp;#8217;s populated in realtime with Syslog messages just for our network devices. Which are my network devices? These ones:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;BZ2,24a43cde91a0,v4.0.69.10871:  
BZ2,dc9fdbec6a10,v4.0.69.10871:  
U7PG2,18e829e930a0,v4.0.69.10871:
U7PG2,f09fc2238301,v4.0.69.10871:
USC8,fcecdabfcf6d,v4.0.66.10832  
usgmoffattme                     &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are a couple of ways to select messages with which to populate this new topic. I could hardcode a predicate list of all the hostnames of my network devices.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM UBNT_SYSLOG 
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SYSLOG
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;BZ2,24a43cde91a0,v4.0.69.10871:&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;BZ2,dc9fdbec6a10,v4.0.69.10871:&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;U7PG2,18e829e930a0,v4.0.69.10871:&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;U7PG2,f09fc2238301,v4.0.69.10871:&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;USC8,fcecdabfcf6d,v4.0.66.10832&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;usgmoffattme&amp;#39;&lt;/span&gt; 
    EMIT CHANGES;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That&amp;#8217;s only so useful whilst that list doesn&amp;#8217;t change. I could wildcard it based on the patterns in the naming (&lt;code&gt;U7PG2&lt;/code&gt; is the prefix of one of the access point types, etc):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM UBNT_SYSLOG 
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SYSLOG
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;BZ2%&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;U7PG2%&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;USC8%&amp;#39;&lt;/span&gt;
       &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;usgmoffattme&amp;#39;&lt;/span&gt; 
    EMIT CHANGES;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is better because the stream will adapt as new devices are added—but only if they match those patterns. The best way to do it is simply have a list of network devices in a ksqlDB table (which is backed by a Kafka topic)…&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; UBNT_NETWORK_DEVICES (ROWKEY STRING &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;KEY&lt;/span&gt;) 
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;network_devices&amp;#39;&lt;/span&gt;,VALUE_FORMAT&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;, PARTITIONS&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;);

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; UBNT_NETWORK_DEVICES &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;BZ2,24a43cde91a0,v4.0.69.10871:&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; UBNT_NETWORK_DEVICES &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;BZ2,dc9fdbec6a10,v4.0.69.10871:&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; UBNT_NETWORK_DEVICES &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;U7PG2,18e829e930a0,v4.0.69.10871:&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; UBNT_NETWORK_DEVICES &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;U7PG2,f09fc2238301,v4.0.69.10871:&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; UBNT_NETWORK_DEVICES &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;USC8,fcecdabfcf6d,v4.0.66.10832&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; UBNT_NETWORK_DEVICES &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;usgmoffattme&amp;#39;&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;…and then join to this to create the stream. By using an &lt;code&gt;INNER JOIN&lt;/code&gt; I force it to only return messages for which there is a corresponding host on the &lt;code&gt;UBNT_NETWORK_DEVICES&lt;/code&gt; table. Now any time I add a new network device I just add it to the table (with an &lt;code&gt;INSERT INTO&lt;/code&gt;) and it gets picked up automagically in the join.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM UBNT_SYSLOG 
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; S.&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; 
         &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SYSLOG S 
              &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;JOIN&lt;/span&gt; UBNT_NETWORK_DEVICES U
              &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ON&lt;/span&gt; S.&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; U.ROWKEY
        EMIT CHANGES;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now I have a new Kafka topic called &lt;code&gt;UBNT_SYSLOG&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SHOW&lt;/span&gt; TOPICS;

 Kafka Topic                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; Partitions &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; Partition Replicas
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;-------------------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;
 network_devices                 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;
 syslog                          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;
 UBNT_SYSLOG                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;-------------------------------------------------------------------&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and when I check the number of messages for each host, I can see that it only contains messages for my Unifi hosts:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; S_HOST, &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; SYSLOG_MESSAGE_COUNT 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; UBNT_SYSLOG 
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; S_HOST 
    EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;----------------------------------+---------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;S_HOST                            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;SYSLOG_MESSAGE_COUNT &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;----------------------------------+---------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;BZ2,dc9fdbec6a10,v4.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10871&lt;/span&gt;:   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3106&lt;/span&gt;                 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;U7PG2,&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt;e829e930a0,v4.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10871&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3757&lt;/span&gt;                 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;BZ2,&lt;span style=&#34;color:#666&#34;&gt;24&lt;/span&gt;a43cde91a0,v4.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10871&lt;/span&gt;:   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1590&lt;/span&gt;                 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;U7PG2,f09fc2238301,v4.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10871&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;17658&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;usgmoffattme                      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;28964&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_access_point_usage&#34;&gt;Access point usage&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I want to revisit &lt;a href=&#34;https://www.confluent.io/blog/real-time-syslog-processing-apache-kafka-ksql-enriching-events-with-external-data/&#34;&gt;this example&lt;/a&gt; to show how we can easily wrangle and enrich the raw Syslog data. When I come home and my iPhone connects to my network, the Access Point logs this, with a raw Syslog message that looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#008000&#34;&gt;Dec&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;59&lt;/span&gt; BZ2,dc9fdbec6a10,v4.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10871&lt;/span&gt;: hostapd: ath1: STA &lt;span style=&#34;color:#666&#34;&gt;50&lt;/span&gt;:c7:bf:da:db:&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;e IEEE &lt;span style=&#34;color:#666&#34;&gt;802&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;11&lt;/span&gt;: associated&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can parse this down into usable fields using ksqlDB, which we&amp;#8217;re going to write to a new stream to make subsequent processing easier:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM AP_CLIENT_EVENTS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(S_DATE,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Europe/London&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; EVENT_TIME, 
             S_REMOTEADDRESS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; AP_IP, 
             SPLIT(S_MESSAGE,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; CLIENT_MAC, 
             SPLIT(S_MESSAGE,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;IEEE 802.11: &amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; ACTION 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; UBNT_SYSLOG 
       &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; S_MESSAGE &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;%associated%&amp;#39;&lt;/span&gt; 
       EMIT CHANGES;

ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; EVENT_TIME, AP_IP, CLIENT_MAC, ACTION 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; AP_CLIENT_EVENTS 
        EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+---------------+------------------+--------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;EVENT_TIME          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;AP_IP          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;CLIENT_MAC        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ACTION        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+---------------+------------------+--------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;59&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;67&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;50&lt;/span&gt;:c7:bf:da:db:&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;e &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;associated    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;07&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;59&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;68&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;f0:c3:&lt;span style=&#34;color:#666&#34;&gt;71&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;a:&lt;span style=&#34;color:#666&#34;&gt;04&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;disassociated &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;09&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;34&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;67&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;50&lt;/span&gt;:c7:bf:da:db:&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;e &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;disassociated &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;67&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;c8:f6:&lt;span style=&#34;color:#666&#34;&gt;50&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:d3 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;associated    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But we&amp;#8217;ve just got some access point IP addresses and client MAC addresses. What devices actually &lt;em&gt;are&lt;/em&gt; they?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_using_data_from_mongodb_in_ksqldb&#34;&gt;Using data from MongoDB in ksqlDB&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Unifi uses MongoDB as its data store for information about the network, including things like the MAC address and name of client devices, IP addresses of access points, and so on. We can ingest this data into ksqlDB using &lt;a href=&#34;https://debezium.io/documentation/reference/1.0/connectors/mongodb.html&#34;&gt;Debezium&lt;/a&gt; and use it for lookups in our queries. Let&amp;#8217;s pull in information about the network devices and clients:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SOURCE&lt;/span&gt; CONNECTOR SOURCE_MONGODB_UNIFI_01 &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;io.debezium.connector.mongodb.MongoDbConnector&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;mongodb.hosts&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;rs0/mongodb:27017&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;mongodb.name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;unifi&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;collection.whitelist&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;ace.device, ace.user&amp;#39;&lt;/span&gt;
);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the connector running we get a snapshot of the current MongoDB collections, along with &lt;em&gt;any changes to them&lt;/em&gt;, stored in Kafka topics that we can register in ksqlDB. We register them as ksqlDB streams first, because we need to make sure that before creating them as tables we&amp;#8217;ve set the partitioning key correctly:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM DEVICES_RAW &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;unifi.ace.device&amp;#39;&lt;/span&gt;, VALUE_FORMAT&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;);
ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM USERS_RAW   &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;unifi.ace.user&amp;#39;&lt;/span&gt;,   VALUE_FORMAT&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;From the streams we can extract the current details about the devices and users:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.mac&amp;#39;&lt;/span&gt;)   &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; MAC, 
             EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.ip&amp;#39;&lt;/span&gt;)    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; IP, 
             EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.name&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; NAME, 
             EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.model&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; MODEL, 
             EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.type&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TYPE&lt;/span&gt; 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; DEVICES_RAW 
        EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;------------------+------------------------+------+------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;MAC               &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;NAME                    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;MODEL &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TYPE&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;------------------+------------------------+------+------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;f0:&lt;span style=&#34;color:#666&#34;&gt;9&lt;/span&gt;f:xx:xx:xx:f4 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;usg.moffatt.me          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;UGW3  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ugw   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;24&lt;/span&gt;:a4:xx:xx:xx:a0 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Attic        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;BZ2   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;uap   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt;:e8:xx:xx:xx:a0 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Study (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;new&lt;/span&gt;)  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;U7PG2 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;uap   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;f0:&lt;span style=&#34;color:#666&#34;&gt;9&lt;/span&gt;f:xx:xx:xx:&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Sitting Room &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;U7PG2 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;uap   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;dc:&lt;span style=&#34;color:#666&#34;&gt;9&lt;/span&gt;f:xx:xx:xx:&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Kitchen      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;BZ2   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;uap   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;fc:ec:xx:xx:xx:&lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;d &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Switch &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Study          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;USC8  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;usw   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
I&amp;#8217;m using &lt;code&gt;EXTRACTJSONFIELD&lt;/code&gt; instead of the &lt;code&gt;io.debezium.connector.mongodb.transforms.ExtractNewDocumentState&lt;/code&gt; transformation because the schema in MongoDB changes between documents and caused a Schema Registry compatibility check failure.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we&amp;#8217;ll write the snapshot of data (plus any new changes that come through from MongoDB) into new Kafka topics, with the data tidied up into a proper schema, and the messages keyed on the column on which they&amp;#8217;re going to be joined later on:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM DEVICES_REKEY &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;  EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.mac&amp;#39;&lt;/span&gt;)   &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; MAC, 
                EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.ip&amp;#39;&lt;/span&gt;)    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; IP, 
                EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.name&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; NAME, 
                EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.model&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; MODEL, 
                EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.type&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TYPE&lt;/span&gt; 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt;    DEVICES_RAW 
        PARTITION &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; IP;

ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM USERS_REKEY &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;  EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.mac&amp;#39;&lt;/span&gt;)      &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; MAC, 
                EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.name&amp;#39;&lt;/span&gt;)     &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; NAME, 
                EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.hostname&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; HOSTNAME, 
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CAST&lt;/span&gt;(EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.is_guest&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#008000&#34;&gt;BOOLEAN&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; IS_GUEST, 
                EXTRACTJSONFIELD(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AFTER&lt;/span&gt; ,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;$.oui&amp;#39;&lt;/span&gt;)      &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; OUI 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt;    USERS_RAW 
        PARTITION &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; MAC;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_data_wrangling_with_ksqldb&#34;&gt;Data wrangling with ksqlDB&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Looking at the user data we notice it&amp;#8217;s going to need a bit of cleaning up to give us a single field by which to label a user&amp;#8217;s connection. There&amp;#8217;s a mix of fields that give us an identifiable label (&lt;code&gt;NAME&lt;/code&gt; / &lt;code&gt;HOSTNAME&lt;/code&gt;) that we need to wrangle together.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; MAC,NAME,HOSTNAME,OUI,IS_GUEST &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; USERS_REKEY EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;------------------+----------------------------+--------------------------+---------+---------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;MAC               &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;NAME                        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;HOSTNAME                  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;OUI      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;IS_GUEST &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;------------------+----------------------------+--------------------------+---------+---------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt;:b4:&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;d:b2:&lt;span style=&#34;color:#666&#34;&gt;29&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Nest                        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;AA01AC17140ADS          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;NestLabs &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;44&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;65&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;d:e0:&lt;span style=&#34;color:#666&#34;&gt;94&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;66&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Robin &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Kindle              &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;                      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;AmazonTe &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;b8:ac:&lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;f:&lt;span style=&#34;color:#666&#34;&gt;54&lt;/span&gt;:cf:&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;e &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;crashplan.moffatt.me        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;rmoff&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;Inspiron&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1764&lt;/span&gt;       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Dell     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;66&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;65&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;34&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;34&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;monitoring&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;.moffatt.me    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;                      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;36&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;39&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;61&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;36&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;36&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;cdh57&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;node&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;.moffatt.me &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;                      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;c&lt;/span&gt;:cf:&lt;span style=&#34;color:#666&#34;&gt;7&lt;/span&gt;f:&lt;span style=&#34;color:#666&#34;&gt;52&lt;/span&gt;:e9:c3 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Wifi Plug &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Sitting Room    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ESP_52E9C3                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Espressi &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;84&lt;/span&gt;:c7:ea:&lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;c&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;53&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;                        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;android&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;f1b22cbacced1ca4  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;SonyMobi &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ac:&lt;span style=&#34;color:#666&#34;&gt;29&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;a:&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;f:&lt;span style=&#34;color:#666&#34;&gt;42&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;53&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;                        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;iPhone                    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Apple    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;c&lt;/span&gt;:b7:&lt;span style=&#34;color:#666&#34;&gt;49&lt;/span&gt;:a7:d2:&lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;b &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;                        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;HUAWEI_P10&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;f56f4a35871f46 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;HuaweiTe &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;dc:&lt;span style=&#34;color:#666&#34;&gt;9&lt;/span&gt;f:db:ed:&lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;a:&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;                        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;                      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Ubiquiti &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There&amp;#8217;s also the network devices themselves that are also &#39;users&#39; on the network, but which don&amp;#8217;t have a useful label (see the last entry in the table above). For those we&amp;#8217;re going to merge in some data from the &lt;code&gt;DEVICES&lt;/code&gt; table.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First up, we clean the normal users with some SQL into a new derived stream, excluding any network devices (&lt;code&gt;OUI != &#39;Ubiquiti&#39;&lt;/code&gt;). Here we&amp;#8217;re saying to derive a new &lt;code&gt;NAME&lt;/code&gt; field based on:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Existing &lt;code&gt;NAME&lt;/code&gt; plus &lt;code&gt;HOSTNAME&lt;/code&gt; if it exists&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If &lt;code&gt;NAME&lt;/code&gt; doesn&amp;#8217;t exist then try to use &lt;code&gt;HOSTNAME&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If neither exist then take the device manufacturer (&lt;code&gt;OUI&lt;/code&gt;) and concatenate it with the only other identifier, that of whether the device is a guest or not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM USERS_REKEY_CLEANSED &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt;
      &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; MAC, 
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CASE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHEN&lt;/span&gt; NAME &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;THEN&lt;/span&gt; 
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CASE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHEN&lt;/span&gt; HOSTNAME &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;THEN&lt;/span&gt;
                    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CASE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHEN&lt;/span&gt; IS_GUEST &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;THEN&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;guest_&amp;#39;&lt;/span&gt; 
                    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ELSE&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;nonguest_&amp;#39;&lt;/span&gt; 
                    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; OUI 
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ELSE&lt;/span&gt; HOSTNAME 
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;END&lt;/span&gt;
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ELSE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CASE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHEN&lt;/span&gt; HOSTNAME &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;THEN&lt;/span&gt; NAME 
                    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ELSE&lt;/span&gt; NAME &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39; (&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; HOSTNAME &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;)&amp;#39;&lt;/span&gt;
                 &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;END&lt;/span&gt;
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; NAME
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; USERS_REKEY 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; OUI &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Ubiquiti&amp;#39;&lt;/span&gt;
        EMIT CHANGES;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then we insert into the users stream the network devices so that we have a reference for those too when they are active against access points:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; USERS_REKEY_CLEANSED (ROWKEY, MAC, NAME) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; MAC, MAC, NAME &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; DEVICES&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This gives us client names that look like this, which is much more useful:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; MAC, NAME &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; USERS_REKEY_CLEANSED EMIT CHANGES &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt;;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;------------------+----------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;MAC               &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;NAME                        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;------------------+----------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt;:b4:&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;d:b2:&lt;span style=&#34;color:#666&#34;&gt;29&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Nest                        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;44&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;65&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;d:e0:&lt;span style=&#34;color:#666&#34;&gt;94&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;66&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Robin &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;  Kindle             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;66&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;65&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;34&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;34&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;monitoring&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;.moffatt.me    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;c&lt;/span&gt;:cf:&lt;span style=&#34;color:#666&#34;&gt;7&lt;/span&gt;f:&lt;span style=&#34;color:#666&#34;&gt;52&lt;/span&gt;:e9:c3 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Wifi Plug &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Sitting Room    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;84&lt;/span&gt;:c7:ea:&lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;c&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;53&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;nonguest_SonyMobi           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we declare tables on these two streams which have now had the partitioning key set correctly. The tables are what we&amp;#8217;ll use for the join.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; DEVICES &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;DEVICES_REKEY&amp;#39;&lt;/span&gt;,VALUE_FORMAT&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;);
ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; USERS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;USERS_REKEY_CLEANSED&amp;#39;&lt;/span&gt;,VALUE_FORMAT&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_using_ksqldb_to_lookup_reference_data_for_a_stream_of_events&#34;&gt;Using ksqlDB to lookup reference data for a stream of events&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We&amp;#8217;re now in a position to join to the stream of network events to the lookup data from MongoDB:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; E.EVENT_TIME, 
             E.AP_IP, 
             D.NAME, 
             E.CLIENT_MAC, 
             E.ACTION 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; AP_CLIENT_EVENTS E 
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;JOIN&lt;/span&gt; DEVICES D 
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ON&lt;/span&gt; E.AP_IP &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; D.ROWKEY
      EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+--------------+-------------------+------------------+--------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;EVENT_TIME          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;AP_IP         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;NAME               &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;CLIENT_MAC        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ACTION        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+--------------+-------------------+------------------+--------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;59&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;67&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Kitchen &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;50&lt;/span&gt;:c7:bf:da:db:&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;e &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;associated    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;07&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;59&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;68&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Attic   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;f0:c3:&lt;span style=&#34;color:#666&#34;&gt;71&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;a:&lt;span style=&#34;color:#666&#34;&gt;04&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;disassociated &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;09&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;34&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;67&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Kitchen &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;50&lt;/span&gt;:c7:bf:da:db:&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;e &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;disassociated &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;67&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Kitchen &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;c8:f6:&lt;span style=&#34;color:#666&#34;&gt;50&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:d3 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;associated    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;34&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;68&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Attic   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;40&lt;/span&gt;:b4:cd:&lt;span style=&#34;color:#666&#34;&gt;58&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;40&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;8&lt;/span&gt;f &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;associated    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ksqlDB doesn&amp;#8217;t support multi-way joins, so we need two hops to get to the finished stream:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM AP_CLIENT_EVENTS_STG_01 &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; E.EVENT_TIME, 
                E.AP_IP, 
                D.NAME, 
                E.CLIENT_MAC, 
                E.ACTION 
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; AP_CLIENT_EVENTS E 
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;JOIN&lt;/span&gt; DEVICES D 
                    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ON&lt;/span&gt; E.AP_IP &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; D.ROWKEY
        EMIT CHANGES;

ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM AP_CLIENT_EVENTS_ENRICHED &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; E.EVENT_TIME, 
                E.AP_IP, 
                E.NAME &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; AP_NAME, 
                E.CLIENT_MAC, 
                U.NAME &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; CLIENT_NAME,
                E.ACTION 
            &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; AP_CLIENT_EVENTS_STG_01 E 
                &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;JOIN&lt;/span&gt; USERS U
                    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ON&lt;/span&gt; E.CLIENT_MAC &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; U.ROWKEY
        EMIT CHANGES;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Finally, we have a stream of access point events, enriched with the name of the access point and the user device connecting or disconnecting from it. It&amp;#8217;s processing all the &lt;em&gt;existing&lt;/em&gt; events on the Kafka topic, as well as new ones &lt;em&gt;as they arrive&lt;/em&gt;. With a handful of SQL statements we&amp;#8217;ve filtered and parsed a raw Syslog into a really useful stream of data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; EVENT_TIME, AP_NAME, CLIENT_NAME, ACTION
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; AP_CLIENT_EVENTS_ENRICHED 
        EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+-------------------+------------+--------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;EVENT_TIME          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;AP_NAME            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;CLIENT_NAME &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ACTION        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+-------------------+------------+--------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;59&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Kitchen &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;LB110       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;associated    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;07&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;59&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Attic   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;asgard&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;04&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;disassociated &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;09&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;34&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Kitchen &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;LB110       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;disassociated &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Kitchen &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Toms&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;iPad   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;associated    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/12/ksqldb_syslog_03.gif&#34; alt=&#34;ksqldb syslog 03&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_stateful_aggregation_in_ksqldb&#34;&gt;Stateful aggregation in ksqlDB&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As we saw above, ksqlDB can wrangling data for cleansing and enrichment, and it can join between Kafka topics. ksqlDB can also build stateful aggregations. Here&amp;#8217;s an example of writing a ksqlDB table with the number of disassociation events per five-minute window:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; AP_5MIN_AGG &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(WINDOWSTART(),&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Europe/London&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; WINDOW_START_TS,
           AP_NAME,
           &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; EVENTS
      &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; AP_CLIENT_EVENTS_ENRICHED
           WINDOW TUMBLING (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SIZE&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt; MINUTES)
     &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; ACTION&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;disassociated&amp;#39;&lt;/span&gt;
     &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; AP_NAME
     EMIT CHANGES;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we can query it, in one of two ways:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&#34;Push&#34; query&lt;/strong&gt; (receive a stream of events from the ksqlDB server as the state changes):&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; WINDOW_START_TS, AP_NAME, EVENTS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; AP_5MIN_AGG EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------+-------------------------+-------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;WINDOW_START_TS      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;AP_NAME                  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;EVENTS &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------+-------------------------+-------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;05&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Attic         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;05&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Kitchen       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;35&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Study (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;new&lt;/span&gt;)   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Sitting Room  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Kitchen       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Attic         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;29&lt;/span&gt;     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;35&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Attic         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;35&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Sitting Room  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;35&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Study (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;new&lt;/span&gt;)   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&#34;Pull&#34;&lt;/strong&gt; query (fetch the current state from ksqlDB to the client)&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; ROWKEY, EVENTS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; AP_5MIN_AGG &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; ROWKEY&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Unifi AP - Attic&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AND&lt;/span&gt; WINDOWSTART &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;2019-12-20T16:30:00&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;------------------+-------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ROWKEY            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;EVENTS &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;------------------+-------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Attic  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;29&lt;/span&gt;     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
Query terminated
ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ksqlDB has a REST API so external clients can also access the state held within it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ &lt;span style=&#34;color:#008000&#34;&gt;time&lt;/span&gt; curl -s -X POST &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            http://proxmox01.moffatt.me:18088/query &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;content-type: application/vnd.ksql.v1+json; charset=utf-8&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;ksql&amp;#34;:&amp;#34;SELECT ROWKEY, EVENTS FROM AP_5MIN_AGG WHERE ROWKEY=\&amp;#39;&lt;/span&gt;Unifi AP - Attic&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\&amp;#39;&lt;/span&gt; AND &lt;span style=&#34;color:#19177c&#34;&gt;WINDOWSTART&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;-12-20T16:30:00&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\&amp;#39;&lt;/span&gt;;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;}&amp;#39; |
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;        jq -c &amp;#39;.[] | select(.row!=null).row.columns&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;        0.12 real         0.00 user         0.00 sys
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;[&amp;#34;&lt;/span&gt;Unifi AP - Attic&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;,29]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_anomoly_detection_with_ksqldb&#34;&gt;Anomoly detection with ksqlDB&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Building on the above aggregation, we can populate a Kafka topic with a message any time there are more than ten disassociation events for a given access point in a five minute window:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; AP_ALERTS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;ap_alerts_01&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt;
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; WINDOW_START_TS, AP_NAME, EVENTS 
          &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; AP_5MIN_AGG 
          &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; EVENTS &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;
          EMIT CHANGES;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If we don&amp;#8217;t want to store the intermediate aggregate state then we could rewrite this as a single table query using the &lt;code&gt;GROUP BY… HAVING&lt;/code&gt; syntax:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; AP_ALERTS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;ap_alerts_01&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(WINDOWSTART(),&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Europe/London&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; WINDOW_START_TS, 
           AP_NAME, 
           &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; EVENTS 
      &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; AP_CLIENT_EVENTS_ENRICHED 
           WINDOW TUMBLING (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SIZE&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt; MINUTES) 
     &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; ACTION&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;disassociated&amp;#39;&lt;/span&gt; 
     &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; AP_NAME 
     &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HAVING&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt; 
     EMIT CHANGES;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;However we write it, the result is just a Kafka topic that backs the ksqlDB table. This means that any alerting app that can be driven by a Kafka topic can be hooked up to this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; PRINT ap_alerts_01;
Format:AVRO
&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;19&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt; AM UTC, Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Kitcheno&lt;span style=&#34;color:#666&#34;&gt;@&lt;/span&gt;, &lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;WINDOW_START_TS&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;2019-12-17 09:10:00&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;AP_NAME&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Unifi AP - Kitchen&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;EVENTS&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;19&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;34&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;42&lt;/span&gt; PM UTC, Unifi AP &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; Attico$$&lt;span style=&#34;&#34;&gt;�&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;@&lt;/span&gt;, &lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;WINDOW_START_TS&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;2019-12-20 16:30:00&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;AP_NAME&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Unifi AP - Attic&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;EVENTS&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_visualising_the_relationship_between_access_points_and_clients&#34;&gt;Visualising the relationship between Access Points and Clients&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Having built this streaming pipeline in ksqlDB that takes the raw Syslog and generates a Kafka topic with a list of Access Points events, we can also use this to stream into Neo4j:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; SINK CONNECTOR SINK_NEO4J_UNIFI_AP_01 &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;streams.kafka.connect.sink.Neo4jSinkConnector&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;org.apache.kafka.connect.storage.StringConverter&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;AP_CLIENT_EVENTS_ENRICHED&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;neo4j.server.uri&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;bolt://neo4j:7687&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;neo4j.authentication.basic.username&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;neo4j&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;neo4j.authentication.basic.password&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;connect&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;neo4j.topic.cypher.AP_CLIENT_EVENTS_ENRICHED&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;MERGE (a:AP{Name: event.AP_NAME, IP: event.AP_IP})  MERGE (c:Client{Name: event.CLIENT_NAME, MAC: event.CLIENT_MAC}) MERGE (c)-[:INTERACTED_WITH {action: event.ACTION}]-&amp;gt;(a)&amp;#39;&lt;/span&gt;
  ); &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the data in Neo4j it&amp;#8217;s easy to query it for the association patterns of a specific device:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;MATCH&lt;/span&gt; (n:Client &lt;span style=&#34;&#34;&gt;{&lt;/span&gt;Name:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;asgard-04&amp;#39;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;[rel :INTERACTED_WITH ]&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;(a:AP) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;RETURN&lt;/span&gt; n,a,rel&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/12/neo_ap_01.png&#34; alt=&#34;neo ap 01&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can also look at the pattern across numerous devices. Here you can visually identify devices that are probably statically located in my house and only connect to a single AP, and others that roam across all of them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;MATCH&lt;/span&gt; (n:Client )&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;[rel :INTERACTED_WITH &lt;span style=&#34;&#34;&gt;{&lt;/span&gt;action:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;associated&amp;#39;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;]&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;(a:AP) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;RETURN&lt;/span&gt; n,a,rel &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/12/neo_ap_02.png&#34; alt=&#34;neo ap 02&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_sounds_interesting_right&#34;&gt;Sounds interesting, right?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can find all the code to run this on &lt;a href=&#34;https://github.com/confluentinc/demo-scene/tree/master/syslog&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Head to &lt;a href=&#34;https://ksqldb.io/quickstart.html&#34; class=&#34;bare&#34;&gt;https://ksqldb.io/quickstart.html&lt;/a&gt; to try the ksqlDB quickstart&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Join the Confluent Community slack group at &lt;a href=&#34;http://cnfl.io/slack&#34; class=&#34;bare&#34;&gt;http://cnfl.io/slack&lt;/a&gt; and hang out on the #ksqldb channel&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    <item>
      <title>Detecting and Analysing SSH Attacks with ksqlDB</title>
      <link>https://rmoff.net/2019/12/18/detecting-and-analysing-ssh-attacks-with-ksqldb/</link>
      <pubDate>2019-12-18</pubDate>
      
      <guid>https://rmoff.net/2019/12/18/detecting-and-analysing-ssh-attacks-with-ksqldb/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2019/12/IMG_1537.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I&amp;#8217;ve &lt;a href=&#34;https://www.confluent.io/blog/real-time-syslog-processing-apache-kafka-ksql-part-1-filtering/&#34;&gt;written previously&lt;/a&gt; about ingesting Syslog into Kafka and using KSQL to analyse it. I want to revisit the subject since it&amp;#8217;s nearly two years since I wrote about it and some things have changed since then.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ksqlDB now includes the ability to define connectors from within it, which makes setting things up loads easier.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find the &lt;a href=&#34;https://github.com/confluentinc/demo-scene/tree/master/syslog&#34;&gt;full rig to run this on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_create_and_configure_the_syslog_connector&#34;&gt;Create and configure the Syslog connector&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To start with, create a source connector:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SOURCE&lt;/span&gt; CONNECTOR SOURCE_SYSLOG_UDP_01 &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;tasks.max&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;io.confluent.connect.syslog.SyslogSourceConnector&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;syslog&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;syslog.port&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;42514&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;syslog.listener&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;UDP&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;syslog.reverse.dns.remote.ip&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;confluent.license&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;confluent.topic.bootstrap.servers&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;kafka:29092&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;confluent.topic.replication.factor&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This creates a &lt;a href=&#34;http://rmoff.dev/ksldn19-kafka-connect&#34;&gt;Kafka Connect&lt;/a&gt; &lt;a href=&#34;https://www.confluent.io/hub/confluentinc/kafka-connect-syslog&#34;&gt;syslog connector&lt;/a&gt;, running either on the embedded Kafka Connect worker on ksqlDB, or an external Kafka Connect worker (which is what I&amp;#8217;m using).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Check that the connector is working (the &lt;code&gt;State&lt;/code&gt; should be &lt;code&gt;RUNNING&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DESCRIBE&lt;/span&gt; CONNECTOR SOURCE_SYSLOG_UDP_01;

Name                 : SOURCE_SYSLOG_UDP_01
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;Class&lt;/span&gt;                : io.confluent.&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;connect&lt;/span&gt;.syslog.SyslogSourceConnector
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;Type&lt;/span&gt;                 : &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;source&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;State&lt;/span&gt;                : RUNNING
WorkerId             : kafka&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;8083&lt;/span&gt;

 Task ID &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;State&lt;/span&gt;   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; Error Trace
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; RUNNING &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And now test it out by sending a dummy Syslog message from the shell prompt via netcat (&lt;code&gt;nc&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#008000&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;lt;34&amp;gt;1 2019-12-18T22:14:15.003Z asgard.example.com su - ID47 - Your tea is brewing&amp;#34;&lt;/span&gt; | nc -u localhost &lt;span style=&#34;color:#666&#34;&gt;42514&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Don&amp;#8217;t forget your networking in all this - if you&amp;#8217;re running Kafka Connect in a container then you need to open up the inbound port. Also note that I&amp;#8217;m using UDP so you have to use &lt;code&gt;-u&lt;/code&gt; with netcat (&lt;code&gt;nc&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can examine the Kafka topic that the Syslog message is written to with &lt;code&gt;PRINT&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; PRINT syslog &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; BEGINNING;
Format:AVRO
&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;19&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;15&lt;/span&gt; PM UTC, &lt;span style=&#34;&#34;&gt;$&lt;/span&gt;asgard.example.com, &lt;span style=&#34;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;RFC5424&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Your tea is brewing&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;asgard.example.com&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;level&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;tag&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;extension&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;severity&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;appName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;su&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;facility&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;remoteAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;172.25.0.1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;rawMessage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;lt;34&amp;gt;1 2019-12-18T22:14:15.003Z asgard.example.com su - ID47 - Your tea is brewing\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;processId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;messageId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;ID47&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;structuredData&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceVendor&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceProduct&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceEventClassId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;1576707255003&lt;/span&gt;&lt;span style=&#34;&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Assuming this is working you can now update your actual devices to route their Syslog data to the machine on which Kafka Connect is running. Here&amp;#8217;s an example of the necessary configuration for &lt;code&gt;rsyslog&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;*.* @proxmox01.moffatt.me:42514&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As before, pay attention to your network. If the machines are external to the host machine running Docker (and Kafka Connect is in a container) then you need to use the &lt;em&gt;host&lt;/em&gt; machine&amp;#8217;s name (&lt;code&gt;proxmox01.moffatt.me&lt;/code&gt; in the above example) to route the traffic, and ensure that the Docker container has its port published to the host.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/12/syslog.png&#34; alt=&#34;syslog&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_working_with_syslog_data_in_ksqldb&#34;&gt;Working with Syslog data in ksqlDB&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first thing to do is register this Kafka topic with ksqlDB:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM SYSLOG &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;syslog&amp;#39;&lt;/span&gt;, VALUE_FORMAT&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once registered, we can run SQL commands against it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SYSLOG EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ROWTIM&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ROWKEY&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;NAME  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TYPE&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;MESSAG&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;VERSIO&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LEVEL&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;TAG   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;EXTENS&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;SEVERI&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;APPNAM&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;FACILI&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;REMOTE&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;RAWMES&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;PROCES&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;MESSAG&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;STRUCT&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;DEVICE&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;DEVICE&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;DEVICE&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;DEVICE&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000&#34;&gt;DATE&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;E     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;E     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;N     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ION   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;TY    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;E     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;TY    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ADDRES&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;SAGE  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;SID   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;EID   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;UREDDA&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;VENDOR&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;PRODUC&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;VERSIO&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;EVENTC&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;S     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;TA    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;T     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;N     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;LASSID&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;157670&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;&#34;&gt;$&lt;/span&gt;     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;RFC542&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Your t&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;asgard&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;su    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;172&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;34&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ID47  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;null&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;157670&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;725500&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;asgard&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ea &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;.examp&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;725500&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;.examp&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;brewin&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;le.com&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt;T2&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;le.com&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;g&lt;/span&gt;     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;003&lt;/span&gt;Z&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; asgar&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;d.exam&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ple.co&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;m su &lt;span style=&#34;color:#666&#34;&gt;-|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; ID47 &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|-&lt;/span&gt; Your&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; tea i&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;s brew&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ing&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_selecting_specific_fields_from_a_kafka_message&#34;&gt;Selecting specific fields from a Kafka message&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There&amp;#8217;s a lot of columns in here that we&amp;#8217;re not so interested in. Because we&amp;#8217;re in the land of SQL and schemas, we can just specify the columns that we do want (pulling from the live Kafka topic of Syslog data as it arrives):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(&lt;span style=&#34;color:#008000&#34;&gt;DATE&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; SYSLOG_TS, 
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;, 
             FACILITY, 
             MESSAGE, 
             REMOTEADDRESS 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SYSLOG 
        EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+-------------------+---------+--------------------+--------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;SYSLOG_TS           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;               &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;FACILITY &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;MESSAGE             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;REMOTEADDRESS &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+-------------------+---------+--------------------+--------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;15&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;asgard.example.com &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Your tea &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;is&lt;/span&gt; brewing &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;172&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;25&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_enriching_kafka_messages_with_joins_in_ksqldb&#34;&gt;Enriching Kafka messages with joins in ksqlDB&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can also make things easier to understand by building a reference table for the &lt;code&gt;FACILITY&lt;/code&gt; code based on &lt;a href=&#34;https://tools.ietf.org/html/rfc5424&#34;&gt;the Syslog RFC&lt;/a&gt;. This creates and populates a Kafka topic, with a ksqlDB table registered on top of it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; FACILITY (ROWKEY STRING &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;KEY&lt;/span&gt;, DESCRIPTION &lt;span style=&#34;color:#008000&#34;&gt;VARCHAR&lt;/span&gt;) 
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (KAFKA_TOPIC&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;facility&amp;#39;&lt;/span&gt;,VALUE_FORMAT&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;, PARTITIONS&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; FACILITY &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;kernel messages&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; FACILITY &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;user-level messages&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; FACILITY &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;mail system&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; FACILITY &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;3&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;system daemons&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; FACILITY &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;4&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;security/authorization messages&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; FACILITY &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;5&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;messages generated internally by syslogd&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;INTO&lt;/span&gt; FACILITY &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;6&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;line printer subsystem&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With this table we can enhance the view that we get over the stream of data as it arrives:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(S.&lt;span style=&#34;color:#008000&#34;&gt;DATE&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; SYSLOG_TS, 
             S.&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;, 
             F.DESCRIPTION &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; FACILITY, 
             S.MESSAGE, 
             S.REMOTEADDRESS 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SYSLOG S
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;JOIN&lt;/span&gt;
             FACILITY F &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ON&lt;/span&gt; S.FACILITY&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;F.ROWKEY
     EMIT CHANGES;

&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;----------------+----------------+----------------+----------------+----------------+ 
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;SYSLOG_TS       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;FACILITY        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;MESSAGE         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;REMOTEADDRESS   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;----------------+----------------+----------------+----------------+----------------+ 
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;asgard.example.&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;security&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;authori&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Your tea &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;is&lt;/span&gt; brew&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;172&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;25&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;15&lt;/span&gt;             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;om              &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;zation messages &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ing             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;You can also use &lt;code&gt;CASE&lt;/code&gt; to enrich fields; for a short list of hard-coded values like these from the RFC one might consider doing this instead:&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;SELECT  […]
        CASE WHEN FACILITY=0 THEN &#39;kernel messages&#39;
            WHEN FACILITY=1 THEN &#39;user-level messages&#39;
            WHEN FACILITY=2 THEN &#39;mail system&#39;
            ELSE &#39;&amp;lt;unknown&amp;gt;&#39;
        END AS FACILITY_DESCRIPTION
        […]
       FROM SYSLOG EMIT CHANGES;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_processing_existing_kafka_data&#34;&gt;Processing existing Kafka data&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But wait! Someone told me that Apache Kafka stores data and doesn&amp;#8217;t delete it just because someone consumed it. We can query &lt;em&gt;existing&lt;/em&gt; data on the topic too, by telling ksqlDB to start its query at the beginning:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;auto.offset.reset&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;earliest&amp;#39;&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we get to see &lt;em&gt;all&lt;/em&gt; the messages on the topic!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(S.&lt;span style=&#34;color:#008000&#34;&gt;DATE&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; SYSLOG_TS, 
             S.&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;, 
             F.DESCRIPTION &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; FACILITY, 
             S.MESSAGE, 
             S.REMOTEADDRESS 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SYSLOG S
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;JOIN&lt;/span&gt;
             FACILITY F &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ON&lt;/span&gt; S.FACILITY&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;F.ROWKEY
     EMIT CHANGES;

&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;----------------+----------------+----------------+----------------+----------------+ 
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;SYSLOG_TS       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;FACILITY        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;MESSAGE         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;REMOTEADDRESS   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;----------------+----------------+----------------+----------------+----------------+ 
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;usgmoffattme    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;messages generat&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;set&lt;/span&gt; SCM_CREDENTI&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;172&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;25&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;58&lt;/span&gt;             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ed internally &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;by&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ALS failed &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;/|                | 
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;|                |                | syslogd        |dev/log&amp;#39;&lt;/span&gt;: Protoc&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ol &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;not&lt;/span&gt; available&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;usgmoffattme    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;kernel messages &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;imklog &lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;8&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;11&lt;/span&gt;, l&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;172&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;25&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;58&lt;/span&gt;             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;og &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;source&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;pro&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;kmsg started. &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;BZ2,dc9fdbec6a10&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;system&lt;/span&gt; daemons  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Logread connecte&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;172&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;25&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;,v4.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10871&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;d &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;83&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;42514&lt;/span&gt;        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;asgard.example.&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;security&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;authori&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Your tea &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;is&lt;/span&gt; brew&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;172&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;25&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;15&lt;/span&gt;             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;om              &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;zation messages &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ing             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; 
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That&amp;#8217;s quite a lot of messages and quite a lot of noise. Let&amp;#8217;s filter this sucker down into messages just for a particular host:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(S.&lt;span style=&#34;color:#008000&#34;&gt;DATE&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; SYSLOG_TS, 
             F.DESCRIPTION &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; FACILITY, 
             S.MESSAGE &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; MESSAGE
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SYSLOG S
             &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;JOIN&lt;/span&gt;
             FACILITY F &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ON&lt;/span&gt; S.FACILITY&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;F.ROWKEY
       &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; S.&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;rpi-03&amp;#39;&lt;/span&gt;
         EMIT CHANGES;

&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------+--------------------------------+--------------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;SYSLOG_TS            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;FACILITY                        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;MESSAGE                         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;---------------------+--------------------------------+--------------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;40&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;security&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;authorization&lt;/span&gt; messages &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Invalid &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;user&lt;/span&gt; soledad &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;40&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;73&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;76&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;102&lt;/span&gt;                          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;40&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;security&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;authorization&lt;/span&gt; messages &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;input_userauth_request: invalid &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;user&lt;/span&gt; soledad [preauth]          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;40&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;security&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;authorization&lt;/span&gt; messages &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Received &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;disconnect&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;40&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;73&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;102&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;11&lt;/span&gt;: Bye Bye [preauth]    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;40&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;clock daemon                    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;(smmsp) CMD (test &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;x &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;etc&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;init.d&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                                &lt;span style=&#34;color:#666&#34;&gt;|/&lt;/span&gt;sendmail &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;usr&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;share&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;sendmail&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                                &lt;span style=&#34;color:#666&#34;&gt;|/&lt;/span&gt;sendmail cron&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;msp)             &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;40&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;security&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;authorization&lt;/span&gt; messages &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;pam_unix(cron:&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;session&lt;/span&gt;): &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;session&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;opened &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;user&lt;/span&gt; root &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;by&lt;/span&gt; (uid&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;17&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;40&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;01&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;mail &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;system&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;My unqualified &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;host&lt;/span&gt; name (rpi&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;                                &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;unknown&lt;/span&gt;; sleeping &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; retry   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Turns out this machine is open to the big bad internet and is being routinely probed and brute-force SSH attempts made on it. This is interesting stuff to analyse and understand what&amp;#8217;s happening as it happens—which is why stream processing is so very useful in this space. Let&amp;#8217;s create a new Kafka topic populated just with any SSH login attempts:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM SYSLOG_INVALID_USERS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt;   SYSLOG 
        &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;  MESSAGE &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Invalid user%&amp;#39;&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The stream is backed by a new Kafka topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SHOW&lt;/span&gt; TOPICS;

 Kafka Topic                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; Partitions &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; Partition Replicas
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;-------------------------------------------------------------------
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;[&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;]
 syslog                          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;
 SYSLOG_INVALID_USERS            &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The stream only has messages on it that match the pattern above that we&amp;#8217;ve used to identify attempted SSH logins:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(&lt;span style=&#34;color:#008000&#34;&gt;DATE&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; SYSLOG_TS,
              &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;,
              MESSAGE
          &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SYSLOG_INVALID_USERS 
          EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+--------------+--------------------------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;SYSLOG_TS           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;MESSAGE                                     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+--------------+--------------------------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;51&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;usgmoffattme  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Invalid &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;user&lt;/span&gt; foo &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;83&lt;/span&gt;         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;15&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;55&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;rpi&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;03&lt;/span&gt;        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Invalid &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;user&lt;/span&gt; dbus &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;51&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;254&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;140&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;235&lt;/span&gt;       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;15&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;55&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;rpi&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;03&lt;/span&gt;        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Invalid &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;user&lt;/span&gt; tchs &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;34&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;62&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;227&lt;/span&gt;        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;58&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;rpi&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;03&lt;/span&gt;        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Invalid &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;user&lt;/span&gt; postgres &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;103&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;101&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;52&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;48&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;09&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;29&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;rpi&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;03&lt;/span&gt;        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;Invalid &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;user&lt;/span&gt; umns &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;34&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;62&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;227&lt;/span&gt;        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can process the live stream of data further, using &lt;code&gt;SPLIT&lt;/code&gt; and &lt;code&gt;REPLACE&lt;/code&gt; functions to parse the &lt;code&gt;MESSAGE&lt;/code&gt; fields to create an array:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; SPLIT(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;REPLACE&lt;/span&gt;(MESSAGE,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Invalid user &amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;),&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39; from &amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; ATTACK_DETAILS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SYSLOG_INVALID_USERS EMIT CHANGES &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ATTACK_DETAILS          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;------------------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;[foo, &lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;83&lt;/span&gt;]    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;Limit&lt;/span&gt; Reached
Query terminated&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Based on this we can create a second new stream, derived from the first:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; STREAM SSH_ATTACKS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; 
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; TIMESTAMPTOSTRING(&lt;span style=&#34;color:#008000&#34;&gt;DATE&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; SYSLOG_TS, 
           &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;,
           SPLIT(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;REPLACE&lt;/span&gt;(MESSAGE,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Invalid user &amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;),&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39; from &amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; ATTACK_USER, 
           SPLIT(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;REPLACE&lt;/span&gt;(MESSAGE,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;Invalid user &amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;),&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39; from &amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; ATTACK_IP 
      &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SYSLOG_INVALID_USERS 
      EMIT CHANGES;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we have a ksqlDB stream of all attempted logins, with the IP and user ID that was used. This includes all historic data, and any new events as they occur:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; SYSLOG_TS, &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;, ATTACK_USER, ATTACK_IP &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SSH_ATTACKS EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+-------------+------------+--------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;SYSLOG_TS           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;HOST&lt;/span&gt;         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ATTACK_USER &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ATTACK_IP     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------------+-------------+------------+--------------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;51&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;usgmoffattme &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;foo         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;83&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;39&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;usgmoffattme &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;oracle      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;83&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;usgmoffattme &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;oracle      &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;83&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;usgmoffattme &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;vncserver   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;10&lt;/span&gt;.&lt;span style=&#34;color:#666&#34;&gt;83&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let&amp;#8217;s take a moment to appreciate what we&amp;#8217;ve built here. We&amp;#8217;ve taken a stream of Syslog events…&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;…
&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;RFC3164&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;: stahtd[2991]: [STA-TRACKER].stahtd_dump_event(): {\&amp;#34;query_30\&amp;#34;:\&amp;#34;unifi.moffatt.me.\&amp;#34;,\&amp;#34;message_type\&amp;#34;:\&amp;#34;STA_ASSOC_TRACKER\&amp;#34;,\&amp;#34;query_9\&amp;#34;:\&amp;#34;unifi.moffatt.me.\&amp;#34;,\&amp;#34;query_1\&amp;#34;:\&amp;#34;b8-pkc-l6wr6.europe-west2.gcp.confluent.cloud.\&amp;#34;,\&amp;#34;vap\&amp;#34;:\&amp;#34;vwire5\&amp;#34;,\&amp;#34;query_18\&amp;#34;:\&amp;#34;b5-pkc-l6wr6.europe-west2.gcp.confluent.cloud.\&amp;#34;,\&amp;#34;query_server_30\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;mac\&amp;#34;:\&amp;#34;18:e8:29:eb:30:a0\&amp;#34;,\&amp;#34;event_type\&amp;#34;:\&amp;#34;dns timeout\&amp;#34;,\&amp;#34;assoc_status\&amp;#34;:\&amp;#34;0\&amp;#34;,\&amp;#34;query_server_1\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;query_server_4\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;query_server_9\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;query_23\&amp;#34;:\&amp;#34;api.eu.amazonalexa.com.\&amp;#34;,\&amp;#34;query_server_8\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;query_3\&amp;#34;:\&amp;#34;asimov.vortex.data.microsoft.com.akadns.net.\&amp;#34;,\&amp;#34;query_server_3\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;query_4\&amp;#34;:\&amp;#34;asimov.vortex.data.microsoft.com.akadns.net.\&amp;#34;,\&amp;#34;query_8\&amp;#34;:\&amp;#34;local.\&amp;#34;,\&amp;#34;query_server_18\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;query_server_23\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;}&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;U7PG2,f09fc2238301,v4.0.69.10871:&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;level&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;tag&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;extension&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;severity&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;appName&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;facility&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;remoteAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;172.25.0.1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;rawMessage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;lt;14&amp;gt;Dec 18 12:51:24 U7PG2,f09fc2238301,v4.0.69.10871: : stahtd[2991]: [STA-TRACKER].stahtd_dump_event(): {\&amp;#34;query_30\&amp;#34;:\&amp;#34;unifi.moffatt.me.\&amp;#34;,\&amp;#34;message_type\&amp;#34;:\&amp;#34;STA_ASSOC_TRACKER\&amp;#34;,\&amp;#34;query_9\&amp;#34;:\&amp;#34;unifi.moffatt.me.\&amp;#34;,\&amp;#34;query_1\&amp;#34;:\&amp;#34;b8-pkc-l6wr6.europe-west2.gcp.confluent.cloud.\&amp;#34;,\&amp;#34;vap\&amp;#34;:\&amp;#34;vwire5\&amp;#34;,\&amp;#34;query_18\&amp;#34;:\&amp;#34;b5-pkc-l6wr6.europe-west2.gcp.confluent.cloud.\&amp;#34;,\&amp;#34;query_server_30\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;mac\&amp;#34;:\&amp;#34;18:e8:29:eb:30:a0\&amp;#34;,\&amp;#34;event_type\&amp;#34;:\&amp;#34;dns timeout\&amp;#34;,\&amp;#34;assoc_status\&amp;#34;:\&amp;#34;0\&amp;#34;,\&amp;#34;query_server_1\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;query_server_4\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;query_server_9\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;query_23\&amp;#34;:\&amp;#34;api.eu.amazonalexa.com.\&amp;#34;,\&amp;#34;query_server_8\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;query_3\&amp;#34;:\&amp;#34;asimov.vortex.data.microsoft.com.akadns.net.\&amp;#34;,\&amp;#34;query_server_3\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;query_4\&amp;#34;:\&amp;#34;asimov.vortex.data.microsoft.com.akadns.net.\&amp;#34;,\&amp;#34;query_8\&amp;#34;:\&amp;#34;local.\&amp;#34;,\&amp;#34;query_server_18\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;,\&amp;#34;query_server_23\&amp;#34;:\&amp;#34;192.168.10.1\&amp;#34;}&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;processId&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;messageId&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;structuredData&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceVendor&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceProduct&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceVersion&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceEventClassId&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;1576673484000&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;RFC3164&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Invalid user foo from 192.168.10.83&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;usgmoffattme&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;level&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;tag&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;sshd&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;extension&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;severity&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;appName&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;facility&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;remoteAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;172.25.0.1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;rawMessage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;lt;38&amp;gt;Dec 18 12:51:26 usgmoffattme sshd[30243]: Invalid user foo from 192.168.10.83&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;processId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;30243&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;messageId&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;structuredData&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceVendor&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceProduct&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceVersion&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceEventClassId&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;1576673486000&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;RFC3164&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;DHCPREQUEST on eth0 to 62.253.131.171 port 67&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;usgmoffattme&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;level&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;tag&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;dhclient&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;extension&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;severity&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;appName&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;facility&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;remoteAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;172.25.0.1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;rawMessage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;&amp;lt;30&amp;gt;Dec 18 12:51:35 usgmoffattme dhclient: DHCPREQUEST on eth0 to 62.253.131.171 port 67&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;processId&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;messageId&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;structuredData&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceVendor&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceProduct&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceVersion&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;deviceEventClassId&amp;#34;&lt;/span&gt;: null, &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#666&#34;&gt;1576673495000&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
…&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;…and filtered it for messages matching a pattern, derived new field of interest, and streamed this to a Kafka topic. All of this is done using SQL - a very expressive and easy-to-use language.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So let&amp;#8217;s now take the data we&amp;#8217;re using within ksqlDB can also be streamed to other places for use there. Maybe we want to analyse the logs through something like Kibana, so we stream just the SSH attack logs to Elasticsearch.  ksqlDB is serving the purpose here of filtering down &lt;em&gt;all&lt;/em&gt; syslogs into just a subset of those that we&amp;#8217;re interested in examining further:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; SINK CONNECTOR SINK_ELASTIC_SYSLOG &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;io.confluent.connect.elasticsearch.ElasticsearchSinkConnector&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;http://elasticsearch:9200&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;type.name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;behavior.on.malformed.documents&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;warn&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;errors.tolerance&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;all&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;errors.log.enable&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;errors.log.include.messages&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;SYSLOG_INVALID_USERS&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;key.ignore&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;schema.ignore&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;org.apache.kafka.connect.storage.StringConverter&amp;#39;&lt;/span&gt;
);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/12/kibana_ssh_01.png&#34; alt=&#34;kibana ssh 01&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Maybe we actually want to analyse the full set of syslogs in Kibana - we can do that too. It depends entirely on the use case that we have in mind, and the relative volumes, as to where it makes sense to do the filtering (ksqlDB vs ad-hoc in Kibana):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; SINK CONNECTOR SINK_ELASTIC_ALL_SYSLOG &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;io.confluent.connect.elasticsearch.ElasticsearchSinkConnector&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;http://elasticsearch:9200&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;type.name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;behavior.on.malformed.documents&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;warn&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;errors.tolerance&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;all&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;errors.log.enable&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;errors.log.include.messages&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;syslog&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;key.ignore&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;schema.ignore&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;org.apache.kafka.connect.storage.StringConverter&amp;#39;&lt;/span&gt;
);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/12/kibana_ssh_02.png&#34; alt=&#34;kibana ssh 02&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can also model the data in Neo4j to look at the relationship between attacked and attacking hosts:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; SINK CONNECTOR SINK_NEO4J_SSH_ATTACKS_01 &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; (
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;streams.kafka.connect.sink.Neo4jSinkConnector&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;org.apache.kafka.connect.storage.StringConverter&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;SSH_ATTACKS&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;neo4j.server.uri&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;bolt://neo4j:7687&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;neo4j.authentication.basic.username&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;neo4j&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;neo4j.authentication.basic.password&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;connect&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;neo4j.topic.cypher.SSH_ATTACKS&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;WITH event WHERE event.HOST is not null MERGE (h:Host{Hostname: event.HOST})  MERGE (a:Attacker{IP: event.ATTACK_IP}) MERGE (u:Username{name: event.ATTACK_USER}) MERGE (u)&amp;lt;-[:USED_LOGIN_ID]-(a)-[:ATTACKED {timestamp: event.SYSLOG_TS, user: event.ATTACK_USER}]-&amp;gt;(h)&amp;#39;&lt;/span&gt;
  ); &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What I like about Neo4j is that with the browser you can just poke about the data to understand what it looks like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/12/neo_ssh_02.png&#34; alt=&#34;neo ssh 02&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But as you realise certain elements to it you can drop down into Cypher to express a more selective criteria. For example, in digging around the data it became clear that you&amp;#8217;ll get some attack hosts that try one or two usernames and then move on, whilst others try many different users:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/12/neo_ssh_03.png&#34; alt=&#34;neo ssh 03&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Maybe we want to see how many usernames each attack host uses?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;MATCH&lt;/span&gt; (u:Username)&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--(a:Attacker)--(h:Host) 
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WITH&lt;/span&gt; a,h,&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;COUNT&lt;/span&gt;(DISINCT u) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; user_count
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;RETURN&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DISTINCT&lt;/span&gt; a, user_count 
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; user_count &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;DESC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/12/neo_ssh_04.png&#34; alt=&#34;neo ssh 04&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_aggregates_and_pull_queries&#34;&gt;Aggregates and Pull Queries&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let&amp;#8217;s get back to ksqlDB to finish with. We&amp;#8217;ve got a stream of Syslog events coming in, as well as the existing events stored. What else can we do with this data? We can build a stateful aggregation on it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; SSH_ATTACKS_BY_USER &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; ATTACK_USER,
           &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; ATTEMPTS
      &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SSH_ATTACKS
  &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; ATTACK_USER;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here&amp;#8217;s the cool thing with ksqlDB. I can ask ksqlDB to tell me when the state changes - this is a &lt;strong&gt;push&lt;/strong&gt; query. It doesn&amp;#8217;t end until it is cancelled. When the aggregate changes, I get the new value pushed to me (here the &lt;code&gt;oracle&lt;/code&gt; count when from &lt;code&gt;4&lt;/code&gt; to &lt;code&gt;5&lt;/code&gt; whilst the query was running):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; ATTACK_USER, ATTEMPTS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SSH_ATTACKS_BY_USER EMIT CHANGES;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------+-----------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ATTACK_USER   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ATTEMPTS   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------+-----------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;foo           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;vncserver     &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;hugh          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;rick          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;oracle        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;oracle        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;

Press CTRL&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;to&lt;/span&gt; interrupt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I can also ask ksqlDB what the &lt;em&gt;current state&lt;/em&gt; is - this is a &lt;strong&gt;pull&lt;/strong&gt; query, and completes as soon as the value is returned (just like when you run a query against a &#34;normal&#34; database):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; ATTACK_USER, ATTEMPTS &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SSH_ATTACKS_BY_USER &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; ROWKEY&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;oracle&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------+-----------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ATTACK_USER   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ATTEMPTS   &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;--------------+-----------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;oracle        &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;          &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
Query terminated
ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can use the REST API to run this query yourself from within your application. Here&amp;#8217;s an example with &lt;code&gt;curl&lt;/code&gt;, wrapped with &lt;code&gt;time&lt;/code&gt; to show just how quick it is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ &lt;span style=&#34;color:#008000&#34;&gt;time&lt;/span&gt; curl -s -X POST &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            http://ksqldb-server:8088/query &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            -H &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;content-type: application/vnd.ksql.v1+json; charset=utf-8&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            -d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{&amp;#34;ksql&amp;#34;:&amp;#34;SELECT ATTACK_USER, ATTEMPTS FROM SSH_ATTACKS_BY_USER WHERE ROWKEY=\&amp;#39;&lt;/span&gt;oracle&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\&amp;#39;&lt;/span&gt;;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;}&amp;#39; |
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;        jq -c &amp;#39;.[] | select(.row!=null).row.columns&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;        0.06 real         0.00 user         0.00 sys
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;[&amp;#34;&lt;/span&gt;oracle&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;,5]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ksqlDB can also do time-based aggregation. How many SSH attacks were there per user by hour?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; SSH_HOURLY_ATTACKS_BY_USER &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; ATTACK_USER,
           &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AS&lt;/span&gt; ATTEMPTS
      &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SSH_ATTACKS
           WINDOW TUMBLING (&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SIZE&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; HOUR)
  &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;BY&lt;/span&gt; ATTACK_USER;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Push&lt;/strong&gt; query (server sends clients state as it changes):&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SSH_HOURLY_ATTACKS_BY_USER &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; ROWKEY&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;-----------------+---------------+-------------+----------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ROWKEY           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;WINDOWSTART    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ATTACK_USER  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ATTEMPTS  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;-----------------+---------------+-------------+----------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;oracle           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1576454400000&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;oracle       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;oracle           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1576540800000&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;oracle       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;oracle           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1576627200000&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;oracle       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
Query terminated
ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pull&lt;/strong&gt; query (client requests current state from server and then exits):&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt; SSH_HOURLY_ATTACKS_BY_USER &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; ROWKEY&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;oracle&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;AND&lt;/span&gt; WINDOWSTART &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;2019-12-18T00:00:00&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;-----------------+---------------+-------------+----------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ROWKEY           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;WINDOWSTART    &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ATTACK_USER  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;ATTEMPTS  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;-----------------+---------------+-------------+----------+
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;oracle           &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1576627200000&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;oracle       &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;
Query terminated
ksql&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_ksqldb_syslog_processing_recap&#34;&gt;ksqlDB &amp;amp; Syslog processing : Recap&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It&amp;#8217;s near real-time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It&amp;#8217;s streaming.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It stores data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It can process historical data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It can &lt;em&gt;reprocess&lt;/em&gt; historical data e.g. to refine filters and enrichment processing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It can be used to drive alerts (route messages matching a pattern to a topic, that drives the alert)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It can be used to drive threshold alerts (the SQL clause &lt;code&gt;HAVING&lt;/code&gt; works perfectly in ksqlDB)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It can be used to stream data down to other targets for further analysis&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    <item>
      <title>Copy MongoDB collections from remote to local instance</title>
      <link>https://rmoff.net/2019/12/17/copy-mongodb-collections-from-remote-to-local-instance/</link>
      <pubDate>2019-12-17</pubDate>
      
      <guid>https://rmoff.net/2019/12/17/copy-mongodb-collections-from-remote-to-local-instance/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2019/12/IMG_1581.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is revisiting &lt;a href=&#34;https://rmoff.net/2018/03/27/cloning-ubiquitis-mongodb-instance-to-a-separate-server/&#34;&gt;the blog I wrote a while back&lt;/a&gt;, which showed using &lt;code&gt;mongodump&lt;/code&gt; and &lt;code&gt;mongorestore&lt;/code&gt; to copy a MongoDB database from one machine (a Unifi CloudKey) to another. This time instead of a manual lift and shift, I wanted a simple way to automate the update of the target with changes made on the source.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The source is as before, &lt;a href=&#34;https://www.ui.com/unifi/unifi-cloud-key/&#34;&gt;Unifi&amp;#8217;s CloudKey&lt;/a&gt;, which runs MongoDB to store its data about the network - devices, access points, events, and so on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_why&#34;&gt;Why?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So that I can get this interesting data from somewhere that I cannot mess with into a place from which I can easily stream it into Kafka.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_constraints&#34;&gt;The constraints&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Unifi uses MongoDB &lt;strong&gt;v2.4.10&lt;/strong&gt; which is pretty darn old&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I must not break the source - it runs my home network and my kids will be mad if it stops working just so that I can hack around on it. I want the least-impact option, and I definitely don&amp;#8217;t want to start reconfiguring MongoDB with replicas and stuff like that&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My target MongoDB is running in Docker&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_solution&#34;&gt;The solution&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It&amp;#8217;s as hacky as they come. Instead of &lt;code&gt;mongodump&lt;/code&gt; to a file which I then copy to the target and repopulate with &lt;code&gt;mongorestore&lt;/code&gt;, I use Linux pipes and remote command execution with SSH to stream the dump from the source directly into the target.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First bring up a MongoDB container:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker run --rm &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;           --publish &lt;span style=&#34;color:#666&#34;&gt;27017&lt;/span&gt; &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;           --name mongodb &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;           mongo:4.2.2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then copy across the data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;ssh robin@unifi &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    mongodump --port &lt;span style=&#34;color:#666&#34;&gt;27117&lt;/span&gt; --db&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;ace --collection&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;device --out&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;- | &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;docker &lt;span style=&#34;color:#008000&#34;&gt;exec&lt;/span&gt; mongodb &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    mongorestore --dir&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;- --db&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;ace --collection&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;device&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In detail:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ssh robin@unifi&lt;/code&gt; connects remotely to the Unifi cloudkey server (using existing &lt;a href=&#34;https://www.rittmanmead.com/blog/2014/12/linux-cluster-sysadmin-ssh-keys/&#34;&gt;SSH keys&lt;/a&gt; for password-less authentication)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\&lt;/code&gt; is the line continuation character just to make all of this easier to read&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mongodump&lt;/code&gt; is called and the important point here is that I specify &lt;code&gt;--out=-&lt;/code&gt; which instead of dumping to file dumps to &lt;code&gt;stdout&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;|&lt;/code&gt; the magic pipe! This routes the &lt;code&gt;stdout&lt;/code&gt; from &lt;code&gt;mongodump&lt;/code&gt; into…&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker exec&lt;/code&gt; runs the following command on the MongoDB container. Because I specify the &lt;code&gt;--interactive&lt;/code&gt; argument it passes the stdout of the previous step as &lt;code&gt;stdin&lt;/code&gt; into…&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mongorestore&lt;/code&gt; which reads from &lt;code&gt;stdin&lt;/code&gt; because I&amp;#8217;ve specified &lt;code&gt;--dir=-&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The rest of the parameters are just specifying the database and collection that I want to copy. When this runs you can see the documents get created:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;…&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;-12-17T22:10:51.609+0000    restoring ace.device from -
connected to: &lt;span style=&#34;color:#666&#34;&gt;127&lt;/span&gt;.0.0.1:27117
&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;-12-17T22:10:51.807+0000    no indexes to restore
&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;-12-17T22:10:51.807+0000    finished restoring ace.device &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt; documents, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; failures&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;-12-17T22:10:51.807+0000    &lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt; document&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; restored successfully. &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; document&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; failed to restore.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you re-run it you just get duplicate key violations, which is to be expected, and means that in theory I can just rerun this process on a timed loop and pick up any new documents whilst ignoring existing ones. Not very efficient, but fairly effective :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;-12-17T22:12:18.253+0000    continuing through error: E11000 duplicate key error collection: ace.device index: _id_ dup key: &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt; _id: ObjectId&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;583854cde4b001431e4e4982&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;-12-17T22:12:18.253+0000    continuing through error: E11000 duplicate key error collection: ace.device index: _id_ dup key: &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt; _id: ObjectId&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;5d77b7a8cf2b2b01c42811b5&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;-12-17T22:12:18.253+0000    continuing through error: E11000 duplicate key error collection: ace.device index: _id_ dup key: &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt; _id: ObjectId&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;58385328e4b001431e4e497a&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;-12-17T22:12:18.254+0000    continuing through error: E11000 duplicate key error collection: ace.device index: _id_ dup key: &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt; _id: ObjectId&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;58b3fb48e4b0b79e50242621&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;-12-17T22:12:18.254+0000    continuing through error: E11000 duplicate key error collection: ace.device index: _id_ dup key: &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt; _id: ObjectId&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;58b406f1e4b0e334d74c46e4&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;-12-17T22:12:18.254+0000    no indexes to restore
&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;-12-17T22:12:18.254+0000    finished restoring ace.device &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; documents, &lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt; failures&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;2019&lt;/span&gt;-12-17T22:12:18.254+0000    &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; document&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; restored successfully. &lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt; document&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; failed to restore.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_iterating_across_collections&#34;&gt;Iterating across collections&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Because we&amp;#8217;re using stdout/stdin we have to specify the database and collection. To loop over them you can just use a &lt;a href=&#34;https://www.cyberciti.biz/faq/bash-for-loop/&#34;&gt;for loop in bash&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; c in collection_foo collection_bar
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;do&lt;/span&gt;
    ssh robin@unifi &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;        mongodump --port &lt;span style=&#34;color:#666&#34;&gt;27117&lt;/span&gt; --db&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;ace --collection&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;$c&lt;/span&gt; --out&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;- | &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;    docker &lt;span style=&#34;color:#008000&#34;&gt;exec&lt;/span&gt; --interactive mongodb &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;        mongorestore --dir&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;- --db&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;ace --collection&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#19177c&#34;&gt;$c&lt;/span&gt;
&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This will run the same import/export for &lt;code&gt;collection_foo&lt;/code&gt; and &lt;code&gt;collection_bar&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>