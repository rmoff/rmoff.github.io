<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rmoff&#39;s random ramblings</title>
    <link>https://rmoff.net/</link>
    <description>Recent content on rmoff&#39;s random ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>2021-03-12</lastBuildDate>
    
        <atom:link href="https://rmoff.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>📌    🎁 A collection of Kafka-related talks 💝</title>
      <link>https://rmoff.net/2020/09/23/a-collection-of-kafka-related-talks/</link>
      <pubDate>2020-09-23</pubDate>
      
      <guid>https://rmoff.net/2020/09/23/a-collection-of-kafka-related-talks/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/09/IMG_6838.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s a collection of Kafka-related talks, &lt;em&gt;just for you.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each one has 🍿🎥 a recording, 📔 slides, and 👾 code to go and try out. &lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_lets_get_started_with_the_foundations_what_is_apache_kafka&#34;&gt;Let’s get started with the foundations - what &lt;em&gt;is&lt;/em&gt; Apache Kafka? &lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;👉 &lt;a href=&#34;https://rmoff.dev/kafka101&#34;&gt;Kafka as a Platform: the Ecosystem from the Ground Up&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;another introductory talk, going into some of the detail of ksqlDB&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;➡️ &lt;a href=&#34;https://rmoff.dev/ljc-kafka-03&#34;&gt;Introduction to ksqlDB&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_theory_and_foundations_are_useful_but_what_about_seeing_the_concepts_do_something&#34;&gt;Theory and foundations are useful, but what about seeing the concepts do something…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;▶️ &lt;a href=&#34;http://rmoff.dev/bigdataldn2020&#34;&gt;Apache Kafka and ksqlDB in Action: Let’s Build a Streaming Data Pipeline!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_real_life_examples&#34;&gt;Real-life examples&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s a nice example using real data to solve a real problem - is my train late now? What are the routes most likely to be delayed? &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;🚂 &lt;a href=&#34;https://rmoff.dev/oredev19-on-track-with-kafka&#34;&gt;On Track with Apache Kafka: Building a Streaming Platform solution with Rail Data&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Moving from 🚆to 🚗, let’s take another real data feed and build some realtime location-based notifications 📟&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;🤖 &lt;a href=&#34;https://rmoff.dev/carpark-telegram-bot&#34;&gt;Building a Telegram bot with Go, Apache Kafka, and ksqlDB&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_integration_and_data_pipelines&#34;&gt;Integration and data pipelines&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Integration between Kafka and other systems? Kafka Connect has you covered ⚡&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;⏱️ &lt;a href=&#34;https://www.youtube.com/watch?v=RQn3tYvkeh8&#34;&gt;Kafka Connect in 60 seconds&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;🦸‍ &lt;a href=&#34;https://talks.rmoff.net/ScGJTe&#34;&gt;From Zero to Hero with Kafka Connect&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;🧞 &lt;a href=&#34;https://rmoff.dev/no-more-silos&#34;&gt;No More Silos: How to Integrate Your Databases with Apache Kafka and CDC&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The question that always comes up when we talk about integration - how to get data from Oracle into Apache Kafka?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ℹ️ &lt;a href=&#34;https://rmoff.dev/oracle-and-kafka&#34;&gt;Integrating Oracle and Kafka&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_architecture&#34;&gt;Architecture&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A change of pace from the hands-on, and instead some architectural consideration and thoughts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;🏛 &lt;a href=&#34;https://rmoff.dev/oredev19-changing-face-of-etl&#34;&gt;The Changing Face of ETL: Event-Driven Architectures for Data Engineers&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_for_more_great_apache_kafka_and_confluent_platform_content_subscribe_to_these_youtube_channels&#34;&gt;For more great Apache Kafka and Confluent Platform content subscribe to these Youtube channels 👍&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;🎥 &lt;a href=&#34;https://youtube.com/rmoff&#34;&gt;Robin Moffatt&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;🎥 &lt;a href=&#34;https://www.youtube.com/ViktorGamov&#34;&gt;Viktor Gamov&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;🎥 &lt;a href=&#34;https://www.youtube.com/confluent&#34;&gt;Confluent&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Kafka Connect JDBC Sink deep-dive: Working with Primary Keys</title>
      <link>https://rmoff.net/2021/03/12/kafka-connect-jdbc-sink-deep-dive-working-with-primary-keys/</link>
      <pubDate>2021-03-12</pubDate>
      
      <guid>https://rmoff.net/2021/03/12/kafka-connect-jdbc-sink-deep-dive-working-with-primary-keys/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2021/03/IMG_9198.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Kafka Connect JDBC Sink can be used to stream data from a Kafka topic to a database such as Oracle, Postgres, MySQL, DB2, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It supports many permutations of configuration around how &lt;strong&gt;primary keys&lt;/strong&gt; are handled. The &lt;a href=&#34;https://docs.confluent.io/kafka-connect-jdbc/current/sink-connector/sink_config_options.html#data-mapping?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_jdbc-sink-primary-keys&amp;amp;utm_term=rmoff-devx&#34;&gt;documentation&lt;/a&gt; details these. This article aims to illustrate and expand on this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ABOJGB5G35k&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;❗ Want to cut to the chase? Check out the &lt;a href=&#34;https://www.youtube.com/watch?v=ABOJGB5G35k&amp;amp;t=2506s&#34;&gt;TL;DW (too long; didn’t watch) summary&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_background&#34;&gt;Background&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_what_is_the_kafka_connect_jdbc_sink_connector&#34;&gt;What is the Kafka Connect JDBC Sink connector?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The JDBC connector is a plugin for Kafka Connect for streaming data both ways between a database and Apache Kafka.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Learn more about it in the &lt;a href=&#34;https://docs.confluent.io/kafka-connect-jdbc/current/sink-connector/index.html?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_jdbc-sink-primary-keys&amp;amp;utm_term=rmoff-devx&#34;&gt;documentation&lt;/a&gt;, this &lt;a href=&#34;https://rmoff.dev/ksqldb-jdbc-sink-video&#34;&gt;🎥 video&lt;/a&gt;, and &lt;a href=&#34;https://rmoff.dev/ksqldb-jdbc-sink&#34;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_what_is_kafka_connect&#34;&gt;What is Kafka Connect?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/RQn3tYvkeh8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;👉 Learn more: &lt;a href=&#34;https://rmoff.dev/zero-to-hero&#34;&gt;From Zero to Hero with Kafka Connect&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_why_do_i_care_about_primary_keys&#34;&gt;Why do I care about primary keys?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ABOJGB5G35k&amp;amp;t=42s&#34;&gt;🎥 Watch&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you want to create the target table with the correct primary key column(s)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to &lt;strong&gt;update&lt;/strong&gt; existing records based on their key (i.e. &lt;code&gt;insert.mode&lt;/code&gt; of &lt;code&gt;upsert&lt;/code&gt; or &lt;code&gt;update&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to &lt;strong&gt;delete&lt;/strong&gt; existing records based on their key (i.e. &lt;code&gt;delete.enabled&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and you are sending tombstone records from your source topic)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_keys_and_values_in_kafka_messages&#34;&gt;Keys and Values in Kafka Messages&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Messages in Apache Kafka are key/value pairs. The key and value may each hold a complex payload. Equally, they may also be null (although both being null wouldn’t make so much sense).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The key in Apache Kafka messages is set by the producing application, whether that’s using the Producer API directly, or a Kafka Connect source connector.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_serialization_formats&#34;&gt;Serialization formats&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Data in Apache Kafka messages is just bytes, so far as Apache Kafka is concerned. When working with that data we need to use SerDes to serialize and deserialize it - in &lt;a href=&#34;https://www.confluent.io/blog/kafka-connect-deep-dive-converters-serialization-explained?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_jdbc-sink-primary-keys&amp;amp;utm_term=rmoff-devx&#34;&gt;Kafka Connect these are called &lt;strong&gt;Converters&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Kafka Connect JDBC Sink &lt;strong&gt;requires&lt;/strong&gt; that the value part of the message is serialized using a format that has an &lt;em&gt;explicitly declared schema&lt;/em&gt;. This means it &lt;em&gt;must&lt;/em&gt; be one of the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Written using one of the &lt;a href=&#34;https://docs.confluent.io/platform/current/schema-registry/serdes-develop/index.html#supported-formats?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_jdbc-sink-primary-keys&amp;amp;utm_term=rmoff-devx&#34;&gt;serializers provided by the Confluent Schema Registry&lt;/a&gt; (or accompanying converters in Kafka Connect)&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Avro&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Protobuf&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSON Schema&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Written from Kafka Connect using the JSON Converter &lt;strong&gt;with &lt;code&gt;schemas.enable&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;You cannot use plain JSON, CSV, etc with the JDBC Sink connector&lt;/strong&gt;. If you have this kind of data on your source topic you’ll need to apply a schema to it first and write it to a new topic serialized appropriately, for example by &lt;a href=&#34;https://www.youtube.com/watch?v=b-3qN_tlYR4&amp;amp;t=1683s&#34;&gt;applying a schema to JSON data with ksqlDB&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The value and key part of your message can be serialized using different formats. Make sure you know how each is serialized as this can have a big impact particularly when it comes to handling keys.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There’s also good documentation about &lt;a href=&#34;https://docs.ksqldb.io/en/latest/reference/serialization/?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_jdbc-sink-primary-keys&amp;amp;utm_term=rmoff-devx&#34;&gt;serialization formats in ksqlDB&lt;/a&gt;. For general reference about the importance of schemas in your Kafka messages I would recommend:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.infoq.com/presentations/contracts-streaming-microservices/&#34;&gt;🎥 Streaming Microservices: Contracts and Compatibility – Gwen Shapira – QCon&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.confluent.io/blog/schema-registry-kafka-stream-processing-yes-virginia-you-really-need-one/?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_jdbc-sink-primary-keys&amp;amp;utm_term=rmoff-devx&#34;&gt;✍️ Yes, Virginia, You Really Do Need a Schema Registry&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.confluent.io/blog/schemas-contracts-compatibility/?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_jdbc-sink-primary-keys&amp;amp;utm_term=rmoff-devx&#34;&gt;✍️ Schemas, Contracts, and Compatibility&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_an_important_note_about_the_environment&#34;&gt;An important note about the environment&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find the Docker Compose to spin up the environment used in this blog &lt;a href=&#34;https://github.com/confluentinc/demo-scene/blob/master/kafka-to-database/&#34;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’m using ksqlDB as my interface for populating topics and creating connectors. You can do both, either, or neither.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;These are just Kafka topics, to which you can write with the Producer API if you’d like (using the &lt;a href=&#34;https://docs.confluent.io/platform/current/schema-registry/serdes-develop/index.html#supported-formats?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_jdbc-sink-primary-keys&amp;amp;utm_term=rmoff-devx&#34;&gt;appropriate serializer&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This is just Kafka Connect with a &lt;a href=&#34;https://rmoff.dev/create-connector-rest-api&#34;&gt;REST API that you can use directly&lt;/a&gt; if you’d rather&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_lets_get_started&#34;&gt;Let’s get started!&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_no_primary_key_handling_at_all&#34;&gt;No primary key handling at all&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ABOJGB5G35k&amp;amp;t=76s&#34;&gt;🎥 Watch&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We’ll start off with the most simple example, and build from there. To begin, we’ll have no key at all:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_01&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_TOPIC&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_01&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;VALUE_FORMAT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PARTITIONS&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_01&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Throughout this I’ll use &lt;code&gt;PRINT&lt;/code&gt; in ksqlDB to inspect the message structure (pay attention to the &lt;code&gt;Key&lt;/code&gt; and &lt;code&gt;Value&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PRINT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_01&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BEGINNING&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;¯\&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;ツ&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;¯&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;processed&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;AVRO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;26&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;300&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can also use kafkacat for this although it’s a tad more fiddly than &lt;code&gt;PRINT&lt;/code&gt; alone:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;docker &lt;span style=&#34;color: #0086B3&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-i&lt;/span&gt; kafkacat kafkacat &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; broker:29092 &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-e&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; http://schema-registry:8081 &lt;span style=&#34;color: #000080&#34;&gt;-s&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;avro &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; FOO_01 &lt;span style=&#34;color: #000080&#34;&gt;-f&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;Topic+Partition+Offset: %t+%p+%o\tKey: %k\tValue: %s\n&amp;#39;&lt;/span&gt;

Topic+Partition+Offset: FOO_01+0+0      Key:    Value: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;int&amp;#34;&lt;/span&gt;: 0&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;int&amp;#34;&lt;/span&gt;: 0&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s push this topic to Postgres:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_01_0&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                          &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                                  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_01&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter.schema.registry.url&amp;#39;&lt;/span&gt;       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schema.registry.url&amp;#39;&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                             &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Check the connector is working ✅&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DESCRIBE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_01_0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Name&lt;/span&gt;                 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_01_0&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Class&lt;/span&gt;                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;io&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;confluent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;jdbc&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;JdbcSinkConnector&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;                 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;sink&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;State&lt;/span&gt;                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;RUNNING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerId&lt;/span&gt;             &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;8083&lt;/span&gt;

 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Task&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ID&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;State&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Trace&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;---------------------------------&lt;/span&gt;
 &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;RUNNING&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;---------------------------------&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Check the data in Postgres ✅&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;docker &lt;span style=&#34;color: #0086B3&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-it&lt;/span&gt; postgres bash &lt;span style=&#34;color: #000080&#34;&gt;-c&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;psql -U $POSTGRES_USER $POSTGRES_DB&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_01&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------+------&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;    &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;row&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that in the above connector these (and other) configuration parameter assume their default values:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;pk.fields   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[]&lt;/span&gt;
pk.mode     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; none
insert.mode &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; insert&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_using_a_field_in_the_value_as_the_key&#34;&gt;Using a field in the value as the key&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ABOJGB5G35k&amp;amp;t=372s&#34;&gt;🎥 Watch&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s imagine that of the two fields in the value of our message we want to set one of them as the primary key. We’ll create a new version of this topic and add a couple more rows this time too&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_02&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_TOPIC&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_02&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;VALUE_FORMAT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PARTITIONS&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_02&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_02&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_02&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;94&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now our topic looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PRINT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_02&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BEGINNING&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;¯\&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;ツ&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;¯&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;processed&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;AVRO&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;016&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;067&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;117&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;94&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;printing&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ceased&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As always, pay attention to the &lt;code&gt;key&lt;/code&gt; vs &lt;code&gt;value&lt;/code&gt; part of the message. Here the key is still null.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since it’s a field in the value (we’ll use &lt;code&gt;COL1&lt;/code&gt;) that we want to use as the primary key on the target database we use &lt;code&gt;pk.mode=record_value&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We’re saying for the primary key of the target table, use a field(s) from the &lt;strong&gt;value&lt;/strong&gt; of the &lt;strong&gt;record&lt;/strong&gt;. We need to identify those fields using &lt;code&gt;pk.fields&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_02_0&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                              &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_02&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter.schema.registry.url&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schema.registry.url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode&amp;#39;&lt;/span&gt;                             &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;record_value&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.fields&amp;#39;&lt;/span&gt;                           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;COL1&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This &lt;em&gt;seems&lt;/em&gt; to work if we check the status of it at first 🤔&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DESCRIBE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_02_0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Name&lt;/span&gt;                 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_02_0&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Class&lt;/span&gt;                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;io&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;confluent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;jdbc&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;JdbcSinkConnector&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;                 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;sink&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;State&lt;/span&gt;                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;RUNNING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerId&lt;/span&gt;             &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;8083&lt;/span&gt;

 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Task&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ID&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;State&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Trace&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;---------------------------------&lt;/span&gt;
 &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;RUNNING&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;---------------------------------&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But after a while twiddling our thumbs and wondering why there’s no data arriving in Postgres we check the connector again and see 😢&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DESCRIBE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_02_0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Name&lt;/span&gt;                 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_02_0&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Class&lt;/span&gt;                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;io&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;confluent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;jdbc&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;JdbcSinkConnector&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;                 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;sink&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;State&lt;/span&gt;                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;RUNNING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerId&lt;/span&gt;             &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;8083&lt;/span&gt;

 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Task&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ID&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;State&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Trace&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/span&gt;
 &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FAILED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errors&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ConnectException&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Exiting&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;due&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;unrecoverable&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;exception&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;deliverMessages&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;614&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;poll&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;329&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;iteration&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;232&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;execute&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;201&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doRun&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;185&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;234&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;util&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;concurrent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Executors&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;RunnableAdapter&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;call&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Executors&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;515&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;util&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;concurrent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FutureTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FutureTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;264&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;util&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;concurrent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runWorker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1128&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;util&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;concurrent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Worker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;628&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Thread&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Thread&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;834&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Caused&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;by&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errors&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ConnectException&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;sql&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SQLException&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;chain&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;sql&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BatchUpdateException&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Batch&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;entry&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_02&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VALUES&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;was&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;aborted&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ERROR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;duplicate&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;violates&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;unique&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;constraint&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_02_pkey&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Detail&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;already&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;exists&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Call&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;getNextException&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;see&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;other&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errors&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;batch&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;
  &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As error messages go it’s a pretty good one 👍&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;duplicate&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;violates&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;unique&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;constraint&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_02_pkey&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;already&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;exists&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_using_an_upsert_in_the_kafka_connect_jdbc_sink_connector&#34;&gt;Using an &lt;code&gt;UPSERT&lt;/code&gt; in the Kafka Connect JDBC Sink connector&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ABOJGB5G35k&amp;amp;t=755s&#34;&gt;🎥 Watch&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The problem? We have three records on the source topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;94&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And the second record has the same value of &lt;code&gt;COL1=0&lt;/code&gt;) as the first, and thus the primary key we are defining would be violated. That’s one of the purposes of a primary key!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s assume that we &lt;em&gt;do&lt;/em&gt; want to ingest the data from this topic to Postgres, and in fact the two records for &lt;code&gt;COL1=0&lt;/code&gt; are not erroneous but are logically valid and one is intended to &lt;em&gt;replace&lt;/em&gt; the other.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This calls for an &lt;code&gt;UPSERT&lt;/code&gt;! If a row for the primary key doesn’t exist then &lt;code&gt;INSERT&lt;/code&gt; it, but if it does then &lt;code&gt;UPDATE&lt;/code&gt; it. We can tell the connector to do this with &lt;code&gt;insert.mode=upsert&lt;/code&gt; (the default is &lt;code&gt;insert&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_02_1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                              &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_02&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter.schema.registry.url&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schema.registry.url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode&amp;#39;&lt;/span&gt;                             &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;record_value&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.fields&amp;#39;&lt;/span&gt;                           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;COL1&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;insert.mode&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This time everything goes swimmingly and we get the two (three minus one which is an update) rows in Postgres:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_02&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------+------&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #009999&#34;&gt;42&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #009999&#34;&gt;94&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s prove that the upsert is working by inserting one new row in the Kafka topic (via ksqlDB):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_02&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In Postgres we see straight away :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_02&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------+------&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #009999&#34;&gt;42&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #009999&#34;&gt;94&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #009999&#34;&gt;10&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If we write a new value for the same logical key (&lt;code&gt;COL1&lt;/code&gt;) to the Kafka topic it gets pushed to Postgres and updates the row:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_02&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_02&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------+------&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #009999&#34;&gt;42&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #009999&#34;&gt;94&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #009999&#34;&gt;20&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_using_multiple_fields_from_the_message_value_as_the_primary_key&#34;&gt;Using multiple fields from the message value as the primary key&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ABOJGB5G35k&amp;amp;t=977s&#34;&gt;🎥 Watch&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Above we saw how to take a single field from the value of the message and set it as the primary key for the target table. Now let’s do it with multiple fields.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_03&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_TOPIC&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_03&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;VALUE_FORMAT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PARTITIONS&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_03&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;XYZ&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_03&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;xxx&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;qqq&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_03&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;xxx&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;III&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We’ll use the fields &lt;code&gt;COL1&lt;/code&gt;, &lt;code&gt;COL2&lt;/code&gt;, and &lt;code&gt;COL3&lt;/code&gt; as a composite primary key. Here’s the topic contents. As before, note the difference between the Kafka message &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PRINT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_03&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BEGINNING&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;¯\&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;ツ&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;¯&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;processed&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;AVRO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;955&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL4&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;XYZ&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;009&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL4&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;qqq&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;066&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL4&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;III&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;printing&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ceased&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The connector configuration is almost exactly the same as before, except we’re specifying more than one field from the record value in &lt;code&gt;pk.fields&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_03_0&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                              &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_03&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter.schema.registry.url&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schema.registry.url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode&amp;#39;&lt;/span&gt;                             &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;record_value&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.fields&amp;#39;&lt;/span&gt;                           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;COL1,COL2,COL3&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;insert.mode&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In Postgres:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_03&amp;#34;&lt;/span&gt;
               &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Table&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;public.FOO_03&amp;#34;&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Column&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Collation&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Nullable&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Default&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;--------+---------+-----------+----------+---------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;integer&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;integer&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;text&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;text&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;          &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Indexes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_03_pkey&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;btree&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_03&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------+------+------+------&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;    &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ABC&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;XYZ&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;    &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;xxx&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;III&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are two rows as expected (three source Kafka messages, two of which share the same composite key &lt;code&gt;2&lt;/code&gt;/&lt;code&gt;2&lt;/code&gt;/&lt;code&gt;xxx&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_keys_in_kafka_messages&#34;&gt;Keys in Kafka Messages&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ABOJGB5G35k&amp;amp;t=1165s&#34;&gt;🎥 A quick explainer about keys in Kafka messages&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_using_the_key_of_the_kafka_message_as_the_primary_key_option_1_primitive_type_no_struct&#34;&gt;Using the key of the Kafka message as the primary key, option 1: primitive type (no struct)&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ABOJGB5G35k&amp;amp;t=1297s&#34;&gt;🎥 Watch&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When we say that the key of a Kafka message is a primitive type we mean that it is a string, or a type of number, and just a single field. So this is a primitive:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;42&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Whilst this isn’t (unless you want the whole literal as the key value, which is unlikely)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;json&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s populate a topic with some test data and see how this works:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_04&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL1&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_TOPIC&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_04&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;VALUE_FORMAT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KEY_FORMAT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;KAFKA&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PARTITIONS&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_04&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;mykey_val_A&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_04&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;mykey_val_B&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;XXX&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_04&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;mykey_val_A&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;ZZZ&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since we marked &lt;code&gt;COL1&lt;/code&gt; as &lt;code&gt;KEY&lt;/code&gt; its value is written to the &lt;em&gt;key&lt;/em&gt; of the Kafka message. We can kind of see this with &lt;code&gt;PRINT&lt;/code&gt; (although it’s not rendered as a string for &lt;a href=&#34;https://github.com/confluentinc/ksql/issues/5514&#34;&gt;these reasons&lt;/a&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PRINT&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_04&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BEGINNING&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;HOPPING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TUMBLING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;AVRO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;33&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;658&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;myk&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;7311980432057982785&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;33&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;706&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;myk&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;7311980432057982786&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;XXX&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;33&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;760&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;myk&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;7311980432057982785&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;ZZZ&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;printing&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ceased&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It’s much clearer (if a tad more complex to invoke) is using kafkacat:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;docker &lt;span style=&#34;color: #0086B3&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-i&lt;/span&gt; kafkacat kafkacat &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; broker:29092 &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-e&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-q&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; http://schema-registry:8081 &lt;span style=&#34;color: #000080&#34;&gt;-s&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;avro &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; FOO_04 &lt;span style=&#34;color: #000080&#34;&gt;-f&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;Offset: %o\tKey: %k\tValue: %s\n&amp;#39;&lt;/span&gt;
Offset: 0       Key: mykey_val_A        Value: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;int&amp;#34;&lt;/span&gt;: 2&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}}&lt;/span&gt;
Offset: 1       Key: mykey_val_B        Value: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;int&amp;#34;&lt;/span&gt;: 1&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;XXX&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}}&lt;/span&gt;
Offset: 2       Key: mykey_val_A        Value: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;int&amp;#34;&lt;/span&gt;: 5&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;ZZZ&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So now let’s use this and create a connector that uses the &lt;em&gt;key of the Kafka message&lt;/em&gt; as the primary key for the target table. We do that by setting &lt;code&gt;pk.mode=record_key&lt;/code&gt;. Because the key is a primitive the &lt;code&gt;pk.fields&lt;/code&gt; value is simply &lt;strong&gt;the name of the column in the database to which we want to map the Kafka message key&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_04_0&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                              &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_04&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;org.apache.kafka.connect.storage.StringConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schema.registry.url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode&amp;#39;&lt;/span&gt;                             &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;record_key&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.fields&amp;#39;&lt;/span&gt;                           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOOBAR&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;insert.mode&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The result in Postgres:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_04&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
               &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Table&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;public.FOO_04&amp;#34;&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Column&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Collation&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Nullable&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Default&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;--------+---------+-----------+----------+---------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;integer&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;          &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;text&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;          &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOOBAR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;text&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Indexes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_04_pkey&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;btree&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOOBAR&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_04&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOOBAR&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------+------+-------------&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;XXX&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;mykey_val_B&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ZZZ&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;mykey_val_A&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_deleting_records_in_the_target_database_with_kafka_connect_jdbc_sink_connector&#34;&gt;Deleting records in the target database with Kafka Connect JDBC Sink connector&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ABOJGB5G35k&amp;amp;t=1766s&#34;&gt;🎥 Watch&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So we’ve seen &lt;code&gt;INSERT&lt;/code&gt; and &lt;code&gt;UPDATE&lt;/code&gt;, but what about &lt;code&gt;DELETE&lt;/code&gt;?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A logical deletion in Kafka is represented by a tombstone message - a message with a key and a &lt;code&gt;null&lt;/code&gt; value. The Kafka Connect JDBC sink connector can be configured to delete the record in the target table which has a key matching that of the tombstone message by setting &lt;code&gt;delete.enabled=true&lt;/code&gt;. However, to do this, &lt;strong&gt;the &lt;em&gt;key&lt;/em&gt; of the Kafka message must contain the primary key field(s)&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We couldn’t use the delete option in the examples above in which the primary key value was taken from field(s) in the value. Why not? Because, by definition, the value in a tombstone message is null. The two are mutually exclusive. You can have a value which includes fields to use for the primary key, &lt;em&gt;or&lt;/em&gt; you can have a null. If it’s null, it’s not got a value. If it’s got a value, it’s not null.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;This is why keys in Kafka messages make so much sense&lt;/strong&gt;. Even if you can cram all your data into the value of the message, and you don’t need partition locality for particular instances of an entity (such as all customers on a given partition, which would drive the need to use keys)—simply the fact that your data has a logical key means that using a the Kafka message key is a good idea. If you’re using ksqlDB it added support for structured keys and supporting serialization formats in version 0.15 so there’s no excuse not to use them :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, we now have the primary key in the key of the Kafka message, as we saw above. Let’s add a tombstone message to our topic, here using the &lt;code&gt;-Z&lt;/code&gt; option of kafkacat. You can &lt;a href=&#34;https://rmoff.net/2020/11/03/kafka-connect-ksqldb-and-kafka-tombstone-messages/&#34;&gt;write NULLs using ksqlDB&lt;/a&gt; but this way is quicker for our purposes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;mykey_val_A:&amp;#34;&lt;/span&gt; | docker &lt;span style=&#34;color: #0086B3&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-i&lt;/span&gt; kafkacat kafkacat &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; broker:29092 &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; FOO_04 &lt;span style=&#34;color: #000080&#34;&gt;-Z&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-K&lt;/span&gt;: &lt;span style=&#34;color: #000080&#34;&gt;-P&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Check the data - observe the most recent message (offset 3) is a null value, denoted by the &lt;code&gt;-1&lt;/code&gt; length&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;docker &lt;span style=&#34;color: #0086B3&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-i&lt;/span&gt; kafkacat kafkacat &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; broker:29092 &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-e&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-q&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; http://schema-registry:8081 &lt;span style=&#34;color: #000080&#34;&gt;-s&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;avro &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; FOO_04 &lt;span style=&#34;color: #000080&#34;&gt;-f&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;Offset: %o\tKey: %k\tValue: %s \t(length %S)\n&amp;#39;&lt;/span&gt;
Offset: 0       Key: mykey_val_A        Value: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;int&amp;#34;&lt;/span&gt;: 2&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}}&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;length 12&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
Offset: 1       Key: mykey_val_B        Value: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;int&amp;#34;&lt;/span&gt;: 1&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;XXX&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}}&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;length 12&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
Offset: 2       Key: mykey_val_A        Value: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL2&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;int&amp;#34;&lt;/span&gt;: 5&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;, &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;ZZZ&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}}&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;length 12&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
Offset: 3       Key: mykey_val_A        Value:          &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;length &lt;span style=&#34;color: #000080&#34;&gt;-1&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we create a new connector, replacing the first one. Because it’s got a new name it will read all of the messages from the topic again.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_04_0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_04_1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                              &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_04&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;org.apache.kafka.connect.storage.StringConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schema.registry.url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode&amp;#39;&lt;/span&gt;                             &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;record_key&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.fields&amp;#39;&lt;/span&gt;                           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOOBAR&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;insert.mode&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;delete.enabled&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In the target table we see that the row for &lt;code&gt;mykey_val_B&lt;/code&gt; has been deleted:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_04&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL2&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOOBAR&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------+------+-------------&lt;/span&gt;
    &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;XXX&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;mykey_val_B&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;row&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_using_the_key_of_the_kafka_message_as_the_primary_key_option_2_structured_keys&#34;&gt;Using the key of the Kafka message as the primary key, option 2: structured keys&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;👉 &lt;em&gt;Recommended reading if you’re using ksqlDB: &lt;a href=&#34;https://www.confluent.io/blog/ksqldb-0-15-reads-more-message-keys-supports-more-data-types/?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_jdbc-sink-primary-keys&amp;amp;utm_term=rmoff-devx&#34;&gt;✍️ Keys in ksqlDB, Unlocked&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ABOJGB5G35k&amp;amp;t=1925s&#34;&gt;🎥 Watch&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We saw above that if you want to use the key of the Kafka message as the primary key in the table you set &lt;code&gt;pk.mode=record_key&lt;/code&gt; and then in &lt;code&gt;pk.fields&lt;/code&gt; specify the name of the column in the database to store the value. But what about if you have a structured key? That is, one in which you’ve serialized it with a schema and have one (or more) fields that you want to use for the primary key?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s populate a new Kafka topic to illustrate this. There’s an &lt;a href=&#34;https://github.com/confluentinc/ksql/issues/7211&#34;&gt;open issue in ksqlDB 0.15&lt;/a&gt; which means that it can’t write complex keys with the Schema Registry so for now I’ll just use the kafka-avro-console-producer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Get a shell inside the Schema Registry container because&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# the kafka-avro-console-producer script is available there&lt;/span&gt;
docker &lt;span style=&#34;color: #0086B3&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-it&lt;/span&gt; schema-registry bash&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Run this in the above shell, or elsewhere where the&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# kafka-avro-console-producer script exists&lt;/span&gt;
kafka-avro-console-producer &lt;span style=&#34;color: #000080&#34;&gt;--topic&lt;/span&gt; FOO_06 &lt;span style=&#34;color: #000080&#34;&gt;--bootstrap-server&lt;/span&gt; broker:29092 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
 &lt;span style=&#34;color: #000080&#34;&gt;--property&lt;/span&gt; key.schema&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;{&amp;#34;type&amp;#34;:&amp;#34;record&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;FOO05key&amp;#34;,&amp;#34;fields&amp;#34;:[{&amp;#34;name&amp;#34;:&amp;#34;K1&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;string&amp;#34;},{&amp;#34;name&amp;#34;:&amp;#34;K2&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;int&amp;#34;}]}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
 &lt;span style=&#34;color: #000080&#34;&gt;--property&lt;/span&gt; value.schema&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;{&amp;#34;type&amp;#34;:&amp;#34;record&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;FOO05value&amp;#34;,&amp;#34;fields&amp;#34;:[{&amp;#34;name&amp;#34;:&amp;#34;COL3&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;string&amp;#34;},{&amp;#34;name&amp;#34;:&amp;#34;COL4&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;string&amp;#34;}]}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
 &lt;span style=&#34;color: #000080&#34;&gt;--property&lt;/span&gt; parse.key&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
 &lt;span style=&#34;color: #000080&#34;&gt;--property&lt;/span&gt; key.separator&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;
{&amp;#34;K1&amp;#34;: &amp;#34;mykey_val_A&amp;#34;, &amp;#34;K2&amp;#34;: 1}+{&amp;#34;COL3&amp;#34;: &amp;#34;NEVER&amp;#34;, &amp;#34;COL4&amp;#34;: &amp;#34;GONNA&amp;#34;}
{&amp;#34;K1&amp;#34;: &amp;#34;mykey_val_A&amp;#34;, &amp;#34;K2&amp;#34;: 2}+{&amp;#34;COL3&amp;#34;: &amp;#34;GIVE&amp;#34;, &amp;#34;COL4&amp;#34;: &amp;#34;YOU&amp;#34;}
{&amp;#34;K1&amp;#34;: &amp;#34;mykey_val_A&amp;#34;, &amp;#34;K2&amp;#34;: 3}+{&amp;#34;COL3&amp;#34;: &amp;#34;UP&amp;#34;, &amp;#34;COL4&amp;#34;: &amp;#34;🎙️&amp;#34;}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Head over to ksqlDB and check the data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PRINT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_06&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BEGINNING&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;AVRO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;HOPPING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TUMBLING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;AVRO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;337&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;mykey_val_A&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;NEVER&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL4&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;GONNA&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;362&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;mykey_val_A&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;GIVE&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL4&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;YOU&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;363&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;mykey_val_A&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;UP&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL4&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;🎙️&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;printing&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ceased&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now when we push this topic to the database and want to use the key of the Kafka message as the primary key in the target table we have a decision to make - which column(s) of the key to use? This is where &lt;strong&gt;&lt;code&gt;pk.fields&lt;/code&gt; takes on a different meaning&lt;/strong&gt; from above. When we were working with primitive keys &lt;code&gt;pk.fields&lt;/code&gt; was &lt;em&gt;an arbitrary name of the column to write the key value to in the target table&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now that we have a structured key with field names of its own &lt;code&gt;pk.fields&lt;/code&gt; can &lt;em&gt;either&lt;/em&gt; be &lt;strong&gt;blank&lt;/strong&gt; (use all the fields in the key, and create each as a column of the same name in the target database) or it can be &lt;strong&gt;a list of selected field(s) from the Kafka message key&lt;/strong&gt; that we want to use as the primary key.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here we use all the fields from the Kafka message key as the primary key in the target table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_06_0&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                              &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_06&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter.schema.registry.url&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schema.registry.url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode&amp;#39;&lt;/span&gt;                             &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;record_key&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.fields&amp;#39;&lt;/span&gt;                           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;insert.mode&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;delete.enabled&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The key is carried through to Postgres as expected:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_06&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
               &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Table&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;public.FOO_06&amp;#34;&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Column&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Collation&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Nullable&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Default&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;--------+---------+-----------+----------+---------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;text&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;text&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;text&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;integer&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Indexes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_06_pkey&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;btree&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_06&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1&lt;/span&gt;      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-------+-------+-------------+----&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;NEVER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;GONNA&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;mykey_val_A&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;GIVE&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;YOU&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;mykey_val_A&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;UP&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;🎙️&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;mykey_val_A&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s try a variation on this and use just part of the key.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ABOJGB5G35k&amp;amp;t=2168s&#34;&gt;🎥 Watch&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We’ll drop the table and connector and then recreate them with new config:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_06&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_06_0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-----------------------------------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Dropped&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;connector&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;SINK_FOO_06_0&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-----------------------------------&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we use &lt;code&gt;pk.fields&lt;/code&gt; to identify &lt;strong&gt;one&lt;/strong&gt; of the fields from the Kafka message key:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_06_1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                              &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_06&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter.schema.registry.url&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.avro.AvroConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schema.registry.url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode&amp;#39;&lt;/span&gt;                             &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;record_key&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.fields&amp;#39;&lt;/span&gt;                           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;K2&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;insert.mode&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;delete.enabled&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This time &lt;code&gt;K1&lt;/code&gt; in the Kafka message key is ignored and just the specified field &lt;code&gt;K2&lt;/code&gt; is used as the primary key on the table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_06&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
               &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Table&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;public.FOO_06&amp;#34;&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Column&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Collation&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Nullable&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Default&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;--------+---------+-----------+----------+---------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;text&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;text&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;integer&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Indexes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_06_pkey&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;btree&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K2&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_06&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-------+-------+----&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;NEVER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;GONNA&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;GIVE&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;YOU&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;UP&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;🎙️&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What if you still want the data from &lt;code&gt;K1&lt;/code&gt; in the target table, but not as part of the primary key? For that you’d use either &lt;a href=&#34;https://docs.confluent.io/platform/current/connect/transforms/custom.html?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_jdbc-sink-primary-keys&amp;amp;utm_term=rmoff-devx&#34;&gt;a custom Single Message Transform&lt;/a&gt; or some stream processing such as this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ABOJGB5G35k&amp;amp;t=2262s&#34;&gt;🎥 Watch&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- Register the topic as a ksqlDB stream&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_06&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_TOPIC&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_06&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FORMAT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;AVRO&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- Verify key/value schema&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DESCRIBE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_06&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Name&lt;/span&gt;                 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_06&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Field&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-------------------------------------------------------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ROWKEY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRUCT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;INTEGER&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-------------------------------------------------------&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- When consuming from Kafka read all existing messages too&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.offset.reset&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;earliest&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- Populate a new Kafka topic with altered key/value structure&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_06_RESTRUCTURE_01&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ROWKEY&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
         &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;AS_VALUE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ROWKEY&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
         &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
         &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_06&lt;/span&gt;
    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PARTITION&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ROWKEY&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- Examine new key/value schema&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DESCRIBE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_06_RESTRUCTURE_01&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Name&lt;/span&gt;                 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_06_RESTRUCTURE_01&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Field&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;--------------------------------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;INTEGER&lt;/span&gt;          &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;--------------------------------&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- Examine data&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PRINT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_06_RESTRUCTURE_01&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BEGINNING&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;AVRO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;AVRO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;26&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;05&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;004&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;mykey_val_A&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;NEVER&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL4&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;GONNA&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;26&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;05&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;027&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;mykey_val_A&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;GIVE&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL4&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;YOU&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;26&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;05&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;028&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K1&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;mykey_val_A&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;UP&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COL4&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;🎙️&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;printing&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ceased&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_common_errors&#34;&gt;Common errors&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_trying_to_read_data_that_has_not_been_serialized_with_schema_registry_e_g_avro_protobuf_json_schema&#34;&gt;Trying to read data that has not been serialized with Schema Registry (e.g. Avro, Protobuf, JSON Schema)&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As noted in the introduction, the Kafka Connect JDBC Sink connector requires that you use a serialization format that includes a schema. Let’s see what happens if you don’t, by creating a Kafka topic with data in plain JSON in both the key and value:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Key/value are separated by the + character&lt;/span&gt;
docker &lt;span style=&#34;color: #0086B3&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-i&lt;/span&gt; kafkacat kafkacat &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; broker:29092 &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; FOO_08 &lt;span style=&#34;color: #000080&#34;&gt;-K&lt;/span&gt;+ &lt;span style=&#34;color: #000080&#34;&gt;-P&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;
{&amp;#34;K1_GEO&amp;#34;:&amp;#34;EMEA&amp;#34;,&amp;#34;K2_BU&amp;#34;:&amp;#34;XYZ&amp;#34;,&amp;#34;K3_ID&amp;#34;:1}+{&amp;#34;COL3&amp;#34;:&amp;#34;FOO&amp;#34;,&amp;#34;COL4&amp;#34;:&amp;#34;BAR&amp;#34;}
{&amp;#34;K1_GEO&amp;#34;:&amp;#34;EMEA&amp;#34;,&amp;#34;K2_BU&amp;#34;:&amp;#34;XYZ&amp;#34;,&amp;#34;K3_ID&amp;#34;:2}+{&amp;#34;COL3&amp;#34;:&amp;#34;ZXC&amp;#34;,&amp;#34;COL4&amp;#34;:&amp;#34;ASD&amp;#34;}
{&amp;#34;K1_GEO&amp;#34;:&amp;#34;APAC&amp;#34;,&amp;#34;K2_BU&amp;#34;:&amp;#34;FGH&amp;#34;,&amp;#34;K3_ID&amp;#34;:9}+{&amp;#34;COL3&amp;#34;:&amp;#34;QQQ&amp;#34;,&amp;#34;COL4&amp;#34;:&amp;#34;WWW&amp;#34;}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If we consume the data with kafkacat we can see it is just straight JSON:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;docker &lt;span style=&#34;color: #0086B3&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-i&lt;/span&gt; kafkacat kafkacat &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; broker:29092 &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-e&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-q&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; FOO_08 &lt;span style=&#34;color: #000080&#34;&gt;-f&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;Offset: %o\tKey: %k\tValue: %s \t(length %S)\n&amp;#39;&lt;/span&gt;
Offset: 0       Key: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;K1_GEO&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;EMEA&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;K2_BU&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;XYZ&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;K3_ID&amp;#34;&lt;/span&gt;:1&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;  Value: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;FOO&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL4&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;BAR&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;length 27&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
Offset: 1       Key: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;K1_GEO&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;EMEA&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;K2_BU&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;XYZ&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;K3_ID&amp;#34;&lt;/span&gt;:2&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;  Value: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;ZXC&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL4&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;ASD&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;length 27&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
Offset: 2       Key: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;K1_GEO&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;APAC&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;K2_BU&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;FGH&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;K3_ID&amp;#34;&lt;/span&gt;:9&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;  Value: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL3&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;QQQ&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COL4&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;WWW&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;length 27&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What we want to do is push this data to a database, and set the primary key on the target table as the three fields in the Kafka key.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s see what happens if we do this with the data as it stands.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_08_0&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_08&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;org.apache.kafka.connect.json.JsonConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter.schemas.enable&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;org.apache.kafka.connect.json.JsonConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schemas.enable&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode&amp;#39;&lt;/span&gt;                        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;record_key&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.fields&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;insert.mode&amp;#39;&lt;/span&gt;                    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;delete.enabled&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We get the error &lt;code&gt;Sink connector &amp;#39;SINK_FOO_08_0&amp;#39; is configured with &amp;#39;delete.enabled=true&amp;#39; and &amp;#39;pk.mode=record_key&amp;#39; and therefore requires records with a non-null key and non-null Struct or primitive key schema, but found record at (topic=&amp;#39;FOO_08&amp;#39;,partition=0,offset=0,timestamp=1615547451030) with a HashMap key and null key schema.&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;org.apache.kafka.connect.errors.ConnectException: Exiting WorkerSinkTask due to unrecoverable exception.
        at org.apache.kafka.connect.runtime.WorkerSinkTask.deliverMessages&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:614&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerSinkTask.poll&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:329&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerSinkTask.iteration&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:232&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerSinkTask.execute&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:201&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerTask.doRun&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerTask.java:185&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerTask.run&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerTask.java:234&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at java.base/java.util.concurrent.Executors&lt;span style=&#34;color: #008080&#34;&gt;$RunnableAdapter&lt;/span&gt;.call&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;Executors.java:515&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at java.base/java.util.concurrent.FutureTask.run&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;FutureTask.java:264&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;ThreadPoolExecutor.java:1128&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at java.base/java.util.concurrent.ThreadPoolExecutor&lt;span style=&#34;color: #008080&#34;&gt;$Worker&lt;/span&gt;.run&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;ThreadPoolExecutor.java:628&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at java.base/java.lang.Thread.run&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;Thread.java:834&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
Caused by: org.apache.kafka.connect.errors.ConnectException: Sink connector &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;SINK_FOO_08_0&amp;#39;&lt;/span&gt; is configured with &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;delete.enabled=true&amp;#39;&lt;/span&gt; and &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode=record_key&amp;#39;&lt;/span&gt; and therefore requires records with a non-null key and non-null Struct or primitive key schema, but found record at &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_08&amp;#39;&lt;/span&gt;,partition&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;0,offset&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;0,timestamp&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;1615547451030&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt; with a HashMap key and null key schema.
        at io.confluent.connect.jdbc.sink.RecordValidator.lambda&lt;span style=&#34;color: #008080&#34;&gt;$requiresKey$3&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;RecordValidator.java:113&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at io.confluent.connect.jdbc.sink.BufferedRecords.add&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;BufferedRecords.java:82&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at io.confluent.connect.jdbc.sink.JdbcDbWriter.write&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;JdbcDbWriter.java:66&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at io.confluent.connect.jdbc.sink.JdbcSinkTask.put&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;JdbcSinkTask.java:74&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerSinkTask.deliverMessages&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:586&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        ... 10 more&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s try randomly jiggling things to see if they unbreak. Since the error mentions &lt;code&gt;delete.enabled&lt;/code&gt; let’s try disabling it&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_08_1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_08&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;org.apache.kafka.connect.json.JsonConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter.schemas.enable&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;org.apache.kafka.connect.json.JsonConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schemas.enable&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode&amp;#39;&lt;/span&gt;                        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;record_key&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.fields&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;insert.mode&amp;#39;&lt;/span&gt;                    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;delete.enabled&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We just get variations on a theme: &lt;code&gt;Caused by: org.apache.kafka.connect.errors.ConnectException: Sink connector &amp;#39;SINK_FOO_08_1&amp;#39; is configured with &amp;#39;delete.enabled=false&amp;#39; and &amp;#39;pk.mode=record_key&amp;#39; and therefore requires records with a non-null key and non-null Struct or primitive key schema, but found record at (topic=&amp;#39;FOO_08&amp;#39;,partition=0,offset=0,timestamp=1615547451030) with a HashMap key and null key schema.&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The nub of the issue is this: &lt;code&gt;requires records with a non-null key and non-null Struct or primitive key schema&lt;/code&gt;, and we’re supplying a &lt;code&gt;HashMap key and null key schema&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Even if we ditch the idea of using the individual key fields and instead treat it as a primitive string (by using &lt;code&gt;org.apache.kafka.connect.storage.StringConverter&lt;/code&gt; instead of &lt;code&gt;org.apache.kafka.connect.json.JsonConverter&lt;/code&gt;), it doesn’t get us much further:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_08_2&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_08&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;org.apache.kafka.connect.storage.StringConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;org.apache.kafka.connect.json.JsonConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schemas.enable&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode&amp;#39;&lt;/span&gt;                        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;record_key&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.fields&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;insert.mode&amp;#39;&lt;/span&gt;                    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;delete.enabled&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That throws &lt;code&gt;org.apache.kafka.connect.errors.ConnectException: Need exactly one PK column defined since the key schema for records is a primitive type, defined columns are: []&lt;/code&gt; which makes sense, so let’s specify the name of the target column in the database into which the primitive value should be stored (using &lt;code&gt;pk.fields&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_08_3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_08&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;org.apache.kafka.connect.storage.StringConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;org.apache.kafka.connect.json.JsonConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schemas.enable&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode&amp;#39;&lt;/span&gt;                        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;record_key&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.fields&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;MY_KEY&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;insert.mode&amp;#39;&lt;/span&gt;                    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;delete.enabled&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That leads us off even further into the weeds with a new error that makes less sense:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DESCRIBE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_08_3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Name&lt;/span&gt;                 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_08_3&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Class&lt;/span&gt;                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;io&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;confluent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;jdbc&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;JdbcSinkConnector&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;                 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;sink&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;State&lt;/span&gt;                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;RUNNING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerId&lt;/span&gt;             &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;8083&lt;/span&gt;

 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Task&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ID&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;State&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Trace&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/span&gt;
 &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FAILED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errors&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ConnectException&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Exiting&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;due&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;unrecoverable&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;exception&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;deliverMessages&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;614&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;poll&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;329&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;iteration&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;232&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;execute&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;201&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doRun&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;185&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;234&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;util&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;concurrent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Executors&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;RunnableAdapter&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;call&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Executors&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;515&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;util&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;concurrent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FutureTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FutureTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;264&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;util&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;concurrent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runWorker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1128&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;util&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;concurrent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Worker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;628&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Thread&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Thread&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;834&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Caused&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;by&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ClassCastException&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;util&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;HashMap&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cannot&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;be&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;cast&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Struct&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;util&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;HashMap&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;module&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;base&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;loader&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;bootstrap&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Struct&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;unnamed&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;module&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;loader&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;io&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;confluent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;jdbc&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;sink&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PreparedStatementBinder&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;bindRecord&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PreparedStatementBinder&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;io&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;confluent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;jdbc&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;sink&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BufferedRecords&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;flush&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BufferedRecords&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;182&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;io&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;confluent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;jdbc&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;sink&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;JdbcDbWriter&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;JdbcDbWriter&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;io&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;confluent&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;jdbc&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;sink&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;JdbcSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;JdbcSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;74&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;deliverMessages&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WorkerSinkTask&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;java&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;586&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;...&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;more&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This somewhat cryptic error (&lt;code&gt;class java.util.HashMap cannot be cast to class org.apache.kafka.connect.data.Struct (java.util.HashMap is in module java.base of loader &amp;#39;bootstrap&amp;#39;; org.apache.kafka.connect.data.Struct is in unnamed module of loader &amp;#39;app&amp;#39;)&lt;/code&gt;) is basically saying that whilst it’s happy now with treating the key as a primitive to load into the column that we named, &lt;a href=&#34;https://rmoff.net/2020/01/22/kafka-connect-and-schemas/&#34;&gt;it is expecting a struct in the value part of the message&lt;/a&gt;, rather than the HashMap that it got from us using &lt;code&gt;org.apache.kafka.connect.json.JsonConverter&lt;/code&gt;. Since we don’t have the schema itself embedded in the JSON message (so &lt;code&gt;schemas.enable=false&lt;/code&gt;) then we need to apply the schema some other way.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The best way to do this is to fix it at source: when the data is written to Kafka, make sure that it’s written using a serializer that’s going to store the schema and not throw it away. Good options are Avro, Protobuf, and JSON Schema.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That’s not always possible though, and you’re sometimes stuck with plain JSON data that you really want to load into a database. If that’s the case you’ll need to pre-process the topic using stream processing. Kafka Streams is one option, but &lt;a href=&#34;https://www.youtube.com/watch?v=sLAztA-rt74&#34;&gt;ksqlDB is arguably easier&lt;/a&gt; and is what I’ll show here (there’s also a &lt;a href=&#34;https://www.youtube.com/watch?v=sLAztA-rt74&#34;&gt;video tutorial&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To start with we create a new stream in ksqlDB and declare the schema of the JSON data in both the key and value:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- Register the existing topic as a ksqlDB stream&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- and declare the full schema&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_08&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1_GEO&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2_BU&lt;/span&gt;  &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K3_ID&lt;/span&gt;  &lt;span style=&#34;color: #0086B3&#34;&gt;INT&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;   &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;   &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_TOPIC&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_08&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FORMAT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;JSON&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;----------------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Stream&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;created&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;----------------&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- Verify the schema looks correct&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DESCRIBE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_08&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Name&lt;/span&gt;                 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_08&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Field&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;---------------------------------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1_GEO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2_BU&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K3_ID&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;INTEGER&lt;/span&gt;          &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;---------------------------------&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- Verify the data is read correctly&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.offset.reset&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;earliest&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Successfully&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;changed&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;property&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.offset.reset&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;earliest&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;earliest&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_08&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EMIT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CHANGES&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-------+------+------+-----+-----+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1_GEO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2_BU&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K3_ID&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-------+------+------+-----+-----+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EMEA&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;XYZ&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BAR&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EMEA&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;XYZ&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ZXC&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ASD&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;APAC&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FGH&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;9&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;QQQ&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WWW&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Limit&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Reached&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Query&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;terminated&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we write the existing data, and all new messages that arrive, to a new topic and specify an appropriate serialization format. Avro, Protobuf, and JSON Schema are all good choices here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.offset.reset&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;earliest&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Successfully&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;changed&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;property&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.offset.reset&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;earliest&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;earliest&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_08_CONVERTED&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FORMAT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;PROTOBUF&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_08&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------------------------------------------------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Created&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ID&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CSAS_FOO_08_CONVERTED_19&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------------------------------------------------&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DESCRIBE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_08_CONVERTED&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Name&lt;/span&gt;                 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_08_CONVERTED&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Field&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;---------------------------------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1_GEO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2_BU&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K3_ID&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;INTEGER&lt;/span&gt;          &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;---------------------------------&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;For&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;runtime&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;statistics&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;details&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DESCRIBE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EXTENDED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Stream&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Table&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PRINT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_08_CONVERTED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BEGINNING&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PROTOBUF&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;HOPPING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TUMBLING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PROTOBUF&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_STRING&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;030&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1_GEO&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;EMEA&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2_BU&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;XYZ&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K3_ID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;BAR&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;071&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1_GEO&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;EMEA&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2_BU&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;XYZ&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K3_ID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;ZXC&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;ASD&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2021&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;110&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1_GEO&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;APAC&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2_BU&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FGH&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K3_ID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;QQQ&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;WWW&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;printing&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ceased&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Now&lt;/em&gt; we can push this data to the database. Note the &lt;code&gt;value.converter&lt;/code&gt; and &lt;code&gt;key.converter&lt;/code&gt; are not set for Protobuf:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_08_4&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                              &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_08_CONVERTED&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.protobuf.ProtobufConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter.schema.registry.url&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.protobuf.ProtobufConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schema.registry.url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode&amp;#39;&lt;/span&gt;                             &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;record_key&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.fields&amp;#39;&lt;/span&gt;                           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;insert.mode&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;delete.enabled&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This work, and we have data in Postgres matching the schema and primary key as we wanted:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_08_CONVERTED&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
          &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Table&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;public.FOO_08_CONVERTED&amp;#34;&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Column&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Collation&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Nullable&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Default&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;--------+---------+-----------+----------+---------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;text&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;          &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;text&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;          &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1_GEO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;text&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2_BU&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;text&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K3_ID&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;integer&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Indexes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_08_CONVERTED_pkey&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;btree&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K1_GEO&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K2_BU&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;K3_ID&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_08_CONVERTED&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1_GEO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2_BU&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K3_ID&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------+------+--------+-------+-------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BAR&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EMEA&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;XYZ&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ZXC&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ASD&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EMEA&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;XYZ&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;QQQ&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WWW&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;APAC&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FGH&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #009999&#34;&gt;9&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If we insert new data and an update for an existing key into the &lt;strong&gt;original&lt;/strong&gt; topic (JSON):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Key/value are separated by the + character&lt;/span&gt;
docker &lt;span style=&#34;color: #0086B3&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-i&lt;/span&gt; kafkacat kafkacat &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; broker:29092 &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; FOO_08 &lt;span style=&#34;color: #000080&#34;&gt;-K&lt;/span&gt;+ &lt;span style=&#34;color: #000080&#34;&gt;-P&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;
{&amp;#34;K1_GEO&amp;#34;:&amp;#34;EMEA&amp;#34;,&amp;#34;K2_BU&amp;#34;:&amp;#34;XYZ&amp;#34;,&amp;#34;K3_ID&amp;#34;:10}+{&amp;#34;COL3&amp;#34;:&amp;#34;FOO&amp;#34;,&amp;#34;COL4&amp;#34;:&amp;#34;BAR&amp;#34;}
{&amp;#34;K1_GEO&amp;#34;:&amp;#34;EMEA&amp;#34;,&amp;#34;K2_BU&amp;#34;:&amp;#34;XYZ&amp;#34;,&amp;#34;K3_ID&amp;#34;:2}+{&amp;#34;COL3&amp;#34;:&amp;#34;THIS&amp;#34;,&amp;#34;COL4&amp;#34;:&amp;#34;CHANGED&amp;#34;}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;this flows through automagically to the database:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_08_CONVERTED&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1_GEO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2_BU&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K3_ID&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------+---------+--------+-------+-------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BAR&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EMEA&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;XYZ&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;QQQ&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WWW&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;APAC&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FGH&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #009999&#34;&gt;9&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BAR&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EMEA&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;XYZ&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;    &lt;span style=&#34;color: #009999&#34;&gt;10&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;THIS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CHANGED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EMEA&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;XYZ&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_footnote_changing_the_table_name&#34;&gt;Footnote: changing the table name&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can use Single Message Transform to change the target object in the database to which the data is written. By default it takes the name of the source topic.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using the &lt;a href=&#34;https://rmoff.net/2020/12/11/twelve-days-of-smt-day-4-regexrouter/&#34;&gt;RegExRouter&lt;/a&gt; we can change &lt;code&gt;FOO_08_CONVERTED&lt;/code&gt; to &lt;code&gt;FOO_08&lt;/code&gt; thus:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_FOO_08_5&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt;                        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.jdbc.JdbcSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;jdbc:postgresql://postgres:5432/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.user&amp;#39;&lt;/span&gt;                        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.password&amp;#39;&lt;/span&gt;                    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;                                 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;FOO_08_CONVERTED&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter&amp;#39;&lt;/span&gt;                          &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.protobuf.ProtobufConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;key.converter.schema.registry.url&amp;#39;&lt;/span&gt;      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter&amp;#39;&lt;/span&gt;                        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.protobuf.ProtobufConverter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;value.converter.schema.registry.url&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://schema-registry:8081&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;auto.create&amp;#39;&lt;/span&gt;                            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.mode&amp;#39;&lt;/span&gt;                                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;record_key&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;pk.fields&amp;#39;&lt;/span&gt;                              &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;insert.mode&amp;#39;&lt;/span&gt;                            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;delete.enabled&amp;#39;&lt;/span&gt;                         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;transforms&amp;#39;&lt;/span&gt;                             &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;changeTopicName&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;transforms.changeTopicName.type&amp;#39;&lt;/span&gt;        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;org.apache.kafka.connect.transforms.RegexRouter&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;transforms.changeTopicName.regex&amp;#39;&lt;/span&gt;       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;(.*)_CONVERTED$&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;transforms.changeTopicName.replacement&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;$1&amp;#39;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now there are two tables in the target database - the original one, and the new one minus the &lt;code&gt;_CONVERTED&lt;/code&gt; suffix:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;d&lt;/span&gt;
              &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;List&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;relations&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Schema&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;       &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Name&lt;/span&gt;       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Owner&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;--------+------------------+-------+----------&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_08&lt;/span&gt;           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO_08_CONVERTED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;FOO_08&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL3&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COL4&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K1_GEO&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K2_BU&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;K3_ID&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------+---------+--------+-------+-------&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BAR&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EMEA&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;XYZ&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;QQQ&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WWW&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;APAC&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FGH&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #009999&#34;&gt;9&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FOO&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BAR&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EMEA&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;XYZ&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;    &lt;span style=&#34;color: #009999&#34;&gt;10&lt;/span&gt;
 &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;THIS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CHANGED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EMEA&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;XYZ&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_using_a_kafka_message_key_in_which_the_schema_key_has_default_null_values&#34;&gt;Using a Kafka message key in which the schema key has default null values&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This key schema causes problems because of &lt;code&gt;&amp;#34;default&amp;#34;: null&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;record&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;FOO05key&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;K1&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;
    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;K2&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;
    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The error you’ll get from the sink connector is this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;Caused by: org.apache.kafka.connect.errors.SchemaBuilderException: Invalid default value
        at org.apache.kafka.connect.data.SchemaBuilder.defaultValue&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;SchemaBuilder.java:131&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at io.confluent.connect.avro.AvroData.toConnectSchema&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;AvroData.java:1817&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at io.confluent.connect.avro.AvroData.toConnectSchema&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;AvroData.java:1562&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at io.confluent.connect.avro.AvroData.toConnectSchema&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;AvroData.java:1687&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at io.confluent.connect.avro.AvroData.toConnectSchema&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;AvroData.java:1538&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at io.confluent.connect.avro.AvroData.toConnectData&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;AvroData.java:1221&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at io.confluent.connect.avro.AvroConverter.toConnectData&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;AvroConverter.java:115&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.storage.Converter.toConnectData&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;Converter.java:87&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerSinkTask.convertKey&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:535&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerSinkTask.lambda&lt;span style=&#34;color: #008080&#34;&gt;$convertAndTransformRecord$0&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:498&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.execAndRetry&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;RetryWithToleranceOperator.java:156&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.execAndHandleError&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;RetryWithToleranceOperator.java:190&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        ... 13 more
Caused by: org.apache.kafka.connect.errors.DataException: Invalid value: null used &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for &lt;/span&gt;required field: &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;null&amp;#34;&lt;/span&gt;, schema &lt;span style=&#34;color: #0086B3&#34;&gt;type&lt;/span&gt;: STRING
        at org.apache.kafka.connect.data.ConnectSchema.validateValue&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;ConnectSchema.java:220&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.data.ConnectSchema.validateValue&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;ConnectSchema.java:213&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.data.SchemaBuilder.defaultValue&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;SchemaBuilder.java:129&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        ... 24 more&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The fix is to remove the instances of &lt;code&gt;&amp;#34;default&amp;#34;: null&lt;/code&gt; from the schema.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;👾 &lt;a href=&#34;https://github.com/confluentinc/demo-scene/blob/master/kafka-to-database/&#34;&gt;Try it yourself&lt;/a&gt; (Docker Compose to spin up the environment used in this article)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.dev/zero-to-hero&#34;&gt;From Zero to Hero with Kafka Connect&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.confluent.io/current/connect/kafka-connect-jdbc/sink-connector/index.html?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_jdbc-sink-primary-keys&amp;amp;utm_term=rmoff-devx&#34;&gt;JDBC Sink connector docs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://hub.confluent.io?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_jdbc-sink-primary-keys&amp;amp;utm_term=rmoff-devx&#34;&gt;Confluent Hub&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/categories/twelvedaysofsmt/&#34;&gt;Single Message Transforms deep-dive&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Kafka Connect - SQLSyntaxErrorException: BLOB/TEXT column … used in key specification without a key length</title>
      <link>https://rmoff.net/2021/03/11/kafka-connect-sqlsyntaxerrorexception-blob/text-column-used-in-key-specification-without-a-key-length/</link>
      <pubDate>2021-03-11</pubDate>
      
      <guid>https://rmoff.net/2021/03/11/kafka-connect-sqlsyntaxerrorexception-blob/text-column-used-in-key-specification-without-a-key-length/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2021/03/IMG_9246.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I got the error &lt;code&gt;SQLSyntaxErrorException: BLOB/TEXT column &amp;#39;MESSAGE_KEY&amp;#39; used in key specification without a key length&lt;/code&gt; with &lt;a href=&#34;https://docs.confluent.io/current/connect/kafka-connect-jdbc/sink-connector/index.html&#34;&gt;Kafka Connect JDBC Sink connector&lt;/a&gt; (v10.0.2) and MySQL (8.0.23)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[&lt;/span&gt;2021-03-11 11:07:32,627] ERROR WorkerSinkTask&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;sink-jdbc-mysql-02-0&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt; Task threw an uncaught and unrecoverable exception. Task is being killed and will not recover &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;until &lt;/span&gt;manually restarted &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;org.apache.kafka.connect.runtime.WorkerTask&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
org.apache.kafka.connect.errors.ConnectException: Exiting WorkerSinkTask due to unrecoverable exception.
        at org.apache.kafka.connect.runtime.WorkerSinkTask.deliverMessages&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:614&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerSinkTask.poll&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:329&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerSinkTask.iteration&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:232&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerSinkTask.execute&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:201&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerTask.doRun&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerTask.java:185&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerTask.run&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerTask.java:234&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at java.base/java.util.concurrent.Executors&lt;span style=&#34;color: #008080&#34;&gt;$RunnableAdapter&lt;/span&gt;.call&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;Executors.java:515&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at java.base/java.util.concurrent.FutureTask.run&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;FutureTask.java:264&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;ThreadPoolExecutor.java:1128&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at java.base/java.util.concurrent.ThreadPoolExecutor&lt;span style=&#34;color: #008080&#34;&gt;$Worker&lt;/span&gt;.run&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;ThreadPoolExecutor.java:628&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at java.base/java.lang.Thread.run&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;Thread.java:834&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
Caused by: org.apache.kafka.connect.errors.ConnectException: java.sql.SQLException: Exception chain:
java.sql.SQLSyntaxErrorException: BLOB/TEXT column &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;MESSAGE_KEY&amp;#39;&lt;/span&gt; used &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;in &lt;/span&gt;key specification without a key length
        at io.confluent.connect.jdbc.sink.JdbcSinkTask.put&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;JdbcSinkTask.java:101&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerSinkTask.deliverMessages&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:586&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
        ... 10 more&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Looking further up the log I could see this exception came from this unfortunate series of events:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;INFO JdbcDbWriter Connected &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;io.confluent.connect.jdbc.sink.JdbcDbWriter&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
INFO Checking MySql dialect &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for &lt;/span&gt;existence of TABLE &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;test_rmoff2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;io.confluent.connect.jdbc.dialect.GenericDatabaseDialect&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
INFO Using MySql dialect TABLE &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;test_rmoff2&amp;#34;&lt;/span&gt; absent &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;io.confluent.connect.jdbc.dialect.GenericDatabaseDialect&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
INFO Creating table with sql: CREATE TABLE &lt;span style=&#34;color: #d14&#34;&gt;`&lt;/span&gt;test_rmoff2&lt;span style=&#34;color: #d14&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;
&lt;span style=&#34;color: #d14&#34;&gt;`&lt;/span&gt;ID&lt;span style=&#34;color: #d14&#34;&gt;`&lt;/span&gt; TEXT NULL,
&lt;span style=&#34;color: #d14&#34;&gt;`&lt;/span&gt;Artist&lt;span style=&#34;color: #d14&#34;&gt;`&lt;/span&gt; TEXT NULL,
&lt;span style=&#34;color: #d14&#34;&gt;`&lt;/span&gt;Song&lt;span style=&#34;color: #d14&#34;&gt;`&lt;/span&gt; TEXT NULL,
&lt;span style=&#34;color: #d14&#34;&gt;`&lt;/span&gt;MESSAGE_KEY&lt;span style=&#34;color: #d14&#34;&gt;`&lt;/span&gt; TEXT NOT NULL,
PRIMARY KEY&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;`&lt;/span&gt;MESSAGE_KEY&lt;span style=&#34;color: #d14&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;io.confluent.connect.jdbc.sink.DbStructure&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This comes about because my JDBC Sink connector was set to &lt;code&gt;auto.create=true&lt;/code&gt; with &lt;code&gt;pk.mode=record_key&lt;/code&gt; and &lt;code&gt;pk.fields=MESSAGE_KEY&lt;/code&gt;. This meant that the primary key for the table was coming from the key of the Kafka message and being stored in a field called &lt;code&gt;MESSAGE_KEY&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The key for the Kafka message was just a string (a primitive). You can see from the &lt;a href=&#34;https://github.com/confluentinc/kafka-connect-jdbc/blob/10.0.x/src/main/java/io/confluent/connect/jdbc/dialect/MySqlDatabaseDialect.java#L123-L124&#34;&gt;source code&lt;/a&gt; of the connector that it maps &lt;code&gt;STRING&lt;/code&gt; type from Kafka Connect to &lt;code&gt;TEXT&lt;/code&gt; in MySQL (&lt;a href=&#34;https://github.com/confluentinc/kafka-connect-jdbc/commit/42b74cb8aa89b18acdcbe559fecedc89f7ffb009&#34;&gt;previously&lt;/a&gt; it was &lt;code&gt;VARCHAR(256)&lt;/code&gt;). To define the field as a primary key in MySQL requires it to have a fixed length, not just &lt;code&gt;TEXT&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Workarounds:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use version 5.5.3 of the connector in which &lt;code&gt;STRING&lt;/code&gt; is still mapped to &lt;code&gt;VARCHAR(256)&lt;/code&gt; (from &lt;a href=&#34;https://www.confluent.io/hub/confluentinc/kafka-connect-jdbc&#34;&gt;the download page&lt;/a&gt; click on &lt;code&gt;Download previous versions&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create the table in MySQL ahead of populating it with the JDBC sink connector and the field’s data type appropriately (e.g. &lt;code&gt;VARCHAR(255)&lt;/code&gt; if that’s long enough for the data)&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`test_rmoff2`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
&lt;span style=&#34;color: #008080&#34;&gt;`ID`&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;TEXT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #008080&#34;&gt;`Artist`&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;TEXT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #008080&#34;&gt;`Song`&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;TEXT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #008080&#34;&gt;`MESSAGE_KEY`&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;255&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`MESSAGE_KEY`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Quick profiling of data in Apache Kafka using kafkacat and visidata</title>
      <link>https://rmoff.net/2021/03/04/quick-profiling-of-data-in-apache-kafka-using-kafkacat-and-visidata/</link>
      <pubDate>2021-03-04</pubDate>
      
      <guid>https://rmoff.net/2021/03/04/quick-profiling-of-data-in-apache-kafka-using-kafkacat-and-visidata/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2021/03/kafka-visidata.gif" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ksqlDB is a fantastically powerful tool for processing and analysing streams of data in Apache Kafka. But sometimes, you just want a quick way to profile the data in a topic in Kafka. I &lt;a href=&#34;https://rmoff.net/2021/02/02/performing-a-group-by-on-data-in-bash/&#34;&gt;wrote about this previously&lt;/a&gt; with a convoluted (but effective) set of bash commands pipelined together to perform a &lt;code&gt;GROUP BY&lt;/code&gt; on data. Then someone introduced me to &lt;code&gt;visidata&lt;/code&gt;, which makes it all a lot quicker!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s imagine we have data in Kafka, and we’re going to go and build some cool stuff with it. We’re going to process it and build a pipeline, and we need to know something about the data we’re working with. &lt;a href=&#34;https://www.visidata.org/&#34;&gt;Visidata&lt;/a&gt; is a commandline tool to work with data in all sorts of formats, including from &lt;code&gt;stdin&lt;/code&gt;. Coupled with &lt;code&gt;kafkacat&lt;/code&gt; for consuming data from a topic to &lt;code&gt;stdout&lt;/code&gt; they make a perfect pairing:&lt;/p&gt;
&lt;/div&gt;
&lt;script id=&#34;asciicast-C4YuszVGg0slOtwA8lYearYPN&#34; src=&#34;https://asciinema.org/a/C4YuszVGg0slOtwA8lYearYPN.js&#34; async=&#34;&#34;&gt;&lt;/script&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This samples 100000 JSON records from a topic and pipes it into visidata:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once visidata is open, press Shift-F to create histogram&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;kafkacat &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; localhost:9092 &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; my_topic &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-e&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-o-100000&lt;/span&gt; | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  vd &lt;span style=&#34;color: #000080&#34;&gt;--filetype&lt;/span&gt; jsonl&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once visidata is open, use the arrow keys to move to the column on which you want to build a histogram and press Shift-F. Since it works with pipes if you leave the &lt;code&gt;-e&lt;/code&gt; off the &lt;code&gt;kafkacat&lt;/code&gt; argument you get a live stream of messages from the Kafka topic and the visidata will continue to update as messages arrive (although I think you need to replot the histogram if you want it to refresh).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If your data is in Avro instead you can use kafkacat’s support for Avro conversion (&lt;code&gt;-s avro&lt;/code&gt;) and JSON output (&lt;code&gt;-J&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;kafkacat &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; localhost:9092 &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; my_topic &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-e&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-o-100000&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; http://schema-registry:8081 &lt;span style=&#34;color: #000080&#34;&gt;-s&lt;/span&gt; avro &lt;span style=&#34;color: #000080&#34;&gt;-J&lt;/span&gt; | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  jq &lt;span style=&#34;color: #000080&#34;&gt;-c&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.payload&amp;#39;&lt;/span&gt;| &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  vd &lt;span style=&#34;color: #000080&#34;&gt;--filetype&lt;/span&gt; jsonl&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The fields may well be nested - use &lt;code&gt;g(&lt;/code&gt; in visidata to expand them.&lt;/p&gt;
&lt;/div&gt;
&lt;script id=&#34;asciicast-iasJQk2eVAbUV9qElYCtip6nh&#34; src=&#34;https://asciinema.org/a/iasJQk2eVAbUV9qElYCtip6nh.js&#34; async=&#34;&#34;&gt;&lt;/script&gt;
&lt;hr/&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_using_it_with_confluent_cloud&#34;&gt;Using it with Confluent Cloud&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Thank you! Maybe you could also write an article on how to use tools with Confluent Cloud? Everything is simple on localhost, but if you add Broker- and AVRO SchemaRegistry authentication the list of command line arguments explodes. Would like to learn how to use it efficiently.&lt;/p&gt;&amp;mdash; Victor Cazacov (@vcazacov) &lt;a href=&#34;https://twitter.com/vcazacov/status/1367510560011669509?ref_src=twsrc%5Etfw&#34;&gt;March 4, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here you go:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Raw JSON messages:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;kafkacat &lt;span style=&#34;color: #000080&#34;&gt;-X&lt;/span&gt; security.protocol&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;SASL_SSL &lt;span style=&#34;color: #000080&#34;&gt;-X&lt;/span&gt; sasl.mechanisms&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;PLAIN &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
         &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; BROKER.gcp.confluent.cloud:9092 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
         &lt;span style=&#34;color: #000080&#34;&gt;-X&lt;/span&gt; sasl.username&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;CCLOUD_API_KEY&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
         &lt;span style=&#34;color: #000080&#34;&gt;-X&lt;/span&gt; sasl.password&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;CCLOUD_API_PASSWORD&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
         &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; my_topic &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-e&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-o-10000&lt;/span&gt; | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
         vd &lt;span style=&#34;color: #000080&#34;&gt;--filetype&lt;/span&gt; jsonl&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avro data (Schema Registry on Confluent Cloud):&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;kafkacat &lt;span style=&#34;color: #000080&#34;&gt;-X&lt;/span&gt; security.protocol&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;SASL_SSL &lt;span style=&#34;color: #000080&#34;&gt;-X&lt;/span&gt; sasl.mechanisms&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;PLAIN &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
         &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; BROKER.gcp.confluent.cloud:9092 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
         &lt;span style=&#34;color: #000080&#34;&gt;-X&lt;/span&gt; sasl.username&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;CCLOUD_API_KEY&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
         &lt;span style=&#34;color: #000080&#34;&gt;-X&lt;/span&gt; sasl.password&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;CCLOUD_API_PASSWORD&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
         &lt;span style=&#34;color: #000080&#34;&gt;-s&lt;/span&gt; avro &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
         &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; https://SR_API_KEY:SR_API_SECRET@SR_ENDPOINT.gcp.confluent.cloud &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
         &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; my_avro_topic &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-e&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-o-10000&lt;/span&gt; | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
         vd &lt;span style=&#34;color: #000080&#34;&gt;--filetype&lt;/span&gt; jsonl&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note: You need to URL encode your credentials when supplying them in the Schema Registry URL (thanks to &lt;a href=&#34;https://github.com/edenhill/kafkacat/issues/119#issuecomment-616086124&#34;&gt;a6kme for this tip&lt;/a&gt;!). If you don’t you may well get the error &lt;code&gt;Avro/Schema-registry message deserialization: REST request failed (code -1): HTTP request failed: URL using bad/illegal format or missing URL : terminating&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So if your Schema Registry API key and Secret were &lt;code&gt;key123!&lt;/code&gt; and &lt;code&gt;S3cr3t/kjna%$!%dsf£&lt;/code&gt; you’d &lt;a href=&#34;https://www.url-encode-decode.com/&#34;&gt;URL encode it&lt;/a&gt; and use &lt;code&gt;&lt;a href=&#34;https://key123%21:S3cr3t%2Fkjna%25%24%21%25dsf%C2%A3@SR_ENDPOINT.gcp.confluent.cloud&#34; class=&#34;bare&#34;&gt;https://key123%21:S3cr3t%2Fkjna%25%24%21%25dsf%C2%A3@SR_ENDPOINT.gcp.confluent.cloud&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Using Open Sea Map data in Kibana maps</title>
      <link>https://rmoff.net/2021/03/04/using-open-sea-map-data-in-kibana-maps/</link>
      <pubDate>2021-03-04</pubDate>
      
      <guid>https://rmoff.net/2021/03/04/using-open-sea-map-data-in-kibana-maps/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2021/03/4C94AF4F-A35E-4D13-BA1D-96B44E176C55.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Kibana’s map functionality is a powerful way to visualise data that has a location element in it. I was recently working with data about ships at sea, and whilst the built in &lt;code&gt;Road map&lt;/code&gt; is very good it doesn’t show much maritime detail.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/03/maps01.png&#34; alt=&#34;maps01&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Kibana’s map visualisation has the option to pull in additional visual information from other places (known as tile servers). I found &lt;a href=&#34;https://wiki.openstreetmap.org/wiki/Tile_servers&#34;&gt;a list of Tile servers&lt;/a&gt;, which had details of &lt;a href=&#34;https://wiki.openstreetmap.org/wiki/OpenSeaMap&#34;&gt;OpenSeaMap&lt;/a&gt; which includes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;beacons, buoys and other seamarks, port information, repair shops, ship supplies and much more, but also shops, restaurants and places of interest&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/03/maps05.png&#34; alt=&#34;maps05&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Adding the tile server details is relatively easy - the trick is getting the incantation of the URL exactly right (which is why I’m even writing this up in the first place, because it took me a bit of fiddling).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;code&gt;Add layer&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/03/maps02.png&#34; alt=&#34;maps02&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;code&gt;Tile Map Service&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/03/maps03.png&#34; alt=&#34;maps03&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enter the details&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Url: &lt;code&gt;&lt;a href=&#34;https://tiles.openseamap.org/seamark/{z}/{x}/{y}.png&#34; class=&#34;bare&#34;&gt;https://tiles.openseamap.org/seamark/{z}/{x}/{y}.png&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attribution text: &lt;code&gt;OpenSeaMap&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Attrinbution link: &lt;code&gt;&lt;a href=&#34;http://openseamap.org/&#34; class=&#34;bare&#34;&gt;http://openseamap.org/&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/03/maps04.png&#34; alt=&#34;maps04&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click the &lt;code&gt;Add layer&lt;/code&gt; button at the bottom, and optionally give the layer a name on the next screen, and click &lt;code&gt;Save &amp;amp; close&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You now get visuals from OpenSeaMap overlaid, showing things like shipping lanes at a high level…&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/03/maps07.png&#34; alt=&#34;maps07&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;…down to much more detailed attributes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/03/maps06.png&#34; alt=&#34;maps06&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Of course, Kibana is not just a map viewer - it’s a data visualisation tool in which maps provide the canvas on which to illustrate the data, like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/03/maps08.png&#34; alt=&#34;maps08&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    <item>
      <title>Loading delimited data into Kafka - quick &amp; dirty (but effective)</title>
      <link>https://rmoff.net/2021/02/26/loading-delimited-data-into-kafka-quick-dirty-but-effective/</link>
      <pubDate>2021-02-26</pubDate>
      
      <guid>https://rmoff.net/2021/02/26/loading-delimited-data-into-kafka-quick-dirty-but-effective/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2021/02/IMG_9122.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Whilst Apache Kafka is an event streaming platform designed for, well, &lt;em&gt;streams&lt;/em&gt; of events, it’s perfectly valid to use it as a store of data which perhaps changes only occasionally (or even never). I’m thinking here of reference data (lookup data) that’s used to enrich regular streams of events.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You might well get your reference data from a database where it resides and do so effectively &lt;a href=&#34;https://rmoff.dev/no-more-silos&#34;&gt;using CDC&lt;/a&gt; - but sometimes it comes down to those pesky CSV files that we all know and love/hate. Simple, awful, but effective. I wrote previously about &lt;a href=&#34;https://rmoff.net/2020/06/17/loading-csv-data-into-kafka/&#34;&gt;loading CSV data into Kafka from files that are updated frequently&lt;/a&gt;, but here I want to look at CSV files that are not changing. Kafka Connect simplifies getting data in to (and out of) Kafka but even Kafka Connect becomes a bit of an overhead when you just have a single file that you want to load into a topic and then never deal with again. I spent this afternoon wrangling with a couple of CSV-ish files, and building on my previous article about &lt;a href=&#34;https://rmoff.net/2021/02/02/performing-a-group-by-on-data-in-bash/&#34;&gt;neat tricks you can do in bash with data&lt;/a&gt;, I have some more to share with you here :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_data&#34;&gt;The data&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first file has two fields and is semi-colon delimited:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;cat &lt;/span&gt;data01.csv
shipname&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;mmsi
FRIO FORWIN&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;210631000
AQUAMARINE&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;214182223
OCEAN STAR 98&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;214182700
MINIK ARCTICA&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;219663000
IVALO ARCTICA&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;219667000
IZAR ARGIA&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;224434000
V CENTENARIO&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;224739000
MARINERO2&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;238187240
SANTINA&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;256384000&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The second has more fields, and is comma-separated. There is a common field in both files (&lt;code&gt;mmsi&lt;/code&gt;) and this will be important later.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;cat &lt;/span&gt;data02.csv
mmsi,shipname,callsign,flag,imo,first_timestamp,last_timestamp
306117000,SIERRALAUREL,PJBQ,ANT,9163403,2018-03-29T08:34:21Z,2018-06-30T17:08:41Z
306873000,SIERRALEYRE,PJJZ,ANT,9135822,2012-01-01T01:06:00Z,2012-06-26T08:58:28Z
309681,GREENBRAZIL,C6WH6,BHS,9045792,2018-06-29T10:34:00Z,2018-06-30T23:47:40Z
308735000,NOVA BRETAGNE,C6JI7,BHS,9000364,2012-01-01T00:39:08Z,2013-09-12T10:03:48Z
311000682,SIERRA LARA,C6DI3,BHS,9120205,2017-07-03T10:28:05Z,2018-06-30T23:35:36Z
311000433,SILVER PEARL,C6CC5,BHS,8400050,2015-08-19T10:00:02Z,2018-06-30T23:57:13Z
311000709,SIERRA LEYRE,C6DL3,BHS,9135822,2017-10-12T08:51:41Z,2018-06-30T06:08:40Z
311043900,GREENCONCORDIA,C6YS7,BHS,9011038,2012-01-03T22:17:16Z,2013-09-09T11:44:22Z
308572000,RUNAWAY BAY,C6PX2,BHS,9019640,2012-01-01T00:28:40Z,2017-02-08T06:13:05Z&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_requirement&#34;&gt;The requirement&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’m using the data from both these files to enrich a stream of data about the movement of ships, based on the &lt;code&gt;mmsi&lt;/code&gt; field as a key. I want to load both datasets into separate topics, with the &lt;code&gt;mmsi&lt;/code&gt; field set as the key in both.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_solution_tldr&#34;&gt;The solution - tl;dr&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Whilst I could use Kafka Connect connectors for ingesting flat files into Kafka such as &lt;code&gt;kafka-connect-spooldir&lt;/code&gt; and &lt;code&gt;kafka-connect-filepulse&lt;/code&gt;, I wanted something dead simple. Since the data wasn’t changing I didn’t want to get into setting up connectors, and quick &amp;amp; dirty would be just fine.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The short answer here is &lt;code&gt;kafkacat&lt;/code&gt;, which takes &lt;code&gt;stdin&lt;/code&gt; as a source of messages for writing to Kafka. It can be given a delimiter to split the input into key and value for writing to Kafka.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The slightly longer answer is a few other bash tools for manipulating the data into an appropriate state for &lt;code&gt;kafkacat&lt;/code&gt; to receive.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_solution_in_detail&#34;&gt;The solution - in detail&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_switching_fields_around_in_bash&#34;&gt;Switching fields around in bash&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first file, &lt;code&gt;data01.csv&lt;/code&gt;, has the &lt;code&gt;mmsi&lt;/code&gt; field second, and I want the first so that I can use it as the key when it gets to kafkacat. For that we can use &lt;code&gt;awk&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-F&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;{ print $2 &amp;#34;,&amp;#34; $1 }&amp;#39;&lt;/span&gt; data01.csv&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Or…we &lt;em&gt;think&lt;/em&gt; we can. Because this was where the fun started. Check this out. What should happen is that with the field separator set to &lt;code&gt;;&lt;/code&gt; awk will store the first field in &lt;code&gt;$1&lt;/code&gt; and second in &lt;code&gt;$2&lt;/code&gt;, which I can then just reverse in the &lt;code&gt;print&lt;/code&gt; output. But what happens is this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-F&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;{ print $2 &amp;#34;,&amp;#34; $1 }&amp;#39;&lt;/span&gt; data01.csv
,shipname
,FRIO FORWIN
,AQUAMARINE
,OCEAN STAR 98&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Huh? I get the new field separator (a comma), and the the first field (&lt;code&gt;$1&lt;/code&gt;) — but not the second. Weird. Let’s see if &lt;code&gt;$2&lt;/code&gt; is working:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-F&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;{ print $2 }&amp;#39;&lt;/span&gt; data01.csv
mmsi
210631000
214182223
214182700&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Yup, that field is working too - so why aren’t they working together?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_when_is_a_line_break_different_from_a_line_break&#34;&gt;When is a line break different from a line break?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After a lot of headscratching, and a &lt;em&gt;lot&lt;/em&gt; of Google and StackOverflow, I hit on the problem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/02/lineendings.png&#34; alt=&#34;lineendings&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The file was written with &lt;code&gt;/x0d /x0a&lt;/code&gt; (CRLF) line endings, which was screwing things up. I don’t actually know why (&lt;a href=&#34;https://twitter.com/rmoff/&#34;&gt;drop me a line if you do!&lt;/a&gt;) but once I stripped the &lt;code&gt;CR&lt;/code&gt; (&lt;code&gt;\r&lt;/code&gt;) them out with &lt;code&gt;tr&lt;/code&gt; things started to look better:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;tr&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-d&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt; &amp;lt; data01.csv |awk &lt;span style=&#34;color: #000080&#34;&gt;-F&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39; { print $2 &amp;#34;,&amp;#34; $1 }&amp;#39;&lt;/span&gt;
mmsi,shipname
210631000,FRIO FORWIN
214182223,AQUAMARINE
214182700,OCEAN STAR 98&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_setting_a_key_separator_inserting_hex_values_with_awk&#34;&gt;Setting a key separator / Inserting hex values with awk&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ve &lt;a href=&#34;2020/09/30/setting-key-value-when-piping-from-jq-to-kafkacat/&#34;&gt;written before&lt;/a&gt; about a little trick for manipulating data from &lt;code&gt;jq&lt;/code&gt; piped to &lt;code&gt;kafkacat&lt;/code&gt; such that a key is set in the resulting Kafka message. I wanted to use the same approach here. It relies on putting a character between the key and value part of the data, and picking a character that isn’t going to appear elsewhere in the payload. I used &lt;a href=&#34;https://www.fileformat.info/info/unicode/char/001c/index.htm&#34;&gt;&lt;code&gt;\x1c&lt;/code&gt;&lt;/a&gt; here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To use it as the separator between the two fields in awk looks like this - I’m piping it to &lt;code&gt;hexdump&lt;/code&gt; so that you can see its effect:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;tr&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-d&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt; &amp;lt; data01.csv | &lt;span style=&#34;color: #0086B3&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-F&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39; { print $2 &amp;#34;\x1c&amp;#34; $1 } &amp;#39;&lt;/span&gt;| hexdump &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt;
00000000  6d 6d 73 69 1c 73 68 69  70 6e 61 6d 65 0a 32 31  |mmsi.shipname.21|
00000010  30 36 33 31 30 30 30 1c  46 52 49 4f 20 46 4f 52  |0631000.FRIO FOR|
00000020  57 49 4e 0a 32 31 34 31  38 32 32 32 33 1c 41 51  |WIN.214182223.AQ|
00000030  55 41 4d 41 52 49 4e 45  0a 32 31 34 31 38 32 37  |UAMARINE.2141827|
00000040  30 30 1c 4f 43 45 41 4e  20 53 54 41 52 20 39 38  |00.OCEAN STAR 98|&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we’re ready to stream the data to Kafka, specifying this special character as the key separator to &lt;code&gt;kafkacat&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;tr&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-d&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt; &amp;lt; data01.csv | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  &lt;span style=&#34;color: #0086B3&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-F&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39; { print $2 &amp;#34;\x1c&amp;#34; $1 } &amp;#39;&lt;/span&gt;| &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  kafkacat &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; localhost:9092 &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; data01 &lt;span style=&#34;color: #000080&#34;&gt;-K&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\x&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;1c&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-P&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can consume the data from the Kafka topic with &lt;code&gt;kafkacat&lt;/code&gt; to check that it’s worked:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;kafkacat &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; localhost:9092 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-o&lt;/span&gt; beginning &lt;span style=&#34;color: #000080&#34;&gt;-u&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; data01 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-f&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;Topic+Partition+Offset: %t+%p+%o\tKey: %k\tValue: %s\n&amp;#39;&lt;/span&gt;
Topic+Partition+Offset: data01+0+0      Key: mmsi       Value: shipname
Topic+Partition+Offset: data01+0+1      Key: 210631000  Value: FRIO FORWIN
Topic+Partition+Offset: data01+0+2      Key: 214182223  Value: AQUAMARINE
Topic+Partition+Offset: data01+0+3      Key: 214182700  Value: OCEAN STAR 98&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;NOTE: The CSV header line has been ingested as a data row; if we were fussed we could filter it out prior to ingest with &lt;code&gt;head&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So: one file down, one to go. The second one is a bit more tricky because we’ve got more fields to deal with. I don’t really want to start writing &lt;code&gt;awk&lt;/code&gt; statements with a long list of field numbers and separators, so let’s see how we can do it a bit smarter.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_changing_the_first_comma_in_a_csv_file_in_bash&#34;&gt;Changing the first comma in a CSV file in bash&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Unlike the previous file, the key field (&lt;code&gt;mmsi&lt;/code&gt;) &lt;em&gt;is&lt;/em&gt; the first field in this file so we don’t need to reorder things.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;head &lt;/span&gt;data02.csv
mmsi,shipname,callsign,flag,imo,first_timestamp,last_timestamp
306117000,SIERRALAUREL,PJBQ,ANT,9163403,2018-03-29T08:34:21Z,2018-06-30T17:08:41Z
306873000,SIERRALEYRE,PJJZ,ANT,9135822,2012-01-01T01:06:00Z,2012-06-26T08:58:28Z
309681,GREENBRAZIL,C6WH6,BHS,9045792,2018-06-29T10:34:00Z,2018-06-30T23:47:40Z&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We do, however, want to change the comma into our bespoke key/value delimiter. This time I reached for &lt;code&gt;sed&lt;/code&gt; (although if there’s one thing I learnt from my afternoon of Googling is that &lt;code&gt;sed&lt;/code&gt; and &lt;code&gt;awk&lt;/code&gt; and always &lt;code&gt;perl&lt;/code&gt; usually can be twisted to perform the same function).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In &lt;code&gt;sed&lt;/code&gt; the very common usage is to change one thing for another—so much so that it’s become shorthand amongst nerds when reviewing documents to report a tyop (&lt;code&gt;s/tyop/typo&lt;/code&gt;) — see what I did there? ;-)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, with &lt;code&gt;sed&lt;/code&gt; if you specify a trailing &lt;code&gt;/g&lt;/code&gt; in the replacement expression then all matches are replaced:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;one_two_three&amp;#39;&lt;/span&gt; | &lt;span style=&#34;color: #0086B3&#34;&gt;sed&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;s/_/ FOO /g&amp;#39;&lt;/span&gt;
one FOO two FOO three&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Without the trailing &lt;code&gt;/g&lt;/code&gt; only the first match is replaced:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;one_two_three&amp;#39;&lt;/span&gt; | &lt;span style=&#34;color: #0086B3&#34;&gt;sed&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;s/_/ FOO /&amp;#39;&lt;/span&gt;
one FOO two_three&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So we can use this to replace the first comma (after our key field), whilst leaving the others alone. As before we needed to strip out the &lt;code&gt;CR&lt;/code&gt; characters in the line breaks with &lt;code&gt;tr&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;tr&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-d&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt; &amp;lt; data02.csv|sed &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;s/,/ FOO /&amp;#39;&lt;/span&gt;
mmsi FOO shipname,callsign,flag,imo,first_timestamp,last_timestamp
306117000 FOO SIERRALAUREL,PJBQ,ANT,9163403,2018-03-29T08:34:21Z,2018-06-30T17:08:41Z
306873000 FOO SIERRALEYRE,PJJZ,ANT,9135822,2012-01-01T01:06:00Z,2012-06-26T08:58:28Z
309681 FOO GREENBRAZIL,C6WH6,BHS,9045792,2018-06-29T10:34:00Z,2018-06-30T23:47:40Z&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now all we need to do is replace ` FOO ` with a single-character hex value that we can use for the key delimiter in &lt;code&gt;kafkacat&lt;/code&gt;. And this was where it got sticky.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_using_a_hex_value_in_the_replacement_argument_of_sed&#34;&gt;Using a hex value in the replacement argument of &lt;code&gt;sed&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I started off with the fairly obvious, which didn’t work - I just got a literal &lt;code&gt;x1c&lt;/code&gt; value:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;tr&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-d&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt; &amp;lt; data02.csv|sed &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;s/,/\x1c/&amp;#39;&lt;/span&gt;
mmsix1cshipname,callsign,flag,imo,first_timestamp,last_timestamp
306117000x1cSIERRALAUREL,PJBQ,ANT,9163403,2018-03-29T08:34:21Z,2018-06-30T17:08:41Z
306873000x1cSIERRALEYRE,PJJZ,ANT,9135822,2012-01-01T01:06:00Z,2012-06-26T08:58:28Z
309681x1cGREENBRAZIL,C6WH6,BHS,9045792,2018-06-29T10:34:00Z,2018-06-30T23:47:40Z&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;All that Google wanted to tell me was how to &lt;em&gt;replace&lt;/em&gt; a hex value with &lt;code&gt;sed&lt;/code&gt;, rather than use hex &lt;strong&gt;in the replacement&lt;/strong&gt;. Eventually I found &lt;a href=&#34;https://stackoverflow.com/a/28059344/350613&#34;&gt;this answer on StackOverflow&lt;/a&gt; which set me on the right lines - using &lt;code&gt;$(printf &amp;#39;\x1c&amp;#39;)&lt;/code&gt; (and because that uses single quotes, change the sed expression to be surrounded by double quotes)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;tr&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-d&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt; &amp;lt; data02.csv|sed &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;s/,/&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;\x1c&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;/&amp;#34;&lt;/span&gt;|hexdump &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt;
00000000  6d 6d 73 69 1c 73 68 69  70 6e 61 6d 65 2c 63 61  |mmsi.shipname,ca|
00000010  6c 6c 73 69 67 6e 2c 66  6c 61 67 2c 69 6d 6f 2c  |llsign,flag,imo,|
00000020  66 69 72 73 74 5f 74 69  6d 65 73 74 61 6d 70 2c  |first_timestamp,|
00000030  6c 61 73 74 5f 74 69 6d  65 73 74 61 6d 70 0a 33  |last_timestamp.3|
00000040  30 36 31 31 37 30 30 30  1c 53 49 45 52 52 41 4c  |06117000.SIERRAL|
00000050  41 55 52 45 4c 2c 50 4a  42 51 2c 41 4e 54 2c 39  |AUREL,PJBQ,ANT,9|
00000060  31 36 33 34 30 33 2c 32  30 31 38 2d 30 33 2d 32  |163403,2018-03-2|
00000070  39 54 30 38 3a 33 34 3a  32 31 5a 2c 32 30 31 38  |9T08:34:21Z,2018|
00000080  2d 30 36 2d 33 30 54 31  37 3a 30 38 3a 34 31 5a  |-06-30T17:08:41Z|&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So after this I ended up with&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;tr&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-d&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt; &amp;lt; data02.csv | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  &lt;span style=&#34;color: #0086B3&#34;&gt;sed&lt;/span&gt;  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;s/,/&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;\x1c&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;/&amp;#34;&lt;/span&gt; | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  kafkacat &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; localhost:9092 &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; data02 &lt;span style=&#34;color: #000080&#34;&gt;-K&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\x&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;1c&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-P&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Which worked a treat and loaded the data which looked like this once loaded:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;kafkacat &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; localhost:9092 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-o&lt;/span&gt; beginning &lt;span style=&#34;color: #000080&#34;&gt;-u&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; data02 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-f&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;Topic+Partition+Offset: %t+%p+%o\tKey: %k\tValue: %s\n&amp;#39;&lt;/span&gt;
Topic+Partition+Offset: data02+0+0      Key: mmsi       Value: shipname,callsign,flag,imo,first_timestamp,last_timestamp
Topic+Partition+Offset: data02+0+1      Key: 306117000  Value: SIERRALAUREL,PJBQ,ANT,9163403,2018-03-29T08:34:21Z,2018-06-30T17:08:41Z
Topic+Partition+Offset: data02+0+2      Key: 306873000  Value: SIERRALEYRE,PJJZ,ANT,9135822,2012-01-01T01:06:00Z,2012-06-26T08:58:28Z
Topic+Partition+Offset: data02+0+3      Key: 309681     Value: GREENBRAZIL,C6WH6,BHS,9045792,2018-06-29T10:34:00Z,2018-06-30T23:47:40Z&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_using_the_data&#34;&gt;Using the data&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, whilst my explanations may have been verbose, the actual result was relatively simple. With the data loaded into Kafka topics I could fire up ksqlDB (in which I was doing the stream processing) and define a table over each topic. The key (!!) thing with tables is that the Kafka message key must be the key declared in the table—which is why we did that extra work above at ingest time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;data01&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;mmsi&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;BIGINT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;shipname_raw&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;varchar&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_TOPIC&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;data01&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FORMAT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;DELIMITED&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;data02&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;mmsi&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;BIGINT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;shipname&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;callsign&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;flag&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;imo&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;first_timestamp&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;last_timestamp&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_TOPIC&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;data02&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FORMAT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;DELIMITED&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And with the tables defined, I could query them:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;data01&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EMIT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CHANGES&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-----------+--------------+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;MMSI&lt;/span&gt;       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SHIPNAME_RAW&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-----------+--------------+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;210631000&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FRIO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FORWIN&lt;/span&gt;   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;214182223&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;AQUAMARINE&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;214182700&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;OCEAN&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STAR&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;98&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Limit&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Reached&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Query&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;terminated&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ksql&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;data02&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EMIT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CHANGES&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;----------+-------------+---------+-----+--------+---------------------+---------------------+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;MMSI&lt;/span&gt;      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SHIPNAME&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CALLSIGN&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FLAG&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;IMO&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;FIRST_TIMESTAMP&lt;/span&gt;      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;LAST_TIMESTAMP&lt;/span&gt;       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;----------+-------------+---------+-----+--------+---------------------+---------------------+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;306117000&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SIERRALAUREL&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PJBQ&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ANT&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;9163403&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2018&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;T08&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;34&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2018&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;T17&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;08&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;41&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;306873000&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SIERRALEYRE&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PJJZ&lt;/span&gt;     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ANT&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;9135822&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;T01&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2012&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;26&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;T08&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;309681&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;GREENBRAZIL&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;C6WH6&lt;/span&gt;    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BHS&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;9045792&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2018&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;T10&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;34&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2018&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;T23&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Limit&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Reached&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Query&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;terminated&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_other_suggestions&#34;&gt;Other suggestions&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A couple of useful suggestions in response to this post, from Simon Aubury:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Nice blog as ever &lt;a href=&#34;https://twitter.com/rmoff?ref_src=twsrc%5Etfw&#34;&gt;@rmoff&lt;/a&gt;. Another way to strip Windows line-endings (CR/LF) from a data file is to pipe through dos2unix&lt;/p&gt;&amp;mdash; Simon Aubury (@SimonAubury) &lt;a href=&#34;https://twitter.com/SimonAubury/status/1365480667589435393?ref_src=twsrc%5Etfw&#34;&gt;February 27, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and from &lt;code&gt;edbond&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;a class=&#34;embedly-card&#34; href=&#34;https://www.reddit.com/r/apachekafka/comments/ltbkkn/loading_delimited_data_into_kafka_quick_dirty_but/gp5dtq6&#34;&gt;Card&lt;/a&gt;
&lt;script async=&#34;&#34; src=&#34;//embed.redditmedia.com/widgets/platform.js&#34; charset=&#34;UTF-8&#34;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>📼 ksqlDB HOWTO - A mini video series 📼</title>
      <link>https://rmoff.net/2021/02/17/ksqldb-howto-a-mini-video-series/</link>
      <pubDate>2021-02-17</pubDate>
      
      <guid>https://rmoff.net/2021/02/17/ksqldb-howto-a-mini-video-series/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2021/02/IMG_8916.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some people learn through doing - and for that there’s a bunch of good ksqlDB tutorials &lt;a href=&#34;https://docs.ksqldb.io/en/latest/tutorials/?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_ksqldb-howto&amp;amp;utm_term=rmoff-devx&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://kafka-tutorials.confluent.io/?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_ksqldb-howto&amp;amp;utm_term=rmoff-devx&#34;&gt;here&lt;/a&gt;. Others may prefer to watch and listen first, before getting hands on. And for that, I humbly offer you this little series of videos all about ksqlDB. They’re all based on a set of demo scripts that you can &lt;a href=&#34;https://github.com/confluentinc/demo-scene/blob/master/introduction-to-ksqldb/demo_introduction_to_ksqldb_02.adoc&#34;&gt;run for yourself and try out&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;🚨 Make sure you &lt;a href=&#34;http://youtube.com/rmoff?sub_confirmation=1&#34;&gt;subscribe to my YouTube channel&lt;/a&gt; so that you don’t miss more videos like these!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_s01e01_filtering&#34;&gt;S01E01 : Filtering&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/TfX70zBHyPM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using ksqlDB you can filter streams of data in Apache Kafka and write new topics in Kafka populated by a subset of another. For example&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS_NY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS&lt;/span&gt;
   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ADDRESS_STATE&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;New York&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_s01e02_schema_manipulation_and_data_transformation&#34;&gt;S01E02 : Schema Manipulation and Data Transformation&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/7pH5KEQiYYo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are lots of transformations that you can do on streams in ksqlDB including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Remove/drop fields&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rename fields&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CAST&lt;/code&gt; datatypes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reformat timestamps from &lt;code&gt;BIGINT&lt;/code&gt; epoch to human-readable strings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flatten nested objects (&lt;code&gt;STRUCT&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS_PROCESSED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TIMESTAMPTOSTRING&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ROWTIME&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;yyyy-MM-dd HH:mm:ss&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;Europe/London&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDER_TS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CAST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDER_VALUE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;DECIMAL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDER_VALUE_USD&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ADDRESS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ADDRESS&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_s01e03_joins&#34;&gt;S01E03 : Joins&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/_0Ktp2eB-as&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using ksqlDB you can enrich messages on a Kafka topic with reference data held in another topic. This could come from a database, message queue, producer API, etc. With JOIN clause you can define relationships between streams and/or tables in ksqlDB (which are built on topics in Kafka). For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS_ENRICHED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;O&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERTIME&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDER_TIMESTAMP&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
       &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;O&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
       &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;I&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;MAKE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
       &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;O&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERUNITS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
       &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;O&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERUNITS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;I&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;UNIT_COST&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TOTAL_ORDER_VALUE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;O&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ITEM_REFERENCE_01&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;I&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;O&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ITEMID&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;I&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ITEM_ID&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PARTITION&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_s01e04_integration_with_other_systems&#34;&gt;S01E04 : Integration with other systems&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/MLSrnBTSGlQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ksqlDB can pull data in from other systems (e.g. databases, JMS message queues, etc etc), and push data down to other systems (NoSQL stores, Elasticsearch, databases, Neo4j, etc etc). This is done using Kafka Connect, which can be run embedded within ksqlDB or as a separate cluster of workers. ksqlDB can be used to create and control the connectors. For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CONNECTOR&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SINK_ELASTIC_ORDERS_01&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connector.class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;io.confluent.connect.elasticsearch.ElasticsearchSinkConnector&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;          &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;ORDERS_ENRICHED&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;connection.url&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://elasticsearch:9200&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;​&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;type.name&amp;#39;&lt;/span&gt;       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;_doc&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_s01e05_reserialising_streams&#34;&gt;S01E05 : Reserialising Streams&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/sLAztA-rt74&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using ksqlDB you can reserialise data in Apache Kafka topics. For example, you can take a stream of CSV data and write it to a new topic in Avro. ksqlDB supports many serialisation formats including Avro, Protobuf, JSON Schema, JSON, and Delimited (CSV, TSV, etc). For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS_CSV&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;VALUE_FORMAT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;DELIMITED&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;KAFKA_TOPIC&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;orders_csv&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_s01e06_split_and_merge_kafka_topics&#34;&gt;S01E06 : Split and Merge Kafka Topics&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/5NoU7D4OGA0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can split streams of data in Apache Kafka based on values in a field using ksqlDB. You can also merge separate streams of data together into one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Splitting a stream:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS_UK&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COUNTRY&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;UK&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS_OTHER&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COUNTRY&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;UK&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Merging streams&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;INVENTORY_COMBINED&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;WH1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SOURCE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;INVENTORY_WH1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STREAM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;INVENTORY_COMBINED&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;WH2&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SOURCE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;INVENTORY_WH2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_s01e07_aggregates&#34;&gt;S01E07 : Aggregates&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/_-j7aKE0kl0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using ksqlDB you can build stateful aggregations of state on events in Apache Kafka topics. These are persisted as Kafka topics and held in a state store within ksqlDB that you can query directly or from an external application using the &lt;a href=&#34;https://docs.ksqldb.io/en/latest/developer-guide/ksqldb-clients/java-client/?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_ksqldb-howto&amp;amp;utm_term=rmoff-devx&#34;&gt;Java client&lt;/a&gt; or &lt;a href=&#34;https://docs.ksqldb.io/en/latest/developer-guide/api/?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_ksqldb-howto&amp;amp;utm_term=rmoff-devx&#34;&gt;REST API&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ksqlDB uses SQL to describe the stream processing that you want to do. For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS_BY_MAKE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;MAKE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDER_COUNT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
         &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TOTAL_ORDER_VALUE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TOTAL_ORDER_VALUE&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ORDERS&lt;/span&gt;
   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;MAKE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_s01e08_time_handling&#34;&gt;S01E08: Time Handling&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/scpbbl71CD8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you do processing in ksqlDB that is based on time (such as windowed aggregations, or stream-stream joins) it is important that you define correctly the timestamp by which you want your data to be processed. This could be the timestamp that’s part of the Kafka message metadata, or it could be a field in the value of the Kafka message itself.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;By default ksqlDB will use the timestamp of the Kafka message. You can change this by specifying &lt;a href=&#34;https://docs.ksqldb.io/en/latest/developer-guide/ksqldb-reference/create-stream/#description?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_ksqldb-howto&amp;amp;utm_term=rmoff-devx&#34;&gt;&lt;code&gt;WITH (TIMESTAMP=&amp;#39;…&amp;#39;&lt;/code&gt;&lt;/a&gt; in your CREATE STREAM statement, and instead identify a value field to use as the timestamp.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Use the &lt;code&gt;ROWTIME&lt;/code&gt; system field to view the timestamp of the ksqlDB row.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_references_links&#34;&gt;References &amp;amp; Links&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;💾 &lt;a href=&#34;https://ksqldb.io?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_ksqldb-howto&amp;amp;utm_term=rmoff-devx&#34;&gt;Run ksqlDB yourself&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;☁️ &lt;a href=&#34;https://www.confluent.io/confluent-cloud/tryfree?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_ksqldb-howto&amp;amp;utm_term=rmoff-devx&#34;&gt;Use ksqlDB as a managed service on Confluent Cloud&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.ksqldb.io/en/latest/?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_ksqldb-howto&amp;amp;utm_term=rmoff-devx&#34;&gt;ksqlDB docs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_questions&#34;&gt;Questions?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;👉 Head over to the &lt;a href=&#34;https://confluent.io/community/ask-the-community/?utm_source=rmoff&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tm.devx_ch.rmoff_ksqldb-howto&amp;amp;utm_term=rmoff-devx&#34;&gt;Confluent Community&lt;/a&gt; forum or Slack group.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Performing a GROUP BY on data in bash</title>
      <link>https://rmoff.net/2021/02/02/performing-a-group-by-on-data-in-bash/</link>
      <pubDate>2021-02-02</pubDate>
      
      <guid>https://rmoff.net/2021/02/02/performing-a-group-by-on-data-in-bash/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2021/02/IMG_8588.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;One of the fun things about working with data over the years is learning how to use the tools of the day—but also learning to fall back on the tools that are always there for you - and one of those is bash and its wonderful library of shell tools.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
There’s an even better way than I’ve described here, and it’s called &lt;code&gt;visidata&lt;/code&gt;. &lt;a href=&#34;https://rmoff.net/2021/03/04/quick-profiling-of-data-in-apache-kafka-using-kafkacat-and-visidata/&#34;&gt;I’ve written about it more over here&lt;/a&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ve been playing around with a new data source recently, and needed to understand more about its structure. Within a single stream there were multiple message types.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Poking around a fun source for streaming demo with &lt;a href=&#34;https://twitter.com/apachekafka?ref_src=twsrc%5Etfw&#34;&gt;@apachekafka&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/ksqlDB?ref_src=twsrc%5Etfw&#34;&gt;@ksqldb&lt;/a&gt;, and &lt;a href=&#34;https://twitter.com/elastic?ref_src=twsrc%5Etfw&#34;&gt;@elastic&lt;/a&gt; - AIS maritime data :) &lt;a href=&#34;https://t.co/ar8nllOZ97&#34;&gt;pic.twitter.com/ar8nllOZ97&lt;/a&gt;&lt;/p&gt;&amp;mdash; Robin Moffatt 🍻🏃🥓 (@rmoff) &lt;a href=&#34;https://twitter.com/rmoff/status/1355097951094366209?ref_src=twsrc%5Etfw&#34;&gt;January 29, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each message has its &lt;a href=&#34;https://gpsd.gitlab.io/gpsd/AIVDM.html#_ais_payload_interpretation&#34;&gt;own schema&lt;/a&gt;, and a common &lt;code&gt;type&lt;/code&gt; field. I wanted to know what the most common message types were. Courtesy of &lt;a href=&#34;https://stackoverflow.com/a/380832/350613&#34;&gt;StackOverflow&lt;/a&gt; this was pretty easy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;My data happened to be in a Kafka topic, &lt;strong&gt;but because of the beauty of unix pipelines the source could be anywhere that can emit to &lt;code&gt;stdout&lt;/code&gt;&lt;/strong&gt;. Here I used &lt;code&gt;kafkacat&lt;/code&gt; to take a sample of the most recent ten thousand messages on the topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;kafkacat &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; localhost:9092 &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; ais &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-c&lt;/span&gt; 10000 &lt;span style=&#34;color: #000080&#34;&gt;-o-10000&lt;/span&gt; | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  jq  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.type&amp;#39;&lt;/span&gt;                                            | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  &lt;span style=&#34;color: #0086B3&#34;&gt;sort&lt;/span&gt;                                                   | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  &lt;span style=&#34;color: #0086B3&#34;&gt;uniq&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-c&lt;/span&gt;                                                | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  &lt;span style=&#34;color: #0086B3&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;{ print $2, $1 }&amp;#39;&lt;/span&gt;                                 | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  &lt;span style=&#34;color: #0086B3&#34;&gt;sort&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-n&lt;/span&gt;

1 6162
3 1565
4 393
5 1643
8 61
9 1
12 1
18 165
21 3
27 6&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;kafkacat&lt;/code&gt; specifies the broker details (&lt;code&gt;-b&lt;/code&gt;), source topic (&lt;code&gt;-t&lt;/code&gt;), act as a consumer (&lt;code&gt;-C&lt;/code&gt;) and then how many messages to consume (&lt;code&gt;-c 10000&lt;/code&gt;) and from which offset (&lt;code&gt;-o-10000&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;jq&lt;/code&gt; extracts just the value of the &lt;code&gt;type&lt;/code&gt; field&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sort&lt;/code&gt; orders all of the &lt;code&gt;type&lt;/code&gt; values into order (a pre-requisite for &lt;code&gt;uniq&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;uniq -c&lt;/code&gt; outputs the number of occurrences of each line&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The remaining commands are optional&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;awk&lt;/code&gt; changes round the columns from &lt;code&gt;&amp;lt;count&amp;gt;,&amp;lt;item&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;item&amp;gt;,&amp;lt;count&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The final &lt;code&gt;sort&lt;/code&gt; arranges the list in numeric order&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Running as root on Docker images that don&#39;t use root</title>
      <link>https://rmoff.net/2021/01/13/running-as-root-on-docker-images-that-dont-use-root/</link>
      <pubDate>2021-01-13</pubDate>
      
      <guid>https://rmoff.net/2021/01/13/running-as-root-on-docker-images-that-dont-use-root/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2018/11/IMG_7280-EFFECTS.jpg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;p&gt;tl;dr: specify the &lt;code&gt;--user root&lt;/code&gt; argument:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker &lt;span style=&#34;color:#008000&#34;&gt;exec&lt;/span&gt; --interactive &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            --tty &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            --user root &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            --workdir / &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            container-name bash&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are &lt;a href=&#34;https://engineering.bitnami.com/articles/why-non-root-containers-are-important-for-security.html&#34;&gt;good reasons&lt;/a&gt; why running in a container as root is not a good idea, and that&amp;rsquo;s why many images published nowadays avoid doing this. &lt;a href=&#34;https://hub.docker.com/r/confluentinc/&#34;&gt;Confluent Platform&amp;rsquo;s Docker images&lt;/a&gt; changed to using &lt;code&gt;appuser&lt;/code&gt; with the 6.0 release.&lt;/p&gt;
&lt;h2 id=&#34;checking-the-container-user&#34;&gt;Checking the container user&lt;/h2&gt;
&lt;p&gt;You can check what user your container is running with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker &lt;span style=&#34;color:#008000&#34;&gt;exec&lt;/span&gt; --interactive --tty kafka bash
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;appuser@b59043522a44 ~&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;$ whoami
appuser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or more directly:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker &lt;span style=&#34;color:#008000&#34;&gt;exec&lt;/span&gt; --interactive --tty kafka whoami
appuser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;changing-the-container-user&#34;&gt;Changing the container user&lt;/h2&gt;
&lt;p&gt;Using the &lt;code&gt;--user root&lt;/code&gt; argument when launching the Docker exec command you can override the container&amp;rsquo;s user:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker &lt;span style=&#34;color:#008000&#34;&gt;exec&lt;/span&gt; --interactive --tty --user root kafka bash
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;root@b59043522a44 appuser&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# whoami&lt;/span&gt;
root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker &lt;span style=&#34;color:#008000&#34;&gt;exec&lt;/span&gt; --interactive --tty --user root kafka whoami
root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;what-no-sudo&#34;&gt;What, no &lt;code&gt;sudo&lt;/code&gt;?&lt;/h2&gt;
&lt;p&gt;Imagine this nightmare scenario 🙀 :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker &lt;span style=&#34;color:#008000&#34;&gt;exec&lt;/span&gt; --interactive --tty kafka bash
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;appuser@b59043522a44 ~&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;$ yum install jq
Error: This &lt;span style=&#34;color:#008000&#34;&gt;command&lt;/span&gt; has to be run under the root user.
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;appuser@b59043522a44 ~&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;$ sudo yum install jq
bash: sudo: &lt;span style=&#34;color:#008000&#34;&gt;command&lt;/span&gt; not found
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;appuser@b59043522a44 ~&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, installing into Docker containers is not The Right Way - you should amend the Docker image to install what&amp;rsquo;s needed before invocation as a container. &lt;em&gt;BUT&lt;/em&gt; sometimes needs must. Whether a quick hack, or just a PoC that you want to get running - sometimes you do want to install into a container, and that can be more difficult without root.&lt;/p&gt;
&lt;p&gt;You can use the same approach as above (&lt;code&gt;--user root&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ docker &lt;span style=&#34;color:#008000&#34;&gt;exec&lt;/span&gt; --interactive --tty --user root kafka bash
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;root@b59043522a44 appuser&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;# yum install -y jq&lt;/span&gt;
Confluent repository                                                                                                                                         &lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; kB/s |  &lt;span style=&#34;color:#666&#34;&gt;29&lt;/span&gt; kB     00:02
Red Hat Universal Base Image &lt;span style=&#34;color:#666&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;RPMs&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; - BaseOS                                                                                                              &lt;span style=&#34;color:#666&#34;&gt;978&lt;/span&gt; kB/s | &lt;span style=&#34;color:#666&#34;&gt;772&lt;/span&gt; kB     00:00
Red Hat Universal Base Image &lt;span style=&#34;color:#666&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;RPMs&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; - AppStream                                                                                                           1.8 MB/s | 4.9 MB     00:02
Red Hat Universal Base Image &lt;span style=&#34;color:#666&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;RPMs&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; - CodeReady Builder                                                                                                    &lt;span style=&#34;color:#666&#34;&gt;40&lt;/span&gt; kB/s |  &lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; kB     00:00
zulu-openjdk - Azul Systems Inc., Zulu packages                                                                                                              &lt;span style=&#34;color:#666&#34;&gt;95&lt;/span&gt; kB/s | &lt;span style=&#34;color:#666&#34;&gt;123&lt;/span&gt; kB     00:01
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;…&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
Installed:
  jq-1.5-12.el8.x86_64                                                                     oniguruma-6.8.2-2.el8.x86_64

Complete!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;logging-in-as-root-on-oracles-database-docker-image&#34;&gt;Logging in as &lt;code&gt;root&lt;/code&gt; on Oracle&amp;rsquo;s Database Docker Image&lt;/h2&gt;
&lt;p&gt;Using Oracle&amp;rsquo;s &lt;a href=&#34;https://github.com/oracle/docker-images/blob/master/OracleDatabase/SingleInstance/README.md&#34;&gt;Docker database image&lt;/a&gt; I wanted to install some additional apps, without modifying the &lt;code&gt;Dockerfile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Connect to the container:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker exec --interactive --tty docker-compose_oracle_1_479e7fa05ab5 bash
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;No sudo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[oracle@a37d6e99353b ~]$ sudo whoami
bash: sudo: command not found
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Googled, found the the &lt;code&gt;--user&lt;/code&gt; flag for Docker, tried that:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker exec --interactive --tty --user root docker-compose_oracle_1_479e7fa05ab5 bash
OCI runtime exec failed: exec failed: container_linux.go:348: starting container process caused &amp;quot;chdir to cwd (\&amp;quot;/home/oracle\&amp;quot;) set in config.json failed: permission denied&amp;quot;: unknown
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Evidently, the Docker image tries to change directory to the Oracle home folder which Docker&amp;rsquo;s not happy doing as another user (even though it&amp;rsquo;s &lt;code&gt;root&lt;/code&gt;?).&lt;/p&gt;
&lt;p&gt;Googled some more, found the &lt;code&gt;--workdir&lt;/code&gt; flag to override the &lt;code&gt;WORKDIR&lt;/code&gt; setting of &lt;a href=&#34;https://github.com/oracle/docker-images/blob/master/OracleDatabase/SingleInstance/dockerfiles/12.2.0.1/Dockerfile#L105&#34;&gt;the Dockerfile from which the image is built&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker exec --interactive --tty --user root --workdir / docker-compose_oracle_1_479e7fa05ab5 bash
bash-4.2# whoami
root
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Running a self-managed Kafka Connect worker for Confluent Cloud</title>
      <link>https://rmoff.net/2021/01/11/running-a-self-managed-kafka-connect-worker-for-confluent-cloud/</link>
      <pubDate>2021-01-11</pubDate>
      
      <guid>https://rmoff.net/2021/01/11/running-a-self-managed-kafka-connect-worker-for-confluent-cloud/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2021/01/IMG_8358.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Confluent Cloud is not only a &lt;strong&gt;fully&lt;/strong&gt;-managed Apache Kafka service, but also provides important additional pieces for building applications and pipelines including &lt;a href=&#34;https://docs.confluent.io/cloud/current/connectors/index.html&#34;&gt;managed connectors&lt;/a&gt;, &lt;a href=&#34;https://docs.confluent.io/cloud/current/client-apps/schemas-manage.html&#34;&gt;Schema Registry&lt;/a&gt;, and &lt;a href=&#34;https://docs.confluent.io/cloud/current/ksqldb.html&#34;&gt;ksqlDB&lt;/a&gt;. Managed Connectors are run for you (hence, managed!) within Confluent Cloud - you just specify the technology to which you want to integrate in or out of Kafka and Confluent Cloud does the rest.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/01/gcp01.png&#34; alt=&#34;gcp01&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The rate at which managed connectors are being added is impressive, but there you may find that the connector you want to use with Confluent Cloud isn’t yet available. In that case you need to run your own Kafka Connect worker which then connects to Confluent Cloud.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/01/gcp02.png&#34; alt=&#34;gcp02&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In my case I have a Confluent Cloud cluster running on GCP, so it makes sense to run my worker there too (although I could run it anywhere, closer to the cluster seems sensible). I have an ActiveMQ connector that’s pulling data from a 3rd party service that’s also Cloud-based (hence wanting to get all my processing into the Cloud too).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/01/gcp03.png&#34; alt=&#34;gcp03&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After processing the data in Confluent Cloud (with ksqlDB) I’m going to be streaming the data over to Elasticsearch - in Elastic Cloud. For this I &lt;strong&gt;will&lt;/strong&gt; be able to take advantage of a &lt;a href=&#34;https://docs.confluent.io/cloud/current/connectors/cc-elasticsearch-service-sink.html&#34;&gt;Confluent Cloud managed connector for Elasticsearch&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/01/gcp04.png&#34; alt=&#34;gcp04&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s take a look at what’s involved in running a self-managed Kafka Connect worker alongside Confluent Cloud.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_what_are_my_options_for_running_a_kafka_connect_worker&#34;&gt;What are my options for running a Kafka Connect worker?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ultimately, Kafka Connect workers are just JVM processes. You can deploy on bare metal or containers. A few options present themselves:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Bare-metal on-premises install of &lt;a href=&#34;https://www.confluent.io/download/#confluent-platform&#34;&gt;Confluent Platform&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IaaS Compute (AWS EC2, Google Compute Engine, etc) install of &lt;a href=&#34;https://www.confluent.io/download/#confluent-platform&#34;&gt;Confluent Platform&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Terraform:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://registry.terraform.io/modules/nerdynick/confluent-platform/aws/latest&#34;&gt;AWS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://registry.terraform.io/modules/purbon/confluent-platform/google/latest&#34;&gt;Google&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ricardo Ferreira’s &lt;a href=&#34;https://github.com/confluentinc/ccloud-tools&#34;&gt;Confluent Cloud Tools&lt;/a&gt; (based on Terraform)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;On-premises&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cloud-based&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this article I’m going to look at the latter of these — Docker.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_running_kafka_connect_from_docker_compose_connecting_to_confluent_cloud&#34;&gt;Running Kafka Connect from Docker Compose, connecting to Confluent Cloud&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The reason I love working with Docker is that running software no longer looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Download the software&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unpack the software&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the installer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install other stuff to meet dependency requirements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Uninstall previous version that’re creating conflicts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try to find previous config files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cry&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Instead is looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Define software requirements and configuration in a Docker Compose file&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run Docker Compose&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Win&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’m missing some of the points, but it’s the ability to simply &lt;em&gt;declare&lt;/em&gt; the config and runtime and then instantiate it that makes Docker such a joy to use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To run Kafka Connect using Docker you start with the &lt;a href=&#34;https://hub.docker.com/r/confluentinc/cp-kafka-connect-base&#34;&gt;base image&lt;/a&gt;. From there you need to do a few things &lt;strong&gt;before&lt;/strong&gt; the container launches the worker:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Specify environment variables&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install necessary connector plugins (as well as any Single Message Transform and Converters if using ones other than those that ship with the image)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install any other requires files, such as &lt;a href=&#34;https://rmoff.dev/fix-jdbc-driver-video&#34;&gt;JDBC Drivers&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once the worker is running you can then:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Create connectors. This can be automated, or run manually. I like to automate it :)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s what a Docker Compose looks like for running Kafka Connect locally, connecting to Confluent Cloud. Note that it is configured to also use the Schema Registry hosted in Confluent Cloud by default for the key and value converters.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color: #555555&#34;&gt;---&lt;/span&gt;
&lt;span style=&#34;color: #008080&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;3&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #008080&#34;&gt;services&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;

  &lt;span style=&#34;color: #008080&#34;&gt;kafka-connect-ccloud&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;confluentinc/cp-kafka-connect-base:6.0.1&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;container_name&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;kafka-connect-ccloud&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;8083:8083&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;environment&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;[%d]&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%p&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%X{connector.context}%m&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;(%c:%L)%n&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_CUB_KAFKA_TIMEOUT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;300&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_BOOTSTRAP_SERVERS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;MY-CCLOUD-BROKER-ENDPOINT.gcp.confluent.cloud:9092&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_REST_ADVERTISED_HOST_NAME&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;kafka-connect-ccloud&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_REST_PORT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;8083&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_GROUP_ID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;kafka-connect-group-01-v04&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_CONFIG_STORAGE_TOPIC&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;_kafka-connect-group-01-v04-configs&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_OFFSET_STORAGE_TOPIC&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;_kafka-connect-group-01-v04-offsets&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_STATUS_STORAGE_TOPIC&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;_kafka-connect-group-01-v04-status&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_KEY_CONVERTER&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;io.confluent.connect.avro.AvroConverter&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;https://MY-SR-CCLOUD-ENDPOINT.gcp.confluent.cloud&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_KEY_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;USER_INFO&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;SR_USER:SR_PASSWORD&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_VALUE_CONVERTER&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;io.confluent.connect.avro.AvroConverter&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;https://MY-SR-CCLOUD-ENDPOINT.gcp.confluent.cloud&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_VALUE_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;USER_INFO&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;SR_USER:SR_PASSWORD&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_LOG4J_ROOT_LOGLEVEL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;INFO&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_LOG4J_LOGGERS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;3&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;3&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_STATUS_STORAGE_REPLICATION_FACTOR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;3&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_PLUGIN_PATH&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;/usr/share/java,/usr/share/confluent-hub-components/&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Confluent Cloud config&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_REQUEST_TIMEOUT_MS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;20000&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_RETRY_BACKOFF_MS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;500&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;https&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_SASL_MECHANISM&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;PLAIN&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_SECURITY_PROTOCOL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;SASL_SSL&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_SASL_JAAS_CONFIG&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;org.apache.kafka.common.security.plain.PlainLoginModule&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;required&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;username=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;CCLOUD_USER&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;password=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;CCLOUD_PASSWORD&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;;&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;#&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_CONSUMER_SECURITY_PROTOCOL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;SASL_SSL&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_CONSUMER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;https&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_CONSUMER_SASL_MECHANISM&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;PLAIN&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_CONSUMER_SASL_JAAS_CONFIG&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;org.apache.kafka.common.security.plain.PlainLoginModule&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;required&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;username=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;CCLOUD_USER&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;password=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;CCLOUD_PASSWORD&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;;&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_CONSUMER_REQUEST_TIMEOUT_MS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;20000&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_CONSUMER_RETRY_BACKOFF_MS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;500&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;#&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_PRODUCER_SECURITY_PROTOCOL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;SASL_SSL&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_PRODUCER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;https&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_PRODUCER_SASL_MECHANISM&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;PLAIN&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_PRODUCER_SASL_JAAS_CONFIG&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;org.apache.kafka.common.security.plain.PlainLoginModule&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;required&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;username=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;CCLOUD_USER&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;password=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;CCLOUD_PASSWORD&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;;&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_PRODUCER_REQUEST_TIMEOUT_MS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;20000&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_PRODUCER_RETRY_BACKOFF_MS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;500&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;command&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;bash&lt;/span&gt;
      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;-c&lt;/span&gt;
      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;|&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;echo &amp;#34;Installing connector plugins&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;confluent-hub install --no-prompt confluentinc/kafka-connect-activemq:10.1.0&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;#&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;echo &amp;#34;Launching Kafka Connect worker&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;/etc/confluent/docker/run &amp;amp;&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;#&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;echo &amp;#34;Waiting for Kafka Connect to start listening on localhost:8083 ⏳&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;while : ; do&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;curl_status=$$(curl -s -o /dev/null -w %{http_code} http://localhost:8083/connectors)&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;echo -e $$(date) &amp;#34; Kafka Connect listener HTTP state: &amp;#34; $$curl_status &amp;#34; (waiting for 200)&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;if [ $$curl_status -eq 200 ] ; then&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;break&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;fi&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;sleep 5&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;done&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;echo -e &amp;#34;\n--\n+&amp;gt; Creating Kafka Connect source connectors&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;curl -i -X PUT -H &amp;#34;Accept:application/json&amp;#34; \&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;-H  &amp;#34;Content-Type:application/json&amp;#34; \&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;http://localhost:8083/connectors/source-activemq-networkrail-TRAIN_MVT_EA_TOC-01/config \&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;-d &amp;#39;{&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;connector.class&amp;#34;                                      : &amp;#34;io.confluent.connect.activemq.ActiveMQSourceConnector&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;activemq.url&amp;#34;                                         : &amp;#34;tcp://my-activemq-endpoint:61619&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;activemq.username&amp;#34;                                    : &amp;#34;ACTIVEMQ_USER&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;activemq.password&amp;#34;                                    : &amp;#34;ACTIVEMQ_PASSWORD&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;jms.destination.type&amp;#34;                                 : &amp;#34;topic&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;jms.destination.name&amp;#34;                                 : &amp;#34;TRAIN_MVT_EA_TOC&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;kafka.topic&amp;#34;                                          : &amp;#34;networkrail_TRAIN_MVT&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;value.converter&amp;#34;                                      : &amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;value.converter.schemas.enable&amp;#34;                       : &amp;#34;false&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;key.converter&amp;#34;                                        : &amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;key.converter.schemas.enable&amp;#34;                         : &amp;#34;false&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;topic.creation.default.partitions&amp;#34;                    : 1,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;topic.creation.default.replication.factor&amp;#34;            : 3,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;confluent.license&amp;#34;                                    : &amp;#34;&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;confluent.topic.bootstrap.servers&amp;#34;                    : &amp;#34;MY-CCLOUD-BROKER-ENDPOINT.gcp.confluent.cloud:9092&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;confluent.topic.sasl.jaas.config&amp;#34;                     : &amp;#34;org.apache.kafka.common.security.plain.PlainLoginModule required username=\&amp;#34;CCLOUD_USER\&amp;#34; password=\&amp;#34;CCLOUD_PASSWORD\&amp;#34;;&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;confluent.topic.security.protocol&amp;#34;                    : &amp;#34;SASL_SSL&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;confluent.topic.ssl.endpoint.identification.algorithm&amp;#34;: &amp;#34;https&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;confluent.topic.sasl.mechanism&amp;#34;                       : &amp;#34;PLAIN&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;confluent.topic.request.timeout.ms&amp;#34;                   : &amp;#34;20000&amp;#34;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;confluent.topic.retry.backoff.ms&amp;#34;                     : &amp;#34;500&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;}&amp;#39;&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;#&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;#&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;sleep infinity&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that this does everything needed:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Installs the connector (ActiveMQ)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Launches the Kafka Connect worker (forked to a background process with &lt;code&gt;&amp;amp;&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Waits for the worker to be available&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creates the connector&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Observe that &lt;code&gt;topic.creation.default.partitions&lt;/code&gt; and &lt;code&gt;topic.creation.default.replication.factor&lt;/code&gt; are set - this means that Confluent Cloud will create the target topics that the connector is to write to automagically. This is possible because of &lt;a href=&#34;https://cwiki.apache.org/confluence/display/KAFKA/KIP-158%3A+Kafka+Connect+should+allow+source+connectors+to+set+topic-specific+settings+for+new+topics&#34;&gt;KIP-158&lt;/a&gt; which &lt;a href=&#34;https://rmoff.net/2021/01/06/creating-topics-with-kafka-connect/&#34;&gt;I wrote about recently&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One other point to note is that the worker uses Kafka itself to store state including configuration and status, and it does so in the topics defined under&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CONNECT_CONFIG_STORAGE_TOPIC&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CONNECT_OFFSET_STORAGE_TOPIC&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CONNECT_STATUS_STORAGE_TOPIC&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you’re [re]creating workers make sure that you don’t have a clash on these topics - use a unique number appended to the end, or &lt;a href=&#34;https://rmoff.net/2019/11/12/running-dockerised-kafka-connect-worker-on-gcp/&#34;&gt;as I did here&lt;/a&gt; use the epoch as part of the unique name.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_deploying_a_docker_image_to_google_compute_engine_gce_google_cloud_platform_gcp&#34;&gt;Deploying a Docker image to Google Compute Engine (GCE) / Google Cloud Platform (GCP)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;This it is 💯 a Proof-of-Concept (i.e. not blessed by Confluent in any way as &amp;#34;The Right Way&amp;#34;), and builds on my &lt;a href=&#34;https://rmoff.net/2019/11/12/running-dockerised-kafka-connect-worker-on-gcp/&#34;&gt;previous&lt;/a&gt; experimentation. If you are doing this in anger then for sure you should figure out how to do it properly, but for my purposes of a quick &amp;amp; dirty solution it worked well.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;It Works On My Machine [well, Google’s]™&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So taking the above Docker Compose definition, we can then use GCE’s feature to run &lt;a href=&#34;https://cloud.google.com/compute/docs/containers&#34;&gt;Containers on Compute Engine&lt;/a&gt; to provision this directly on GCE. For AWS see the approach that I wrote about &lt;a href=&#34;https://rmoff.net/2020/02/13/adventures-in-the-cloud-part-94-ecs/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To launch a container on GCE either use the Web UI, or the &lt;a href=&#34;https://cloud.google.com/sdk/gcloud/reference/compute/instances/create-with-container?hl=en&#34;&gt;&lt;code&gt;gcloud&lt;/code&gt; commandline&lt;/a&gt;. The first part of it is simple enough - we name the VM holding the container, we specify the image to use, and so on:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;gcloud compute instances create-with-container &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        rmoff-connect-source-v01 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--zone&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;us-east1-b &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--tags&lt;/span&gt; kafka-connect &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
      	&lt;span style=&#34;color: #000080&#34;&gt;--metadata&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;google-logging-enabled&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--container-image&lt;/span&gt; confluentinc/cp-kafka-connect-base:6.0.1 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--container-restart-policy&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;never &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[&lt;/span&gt;…]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When the image starts up, by default it runs the Kafka Connect worker. However, we can override this by specifying a custom &lt;code&gt;command&lt;/code&gt;. We run &lt;code&gt;/bin/bash&lt;/code&gt; as the command, and then pass in &lt;code&gt;-c&lt;/code&gt; as the argument followed by an argument that holds the actual shell script we want to execute:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
        &lt;span style=&#34;color: #000080&#34;&gt;--container-command&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;/bin/bash &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--container-arg&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #000080&#34;&gt;-c&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--container-arg&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;set -x
        # Run this stuff when the container launches
        […]
        #
        sleep infinity&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Within that command block we use the &lt;code&gt;command&lt;/code&gt; seen in the Docker Compose YAML above. So far, so good.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But (&lt;em&gt;you knew there was a but coming, didn’t you&lt;/em&gt;), we also need to specify environment variables, and not just a few - and not just with straightforward values. We’ve got dozens of values, and because we’re specifying SASL config there’s quote marks in there, escape characters, and more. The &lt;code&gt;gcloud&lt;/code&gt; CLI has the &lt;a href=&#34;https://cloud.google.com/sdk/gcloud/reference/compute/instances/create-with-container?hl=en#--container-env&#34;&gt;&lt;code&gt;--container-env&lt;/code&gt;&lt;/a&gt; argument in which we can pass the environment variables as a comma-separated list of key=value pairs, and the &lt;code&gt;=&lt;/code&gt; can be overriden to a custom character - but you still end up with an awful mess like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2019/11/container_env.png&#34; alt=&#34;container env&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It’s not pretty, and it’s a bit of a bugger to debug. You can pass in a separate file holding environment values but I’m always keen on keeping things self-contained if possible. So instead, since I was overriding the command to run as container launch anyway, I overrode the environment variables at that point instead:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
        &lt;span style=&#34;color: #000080&#34;&gt;--container-command&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;/bin/bash &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--container-arg&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #000080&#34;&gt;-c&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--container-arg&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;set -x
        #
        # Set the environment variables
        export CONNECT_REST_ADVERTISED_HOST_NAME=rmoff-connect-source-v01
        […]
        #
        […]
        #
        sleep infinity&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Most important is to finish with &lt;code&gt;sleep infinity&lt;/code&gt; so that the container does not exit (since the Kafka Connect worker process is forked to the background).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It needs some tricky escaping, both of the &lt;code&gt;curl&lt;/code&gt; data (&lt;code&gt;-d&lt;/code&gt;) block, as well as the quoted passages within it. Here is the final shell invocation:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;gcloud compute instances create-with-container rmoff-connect-source-v01 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--zone&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;us-east1-b &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--tags&lt;/span&gt; kafka-connect &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
      	&lt;span style=&#34;color: #000080&#34;&gt;--metadata&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;google-logging-enabled&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--container-image&lt;/span&gt; confluentinc/cp-kafka-connect-base:6.0.1 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--container-restart-policy&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;never &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--container-command&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;/bin/bash &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--container-arg&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #000080&#34;&gt;-c&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--container-arg&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;set -x
        #
        # Set the environment variables
        export CONNECT_CUB_KAFKA_TIMEOUT=300
        export CONNECT_BOOTSTRAP_SERVERS=MY-CCLOUD-BROKER-ENDPOINT.gcp.confluent.cloud:9092
        export CONNECT_REST_ADVERTISED_HOST_NAME=rmoff-connect-source-v01
        export CONNECT_REST_PORT=8083
        export CONNECT_GROUP_ID=kafka-connect-group-gcp-v01
        export CONNECT_CONFIG_STORAGE_TOPIC=_kafka-connect-group-gcp-v01-configs
        export CONNECT_OFFSET_STORAGE_TOPIC=_kafka-connect-group-gcp-v01-offsets
        export CONNECT_STATUS_STORAGE_TOPIC=_kafka-connect-group-gcp-v01-status
        export CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
        export CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
        export CONNECT_LOG4J_ROOT_LOGLEVEL=INFO
        export CONNECT_LOG4J_LOGGERS=org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR
        export CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=3
        export CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=3
        export CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=3
        export CONNECT_PLUGIN_PATH=/usr/share/java,/usr/share/confluent-hub-components/
        export CONNECT_RETRY_BACKOFF_MS=500
        export CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=https
        export CONNECT_SASL_MECHANISM=PLAIN
        export CONNECT_SECURITY_PROTOCOL=SASL_SSL
        export CONNECT_CONSUMER_SECURITY_PROTOCOL=SASL_SSL
        export CONNECT_CONSUMER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=https
        export CONNECT_CONSUMER_SASL_MECHANISM=PLAIN
        export CONNECT_CONSUMER_RETRY_BACKOFF_MS=500
        export CONNECT_PRODUCER_SECURITY_PROTOCOL=SASL_SSL
        export CONNECT_PRODUCER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=https
        export CONNECT_PRODUCER_SASL_MECHANISM=PLAIN
        export CONNECT_PRODUCER_RETRY_BACKOFF_MS=500
        export CONNECT_SASL_JAAS_CONFIG=&amp;#34;org.apache.kafka.common.security.plain.PlainLoginModule required username=\&amp;#34;CCLOUD_USER\&amp;#34; password=\&amp;#34;CCLOUD_PASSWORD\&amp;#34;;&amp;#34;
        export CONNECT_CONSUMER_SASL_JAAS_CONFIG=&amp;#34;org.apache.kafka.common.security.plain.PlainLoginModule required username=\&amp;#34;CCLOUD_USER\&amp;#34; password=\&amp;#34;CCLOUD_PASSWORD\&amp;#34;;&amp;#34;
        export CONNECT_PRODUCER_SASL_JAAS_CONFIG=&amp;#34;org.apache.kafka.common.security.plain.PlainLoginModule required username=\&amp;#34;CCLOUD_USER\&amp;#34; password=\&amp;#34;CCLOUD_PASSWORD\&amp;#34;;&amp;#34;
        #
        echo &amp;#34;Installing connector plugins&amp;#34;
        confluent-hub install --no-prompt confluentinc/kafka-connect-activemq:10.1.0
        #
        echo &amp;#34;Launching Kafka Connect worker&amp;#34;
        /etc/confluent/docker/run &amp;amp;
        #
        echo &amp;#34;Waiting for Kafka Connect to start listening on localhost:8083 ⏳&amp;#34;
        while : ; do
            curl_status=$(curl -s -o /dev/null -w %{http_code} http://localhost:8083/connectors)
            echo -e $(date) &amp;#34; Kafka Connect listener HTTP state: &amp;#34; $curl_status &amp;#34; (waiting for 200)&amp;#34;
            if [ $curl_status -eq 200 ] ; then
            break
            fi
            sleep 5
        done
        echo -e &amp;#34;\n--\n+&amp;gt; Creating Kafka Connect source connectors&amp;#34;
        curl -s -X PUT -H  &amp;#34;Content-Type:application/json&amp;#34; \
        http://localhost:8083/connectors/source-activemq-networkrail-TRAIN_MVT_EA_TOC-01/config \
            -d &amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;{
                &amp;#34;connector.class&amp;#34;                                      : &amp;#34;io.confluent.connect.activemq.ActiveMQSourceConnector&amp;#34;,
                &amp;#34;activemq.url&amp;#34;                                         : &amp;#34;tcp://my-activemq-endpoint:61619&amp;#34;,
                &amp;#34;activemq.username&amp;#34;                                    : &amp;#34;ACTIVEMQ_USER&amp;#34;,
                &amp;#34;activemq.password&amp;#34;                                    : &amp;#34;ACTIVEMQ_PASSWORD&amp;#34;,
                &amp;#34;jms.destination.type&amp;#34;                                 : &amp;#34;topic&amp;#34;,
                &amp;#34;jms.destination.name&amp;#34;                                 : &amp;#34;TRAIN_MVT_EA_TOC&amp;#34;,
                &amp;#34;kafka.topic&amp;#34;                                          : &amp;#34;networkrail_TRAIN_MVT_v01&amp;#34;,
                &amp;#34;value.converter&amp;#34;                                      : &amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
                &amp;#34;value.converter.schemas.enable&amp;#34;                       : &amp;#34;false&amp;#34;,
                &amp;#34;key.converter&amp;#34;                                        : &amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
                &amp;#34;key.converter.schemas.enable&amp;#34;                         : &amp;#34;false&amp;#34;,
                &amp;#34;topic.creation.default.partitions&amp;#34;                    : 1,
                &amp;#34;topic.creation.default.replication.factor&amp;#34;            : 3,
                &amp;#34;confluent.license&amp;#34;                                    : &amp;#34;&amp;#34;,
                &amp;#34;confluent.topic.bootstrap.servers&amp;#34;                    : &amp;#34;MY-CCLOUD-BROKER-ENDPOINT.gcp.confluent.cloud:9092&amp;#34;,
                &amp;#34;confluent.topic.sasl.jaas.config&amp;#34;                     : &amp;#34;org.apache.kafka.common.security.plain.PlainLoginModule required username=\&amp;#34;&amp;#39;&lt;/span&gt;CCLOUD_USER&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;\&amp;#34; password=\&amp;#34;&amp;#39;&lt;/span&gt;CCLOUD_PASSWORD&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;\&amp;#34;;&amp;#34;,
                &amp;#34;confluent.topic.security.protocol&amp;#34;                    : &amp;#34;SASL_SSL&amp;#34;,
                &amp;#34;confluent.topic.ssl.endpoint.identification.algorithm&amp;#34;: &amp;#34;https&amp;#34;,
                &amp;#34;confluent.topic.sasl.mechanism&amp;#34;                       : &amp;#34;PLAIN&amp;#34;,
                &amp;#34;confluent.topic.request.timeout.ms&amp;#34;                   : &amp;#34;20000&amp;#34;,
                &amp;#34;confluent.topic.retry.backoff.ms&amp;#34;                     : &amp;#34;500&amp;#34;
            }&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;
        #
        sleep infinity&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_container_logs&#34;&gt;Container logs&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can use the rather useful &lt;code&gt;gcloud compute ssh&lt;/code&gt; to connect to the VM directly that’s been launched&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;gcloud compute ssh &lt;span style=&#34;color: #000080&#34;&gt;--zone&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;us-east1-b&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;rmoff-connect-source-v01&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you run it too soon after launch you’ll get an error&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;Warning: Permanently added &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;compute.8428359303178581516&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;ED25519&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt; to the list of known hosts.
rmoff@34.75.11.50: Permission denied &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;publickey&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;.&lt;/span&gt;
ERROR: &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;gcloud.compute.ssh&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[&lt;/span&gt;/usr/bin/ssh] exited with &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;return &lt;/span&gt;code &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[&lt;/span&gt;255].&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once the VM is running properly you’ll get a shell prompt&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;  &lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;########################[ Welcome ]########################&lt;/span&gt;
  &lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;#  You have logged in to the guest OS.                    #&lt;/span&gt;
  &lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;#  To access your containers use &amp;#39;docker attach&amp;#39; command  #&lt;/span&gt;
  &lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;###########################################################&lt;/span&gt;

rmoff@rmoff-connect-source-v01 ~ &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;From here, you can see the containers running on the VM. To start with you’ll see a couple of internal ones (&lt;code&gt;stackdriver-logging-agent&lt;/code&gt;, &lt;code&gt;konlet&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;rmoff@rmoff-connect-source-v01 ~ &lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;docker ps
CONTAINER ID  IMAGE                                                                COMMAND                  CREATED         STATUS                  PORTS   NAMES
4a04df77a0be  gcr.io/gce-containers/konlet:v.0.11-latest                           &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;/bin/gce-containers…&amp;#34;&lt;/span&gt;   35 seconds ago  Up 32 seconds                   pedantic_tu
0d008a624e56  gcr.io/stackdriver-agents/stackdriver-logging-agent:0.2-1.5.33-1-1   &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;/entrypoint.sh /usr…&amp;#34;&lt;/span&gt;   2 days ago      Up 2 days                       stackdriver-logging-agent&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and soon after, the actual container that you’ve configured to run:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;rmoff@rmoff-connect-source-v01 ~ &lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;docker ps
CONTAINER ID        IMAGE                                                                COMMAND                  CREATED             STATUS                             PORTS               NAMES
1e349180aa20        confluentinc/cp-kafka-connect-base:6.0.1                             &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;/bin/bash -c &amp;#39;set -…&amp;#34;&lt;/span&gt;   33 seconds ago      Up 30 seconds &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;health: starting&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;                       klt-rmoff-connect-source-v01-qjez&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;At this point you’re just in normal Docker world, and can look at the logs as you would locally:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;rmoff@rmoff-connect-source-v01 ~ &lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;docker logs &lt;span style=&#34;color: #000080&#34;&gt;-f&lt;/span&gt; klt-rmoff-connect-source-v01-qjez|more
+ &lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CONNECT_CUB_KAFKA_TIMEOUT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;300
+ &lt;span style=&#34;color: #008080&#34;&gt;CONNECT_CUB_KAFKA_TIMEOUT&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;300
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
Installing connector plugins
+ &lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;Installing connector plugins&amp;#39;&lt;/span&gt;
+ confluent-hub &lt;span style=&#34;color: #0086B3&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;--no-prompt&lt;/span&gt; confluentinc/kafka-connect-activemq:10.1.0
Running &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;in &lt;/span&gt;a &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;--no-prompt&amp;#34;&lt;/span&gt; mode
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[&lt;/span&gt;2021-01-11 21:56:38,614] INFO &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[&lt;/span&gt;Worker &lt;span style=&#34;color: #008080&#34;&gt;clientId&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;connect-1, &lt;span style=&#34;color: #008080&#34;&gt;groupId&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;kafka-connect-group-gcp-v01] Starting connectors and tasks using config offset &lt;span style=&#34;color: #000080&#34;&gt;-1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;org.apache.kafka.connect.runtime.distributed.DistributedHerder&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[&lt;/span&gt;…]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With all of this done, you should now see topics on your Confluent Cloud cluster for both the internal Kafka Connect worker topics, and any populated by the connector:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/01/gcp05.png&#34; alt=&#34;gcp05&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2021/01/gcp06.png&#34; alt=&#34;gcp06&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you want to shut down the VM you can use &lt;code&gt;delete&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;gcloud compute instances delete &lt;span style=&#34;color: #000080&#34;&gt;--zone&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;us-east1-b&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;rmoff-connect-source-v01&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>