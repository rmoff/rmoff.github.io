<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rmoff&#39;s random ramblings</title>
    <link>https://rmoff.net/</link>
    <description>Recent content on rmoff&#39;s random ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>2020-07-16</lastBuildDate>
    
        <atom:link href="https://rmoff.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Learning Golang (some rough notes) - S02E07 - Splitting Go code into separate source files and building a binary executable</title>
      <link>https://rmoff.net/2020/07/16/learning-golang-some-rough-notes-s02e07-splitting-go-code-into-separate-source-files-and-building-a-binary-executable/</link>
      <pubDate>2020-07-16</pubDate>
      
      <guid>https://rmoff.net/2020/07/16/learning-golang-some-rough-notes-s02e07-splitting-go-code-into-separate-source-files-and-building-a-binary-executable/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/07/IMG_5126.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So far I&amp;#8217;ve been running all my code either in the &lt;a href=&#34;https://tour.golang.org/&#34;&gt;Go Tour sandbox&lt;/a&gt;, using &lt;a href=&#34;https://play.golang.org/&#34;&gt;Go Playground&lt;/a&gt;, or from a single file in VS Code. My explorations in the &lt;a href=&#34;https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e06-putting-the-producer-in-a-function-and-handling-errors-in-a-go-routine/&#34;&gt;previous article&lt;/a&gt; ended up with a a source file that was starting to get a little bit unwieldily, so let&amp;#8217;s take a look at how that can be improved.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Within my &lt;a href=&#34;https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e06-putting-the-producer-in-a-function-and-handling-errors-in-a-go-routine/&#34;&gt;most recent code&lt;/a&gt;, I have the &lt;code&gt;main&lt;/code&gt; function and the &lt;code&gt;doProduce&lt;/code&gt; function, which is fine when collapsed down:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/07/func01.png&#34; alt=&#34;func01&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But as soon as it&amp;#8217;s not starts to get a bit long, so let&amp;#8217;s split that out into its own file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Go docs have a whole &lt;a href=&#34;https://twitter.com/rmoff/status/1283723460934619139&#34;&gt;section devoted to organising code&lt;/a&gt;, but I found it hard to follow. Part of it is probably because I&amp;#8217;ve been living in VSCode and not using the Go environment with modules etc as the docs describe. &lt;a href=&#34;https://verticalaxisbd.com/blog/code-splitting-go/&#34;&gt;This article&lt;/a&gt; helped clarify things a bit for me. Having played around I think I understand it a bit better now, thus:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If &lt;strong&gt;all you want to do is split a Go code file into separate ones&lt;/strong&gt;, put them all in the same folder with the same package name and use &lt;code&gt;go run .&lt;/code&gt; to execute them (or continue to run them from within your IDE such as VSCode)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Files in the same folder with the same package name share access to their functions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You don&amp;#8217;t have to do anything with &lt;code&gt;import&lt;/code&gt; or modules, or anything like that.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leave &lt;code&gt;package main&lt;/code&gt; alone - you come to change the package name when you&amp;#8217;re actually building a package for import elsewhere&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;At some point you probably &lt;strong&gt;should&lt;/strong&gt;, and I&amp;#8217;ll get onto that another time when I need to :)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So I started with the &lt;a href=&#34;https://rmoff.net/code/go/kafka/producer_function/producer_function.go&#34;&gt;same file as previously&lt;/a&gt;, but in a new folder and new name:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;➜ &lt;span style=&#34;color: #0086B3&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-l&lt;/span&gt; listener_test_01

total 24
&lt;span style=&#34;color: #000080&#34;&gt;-rw-r--r--&lt;/span&gt;  1 rmoff  staff  5256 16 Jul 11:17 main.go&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;From there I split &lt;code&gt;doProduce&lt;/code&gt; into its own source file, giving us:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;➜ &lt;span style=&#34;color: #0086B3&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-l&lt;/span&gt; listener_test_01
total 32
&lt;span style=&#34;color: #000080&#34;&gt;-rw-r--r--&lt;/span&gt;  1 rmoff  staff   741 16 Jul 11:44 main.go
&lt;span style=&#34;color: #000080&#34;&gt;-rw-r--r--&lt;/span&gt;  1 rmoff  staff  4595 16 Jul 11:44 producer.go&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;code&gt;main.go&lt;/code&gt; file includes &lt;code&gt;main()&lt;/code&gt; which then calls other functions&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;main.go&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;package&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;fmt&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;os&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;


&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doProduce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;There was a problem calling the producer :-(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;Oh joy! Oh rejoice! Calling the producer worked *just fine*.&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;producer.go&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;package&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;errors&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;fmt&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;time&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

        &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;gopkg.in/confluentinc/confluent-kafka-go.v1/kafka&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Produce a test message to given broker and topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doProduce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

        &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Create Producer instance&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you try to just run the &lt;code&gt;main.go&lt;/code&gt; file you&amp;#8217;ll get&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;➜ go run main.go
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# command-line-arguments&lt;/span&gt;
./main.go:26:10: undefined: doProduce&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So instead you use this (&lt;a href=&#34;https://stackoverflow.com/a/50593262/350613&#34;&gt;h/t&lt;/a&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;➜ go run &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;.go&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Alternatively you can use&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;➜ go run .&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_building_a_binary_executable&#34;&gt;Building a binary executable&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Instead of compiling and running the code each time with &lt;code&gt;go run&lt;/code&gt;, you can also build a binary executable which can then be invoking directly. For this simply run:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;go build&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This builds an executable that takes the name of the parent folder by default&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;➜ &lt;span style=&#34;color: #0086B3&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-l&lt;/span&gt; listener_test_01

&lt;span style=&#34;color: #000080&#34;&gt;-rwxr-xr-x&lt;/span&gt;  1 rmoff  staff   6.6M 16 Jul 15:30 listener_test_01
&lt;span style=&#34;color: #000080&#34;&gt;-rw-r--r--&lt;/span&gt;  1 rmoff  staff   741B 16 Jul 15:01 main.go
&lt;span style=&#34;color: #000080&#34;&gt;-rw-r--r--&lt;/span&gt;  1 rmoff  staff   4.5K 16 Jul 15:01 producer.go&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now you can run it directly, passing commandline arguments as needed&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;./listener_test_01 localhost:9092&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What about &lt;code&gt;go.mod&lt;/code&gt; that you may have seen kicking about? For my very simple example here all it does is change the name of the executable that we build&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;➜ go mod init listenertest
go: creating new go.mod: module listenertest

➜ go build

➜ ll
total 27264
&lt;span style=&#34;color: #000080&#34;&gt;-rwxr-xr-x&lt;/span&gt;  1 rmoff  staff   6.6M 16 Jul 15:37 listenertest&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_more_episodes&#34;&gt;📺 More Episodes…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Kafka and Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e00-kafka-and-go/&#34;&gt;S02E00 - Kafka and Go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e01-my-first-kafka-go-producer/&#34;&gt;S02E01 - My First Kafka Go Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;S02E02 - Adding error handling to the Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e03-kafka-go-consumer-channel-based/&#34;&gt;S02E03 - Kafka Go Consumer (Channel-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e04-kafka-go-consumer-function-based/&#34;&gt;S02E04 - Kafka Go Consumer (Function-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e05-kafka-go-adminclient/&#34;&gt;S02E05 - Kafka Go AdminClient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e06-putting-the-producer-in-a-function-and-handling-errors-in-a-go-routine/&#34;&gt;S02E06 - Putting the Producer in a function and handling errors in a Go routine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/16/learning-golang-some-rough-notes-s02e07-splitting-go-code-into-separate-source-files-and-building-a-binary-executable/&#34;&gt;S02E07 - Splitting Go code into separate source files and building a binary executable&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;S01E00 - Background&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e01-pointers/&#34;&gt;S01E01 - Pointers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e02-slices/&#34;&gt;S01E02 - Slices&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e03-maps/&#34;&gt;S01E03 - Maps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e04-function-closures/&#34;&gt;S01E04 - Function Closures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/30/learning-golang-some-rough-notes-s01e05-interfaces/&#34;&gt;S01E05 - Interfaces&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e06-errors/&#34;&gt;S01E06 - Errors&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e07-readers/&#34;&gt;S01E07 - Readers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e08-images/&#34;&gt;S01E08 - Images&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e09-concurrency-channels-goroutines/&#34;&gt;S01E09 - Concurrency (Channels, Goroutines)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/&#34;&gt;S01E10 - Concurrency (Web Crawler)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    <item>
      <title>Learning Golang (some rough notes) - S02E06 - Putting the Producer in a function and handling errors in a Go routine</title>
      <link>https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e06-putting-the-producer-in-a-function-and-handling-errors-in-a-go-routine/</link>
      <pubDate>2020-07-15</pubDate>
      
      <guid>https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e06-putting-the-producer-in-a-function-and-handling-errors-in-a-go-routine/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/07/IMG_5126.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When I set out to &lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;learn Go&lt;/a&gt; one of the aims I had in mind was to write a version of &lt;a href=&#34;https://github.com/rmoff/kafka-listeners/blob/master/python/python_kafka_test_client.py&#34;&gt;this little Python utility&lt;/a&gt; which accompanies a blog I wrote recently about &lt;a href=&#34;https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc&#34;&gt;understanding and diagnosing problems with Kafka advertised listeners&lt;/a&gt;. Having successfully got &lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;Producer&lt;/a&gt;, &lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e04-kafka-go-consumer-function-based/&#34;&gt;Consumer&lt;/a&gt;, and &lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e05-kafka-go-adminclient/&#34;&gt;AdminClient&lt;/a&gt; API examples working, it is now time to turn to that task.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I&amp;#8217;m quite keen to figure out how to do this &lt;em&gt;properly&lt;/em&gt; and take the opportunity to learn. It would be easy enough to copy &amp;amp; paste all my snippets together, ignore any error handling, and check the task off as done. But since I don&amp;#8217;t have a strong background in coding, now seems a good chance to try and instill a little bit of rigour in what I&amp;#8217;m doing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_command_line_arguments&#34;&gt;Command line arguments&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Instead of hard coding the broker host and port, I want to be able to pass this as a commandline argument. This is easy enough using the &lt;a href=&#34;https://golang.org/pkg/os/&#34;&gt;OS&lt;/a&gt; package, which behaves very similar to the Python equivalent:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;os&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Read the first commandline argument to get the broker details&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;os&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Args&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;Broker: %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I&amp;#8217;m using VSCode for my IDE as it works very nicely with Go - both for writing code, and debugging it. To pass an argument to the command line as part of debugging go to &lt;code&gt;Run&lt;/code&gt; &amp;#8594; &lt;code&gt;Open Configurations&lt;/code&gt; and in the JSON file set the argument(s) that you want to pass:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;args&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;localhost:9092&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This works fine when the code is run&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;Broker: localhost:9092&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But what if the user &lt;em&gt;doesn&amp;#8217;t&lt;/em&gt; specify the required commandline arguments?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;panic: runtime error: index out of range [1] with length 1

goroutine 1 [running]:
main.main()
	/Users/rmoff/git/rmoff-blog/content/code/go/kafka/producer_function/producer_function.go:15 +0x24e&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So we need a bit of care here, and check for the length too&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;os&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Args&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;os&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Args&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;(No broker specifed on commandline; defaulting to localhost:9092)&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;localhost:9092&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;Broker: %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_functions&#34;&gt;Functions&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;code&gt;main()&lt;/code&gt; code is going to look something like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Do init stuff to set vars etc&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// …&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Create AdminClient connection to check metadata&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doAdmin&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Produce message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doProduce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Consume message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doConsume&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// fin.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each one is dependent on the other, so we need to know if there was an error…&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_errors&#34;&gt;Errors&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Following the same pattern as I explored &lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;here&lt;/a&gt; I&amp;#8217;m expecting to have something that looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Do init stuff to set vars etc&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// …&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Create AdminClient connection to check metadata&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doAdmin&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;There was a problem with AdminClient :-(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Produce message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doProduce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;There was a problem calling the producer :-(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Consume message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doConsume&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
            &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;There was a problem calling the consumer :-(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// fin.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To do this, each function needs to return an &lt;code&gt;error&lt;/code&gt;, so the function looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doProduce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// If you hit an error then&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errors&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;New&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;OH NO! THERE WAS AN ERROR&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

    &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// assuming everything has gone ok return no error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Where we were previously dumping messages to the output:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the producer (Kafka error code %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We now want to take this and pass it back as the error. Since &lt;code&gt;errors.New()&lt;/code&gt; takes a &lt;code&gt;string&lt;/code&gt; it makes sense to replace our existing &lt;code&gt;fmt.Printf&lt;/code&gt; with &lt;code&gt;fmt.Sprintf&lt;/code&gt; and pass this to &lt;code&gt;errors.New()&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errors&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;New&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Sprintf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the producer (Kafka error code %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Go linter in VSCode is brilliant here as it actively tells you this is not the best way to do it, with some nice orange underlining:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/07/error01.png&#34; alt=&#34;error01&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you hover over it you get a nice tip of how to write the code better:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/07/error02.png&#34; alt=&#34;error02&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, instead of&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errors&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;New&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Sprintf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the producer (Kafka error code %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We just replace&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the producer (Kafka error code %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;with&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Errorf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the producer (Kafka error code %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_error_in_go_routines&#34;&gt;Error in Go routines&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This all works, except in the Go routine within the function. In the case of the Producer code the Go routine is there to handle events such as message delivery reports, errors, etc. Since a Go routine is a function itself with no return variables, then we can&amp;#8217;t &lt;code&gt;return&lt;/code&gt; an error from within it. If you try to, you get this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;too many arguments to return
	have (error)
	want ()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now, maybe the code in your function will catch an error as a side effect of the error thrown in the Go routine, but it&amp;#8217;s not great to rely on that happening. Instead we can provide a channel that the Go routine can write to if there&amp;#8217;s an error, and then check that from our parent function and return an error if we find one. Something like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;package&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;errors&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;fmt&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;time&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doThisThing&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;doThisThing failed.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;doThisThing worked.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doThisThing&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;chan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// If we&#39;re all good then do stuff&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// …&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// If we hit an error then log an error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Sprintf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;here is an error from the go routine :(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Sprintf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;here is another error from the go routine :(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Do all our stuff in the function that we need to&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// …&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Sleep&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Second&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// pretend we&#39;re doing stuff&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// …&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// When we&#39;re ready to return, check if the go routine has sent errors&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Note that we&#39;re relying on the Go routine to close the channel, otherwise&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// we deadlock.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// If there are no errors then the channel is simply closed and we read no values.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;done&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;done&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;o&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;o&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// o is false if we&#39;ve read all the values and the channel is closed&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// If that&#39;s the case, then we&#39;re done here&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;done&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// We&#39;ve read a value so let&#39;s concatenate it with the others&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// that we&#39;ve got&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// If we&#39;ve got any errors, then return an error to the caller&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errors&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;New&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// assuming everything has gone ok return no error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When run this looks like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;doThisThing failed.
here is an error from the go routine :(
here is another error from the go routine :(&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_producer&#34;&gt;The Producer&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With this error handling in place, I can now call my &lt;code&gt;doProduce&lt;/code&gt; function and get an error (or not) back from it successfully:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It works!&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;ℹ️ No broker specified on commandline; defaulting to localhost:9092

Broker: localhost:9092

--
✨ All messages flushed from the queue
✅ Message &#39;foo / Thu, 16 Jul 2020 00:05:57 +0100&#39; delivered to topic &#39;rmoff_test_00&#39; (partition 0 at offset 11)

-=-=
Wrapping up…
👋 … and we&#39;re done.
Oh joy! Oh rejoice! Calling the producer worked *just fine*.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It doesn&amp;#8217;t!&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;ℹ️ No broker specified on commandline; defaulting to localhost:9092

Broker: localhost:9092
-=-=
Wrapping up…
❌ … returning an error

There was a problem calling the producer :-(

**☠️ Uh oh, caught an error:
	localhost:9092/bootstrap: Connect to ipv6#[::1]:9092 failed: Connection refused (after 3ms in state CONNECT)

**☠️ Uh oh, caught an error:
	1/1 brokers are down

--
⚠️ Failed to flush all messages after 1000 milliseconds. 1 message(s) remain&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here&amp;#8217;s the full code, and a &lt;a href=&#34;https://rmoff.net/code/go/kafka/producer_function/docker-compose.yml&#34;&gt;Docker Compose&lt;/a&gt; you can use to try it with.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;package&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;errors&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;fmt&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;os&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;time&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;gopkg.in/confluentinc/confluent-kafka-go.v1/kafka&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Read the first commandline argument to get the broker details&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;os&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Args&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;os&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Args&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;ℹ️ No broker specified on commandline; defaulting to localhost:9092&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;localhost:9092&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;Broker: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Set the topic name that we&#39;ll use&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;rmoff_test_00&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Create Admin Connection&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// doAdmin(broker)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Produce message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doProduce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;There was a problem calling the producer :-(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;Oh joy! Oh rejoice! Calling the producer worked *just fine*.&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Consume message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// doConsume()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// fin.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doProduce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Create Producer instance&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#NewProducer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Store the config&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ConfigMap&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;bootstrap.servers&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;broker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Check for errors in creating the Producer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;NewProducer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Code&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ErrInvalidArg&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Errorf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the producer because you&#39;ve configured it wrong (code: %d)!&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;To see the configuration options, refer to https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Errorf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the producer (Kafka error code %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s not a kafka.Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Errorf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Oh noes, there&#39;s a generic error creating the Producer! %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;())&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;defer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// For signalling termination from main to go-routine&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;chan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// For signalling that termination is done from go-routine to main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;chan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// For capturing errors from the go-routine&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errorChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;chan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Send a message using Produce()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#Producer.Produce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Build the message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Sprintf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;foo / %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Now&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Format&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;RFC1123Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)))}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Handle any events that we get&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// The `select` blocks until one of the `case` conditions&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// are met - therefore we run it in a Go Routine.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Events&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Look at the type of Event we&#39;ve received&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s a delivery report&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errorChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Sprintf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;**☠️ Failed to send message &#39;%v&#39; to topic &#39;%v&#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Err: %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;✅ Message &#39;%v&#39; delivered to topic &#39;%v&#39; (partition %d at offset %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Offset&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s an error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;em&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errorChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Sprintf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;**☠️ Uh oh, caught an error:&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;em&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s not anything we were expecting&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errorChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Sprintf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;**Got an event that&#39;s not a Message or Error 👻&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errorChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Produce the message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Produce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errorChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Sprintf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Darn, there&#39;s an error producing the message! %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;())&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Flush the Producer queue&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1000&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Flush&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errorChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Sprintf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;⚠️ Failed to flush all messages after %d milliseconds. %d message(s) remain&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;✨ All messages flushed from the queue&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Stop listening to events and close the producer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// We&#39;re ready to finish&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// wait for go-routine to terminate&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Now we can get ready to exit&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;-=-=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Wrapping up…&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// When we&#39;re ready to return, check if the go routine has sent errors&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Note that we&#39;re relying on the Go routine to close the channel, otherwise&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// we deadlock.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// If there are no errors then the channel is simply closed and we read no values.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;done&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;done&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;o&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errorChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;o&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// o is false if we&#39;ve read all the values and the channel is closed&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// If that&#39;s the case, then we&#39;re done here&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;done&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// We&#39;ve read a value so let&#39;s concatenate it with the others&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// that we&#39;ve got&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// If we&#39;ve got any errors, then return an error to the caller&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;❌ … returning an error&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;errors&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;New&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// assuming everything has gone ok return no error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;👋 … and we&#39;re done.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_more_episodes&#34;&gt;📺 More Episodes…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Kafka and Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e00-kafka-and-go/&#34;&gt;S02E00 - Kafka and Go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e01-my-first-kafka-go-producer/&#34;&gt;S02E01 - My First Kafka Go Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;S02E02 - Adding error handling to the Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e03-kafka-go-consumer-channel-based/&#34;&gt;S02E03 - Kafka Go Consumer (Channel-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e04-kafka-go-consumer-function-based/&#34;&gt;S02E04 - Kafka Go Consumer (Function-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e05-kafka-go-adminclient/&#34;&gt;S02E05 - Kafka Go AdminClient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e06-putting-the-producer-in-a-function-and-handling-errors-in-a-go-routine/&#34;&gt;S02E06 - Putting the Producer in a function and handling errors in a Go routine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/16/learning-golang-some-rough-notes-s02e07-splitting-go-code-into-separate-source-files-and-building-a-binary-executable/&#34;&gt;S02E07 - Splitting Go code into separate source files and building a binary executable&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;S01E00 - Background&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e01-pointers/&#34;&gt;S01E01 - Pointers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e02-slices/&#34;&gt;S01E02 - Slices&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e03-maps/&#34;&gt;S01E03 - Maps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e04-function-closures/&#34;&gt;S01E04 - Function Closures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/30/learning-golang-some-rough-notes-s01e05-interfaces/&#34;&gt;S01E05 - Interfaces&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e06-errors/&#34;&gt;S01E06 - Errors&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e07-readers/&#34;&gt;S01E07 - Readers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e08-images/&#34;&gt;S01E08 - Images&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e09-concurrency-channels-goroutines/&#34;&gt;S01E09 - Concurrency (Channels, Goroutines)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/&#34;&gt;S01E10 - Concurrency (Web Crawler)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Learning Golang (some rough notes) - S02E05 - Kafka Go AdminClient</title>
      <link>https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e05-kafka-go-adminclient/</link>
      <pubDate>2020-07-15</pubDate>
      
      <guid>https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e05-kafka-go-adminclient/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/07/IMG_5126.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Having ticked off the basics with an Apache Kafka &lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;producer&lt;/a&gt; and &lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e03-kafka-go-consumer-channel-based/&#34;&gt;consumer&lt;/a&gt; in Go, let&amp;#8217;s now check out the AdminClient. This is useful for checking out metadata about the cluster, creating topics, and stuff like that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_contexts&#34;&gt;Contexts&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To use some of the functions that the AdminClient provides I had to read up on &lt;a href=&#34;https://golang.org/pkg/context/&#34;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt;, which I&amp;#8217;d not encountered on my brief journey with &lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;Go so far&lt;/a&gt;. The tl;dr is that a context provides a clean way for functions to timeout or cancel their operation across function calls. Or to put it &lt;a href=&#34;https://golang.org/pkg/context/#pkg-overview&#34;&gt;another way&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Package context defines the Context type, which carries deadlines, cancellation signals, and other request-scoped values across API boundaries and between processes.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is what it looks like in operation. You define the context (in this with a timeout):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;context&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;time&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// …&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// …&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cancel&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WithTimeout&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Background&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Second&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;defer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cancel&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that you can also do it like this…&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WithTimeout&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Background&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Second&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;…but per the code comment in &lt;a href=&#34;https://golang.org/pkg/context/#WithDeadline&#34;&gt;the example given&lt;/a&gt; it&amp;#8217;s good practice to make sure &lt;code&gt;cancel&lt;/code&gt; is called as soon as the context is done with.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Another thing to note is the nice way to specify time periods in Go. Instead of having to check the API documentation each time as to whether you&amp;#8217;re specifying seconds, microseconds, etc, and then doing the necessary maths on the time period that you want to specify, you can instead just use human-friendly notation such as:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;5*time.Microsecond&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;30*time.Second&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, having defined the context, we pass it when invoking a function call that requires it, such as &lt;code&gt;ClusterID()&lt;/code&gt; in the AdminClient:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ClusterID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;More completely, the code looks something like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Get the ClusterID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ClusterID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Error getting ClusterID&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;✔️ ClusterID: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If the context times out then an error is returned:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;😢 Error getting ClusterID
	Error: context.deadlineExceededError context deadline exceeded&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that if you want to use the context in successive calls, the timeout does not reset on each use. So if you have something like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cancel&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WithTimeout&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Background&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Second&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;defer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cancel&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Call the first thing&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doSomething&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Call the second thing&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doSomethingElse&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The timeout of five seconds includes the execution of the second function. If you want to reset it in between then you&amp;#8217;d do this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cancel&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WithTimeout&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Background&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Second&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;defer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cancel&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Call the first thing&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doSomething&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Start the context timer again&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cancel&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WithTimeout&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Background&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Second&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Call the second thing&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doSomethingElse&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_adminclient&#34;&gt;AdminClient&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://docs.confluent.io/5.5.1/clients/confluent-kafka-go/index.html#AdminClient&#34;&gt;docs&lt;/a&gt; list comprehensively the functions available from the AdminClient. Here&amp;#8217;s a simple example that shows using some of them to list information about the cluster:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;package&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;context&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;fmt&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;time&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;gopkg.in/confluentinc/confluent-kafka-go.v1/kafka&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Create AdminClient instance&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#NewAdminClient&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Store the config&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ConfigMap&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;bootstrap.servers&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;localhost:9092&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Variable p holds the new AdminClient instance.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;NewAdminClient&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Make sure we close it when we&#39;re done&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;defer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Check for errors in creating the AdminClient&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Code&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ErrInvalidArg&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the AdminClient because you&#39;ve configured it wrong (code: %d)!&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;To see the configuration options, refer to https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the AdminClient (Kafka error code %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s not a kafka.Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Oh noes, there&#39;s a generic error creating the AdminClient! %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;())&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;✔️ Created AdminClient&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Create a context for use when calling some of these functions&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// This lets you set a variable timeout on invoking these calls&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// If the timeout passes then an error is returned.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cancel&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WithTimeout&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Background&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Second&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;defer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cancel&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Get the ClusterID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ClusterID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Error getting ClusterID&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;✔️ ClusterID: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Start the context timer again (otherwise it carries on from the original deadline)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cancel&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;WithTimeout&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Background&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Second&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Get the ControllerID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ControllerID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ctx&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Error getting ControllerID&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;✔️ ControllerID: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Get some metadata&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;md&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;GetMetadata&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Second&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;));&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Error getting cluster Metadata&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Print the originating broker info&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;✔️ Metadata [Originating broker]&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;md&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;OriginatingBroker&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;[ID %d] %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Host&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Print the brokers&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;✔️ Metadata [brokers]&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;range&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;md&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Brokers&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;[ID %d] %v:%d&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ID&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Host&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Port&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Print the topics&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;✔️ Metadata [topics]&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;range&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;md&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topics&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;(%v partitions)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Partitions&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;👋 … and we&#39;re done.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The output looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;✔️ Created AdminClient
✔️ ClusterID: hukPYvRVTF2nU8efMXUq6g
✔️ ControllerID: 1
✔️ Metadata [Originating broker]
	[ID 1] localhost:9092/1
✔️ Metadata [brokers]
	[ID 1] localhost:9092
✔️ Metadata [topics]
	(5 partitions)	_kafka-connect-01-status
	(1 partitions)	ratings
	(1 partitions)	__confluent.support.metrics
	(25 partitions)	_kafka-connect-01-offsets
	(1 partitions)	_kafka-connect-01-configs
	(50 partitions)	__consumer_offsets


👋 … and we&#39;re done.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_more_episodes&#34;&gt;📺 More Episodes…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Kafka and Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e00-kafka-and-go/&#34;&gt;S02E00 - Kafka and Go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e01-my-first-kafka-go-producer/&#34;&gt;S02E01 - My First Kafka Go Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;S02E02 - Adding error handling to the Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e03-kafka-go-consumer-channel-based/&#34;&gt;S02E03 - Kafka Go Consumer (Channel-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e04-kafka-go-consumer-function-based/&#34;&gt;S02E04 - Kafka Go Consumer (Function-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e05-kafka-go-adminclient/&#34;&gt;S02E05 - Kafka Go AdminClient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e06-putting-the-producer-in-a-function-and-handling-errors-in-a-go-routine/&#34;&gt;S02E06 - Putting the Producer in a function and handling errors in a Go routine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/16/learning-golang-some-rough-notes-s02e07-splitting-go-code-into-separate-source-files-and-building-a-binary-executable/&#34;&gt;S02E07 - Splitting Go code into separate source files and building a binary executable&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;S01E00 - Background&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e01-pointers/&#34;&gt;S01E01 - Pointers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e02-slices/&#34;&gt;S01E02 - Slices&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e03-maps/&#34;&gt;S01E03 - Maps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e04-function-closures/&#34;&gt;S01E04 - Function Closures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/30/learning-golang-some-rough-notes-s01e05-interfaces/&#34;&gt;S01E05 - Interfaces&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e06-errors/&#34;&gt;S01E06 - Errors&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e07-readers/&#34;&gt;S01E07 - Readers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e08-images/&#34;&gt;S01E08 - Images&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e09-concurrency-channels-goroutines/&#34;&gt;S01E09 - Concurrency (Channels, Goroutines)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/&#34;&gt;S01E10 - Concurrency (Web Crawler)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Learning Golang (some rough notes) - S02E04 - Kafka Go Consumer (Function-based)</title>
      <link>https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e04-kafka-go-consumer-function-based/</link>
      <pubDate>2020-07-14</pubDate>
      
      <guid>https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e04-kafka-go-consumer-function-based/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/07/IMG_5126.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Last time I looked at creating my &lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e03-kafka-go-consumer-channel-based/&#34;&gt;first Apache Kafka consumer in Go&lt;/a&gt;, which used the now-deprecated channel-based consumer. Whilst idiomatic for Go, it has some issues which mean that the function-based consumer is recommended for use instead. So let&amp;#8217;s go and use it!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Instead of reading from the &lt;code&gt;Events()&lt;/code&gt; channel of the consumer, we read events using the &lt;a href=&#34;https://docs.confluent.io/5.5.1/clients/confluent-kafka-go/index.html#Consumer.Poll&#34;&gt;&lt;code&gt;Poll()&lt;/code&gt;&lt;/a&gt; function with a timeout. The way we handle events (a &lt;code&gt;switch&lt;/code&gt; based on their &lt;code&gt;type&lt;/code&gt;) is the same:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

    &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s a message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

    &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PartitionEOF&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// We&#39;ve finished reading messages on this partition so let&#39;s wrap up&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We also remove the Go routine and its slightly more complex execution logic in which channels were used to indicate when to terminate processing, and instead just use a &lt;code&gt;for&lt;/code&gt; loop:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// do polling until we&#39;re done&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just like in the previous example, when we receive a &lt;code&gt;PartitionEOF&lt;/code&gt; we then go to exit (since we make the BIG assumption that we&amp;#8217;re only consuming from one partition)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The full code looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;package&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;fmt&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;gopkg.in/confluentinc/confluent-kafka-go.v1/kafka&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;ratings&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Create Consumer instance&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#NewConsumer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Store the config&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ConfigMap&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;bootstrap.servers&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;localhost:9092&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;group.id&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;             &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;rmoff_learning_go_foo&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;enable.partition.eof&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Variable p holds the new Consumer instance.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;NewConsumer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Check for errors in creating the Consumer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Code&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ErrInvalidArg&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the Consumer because you&#39;ve configured it wrong (code: %d)!&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;To see the configuration options, refer to https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the Consumer (Kafka error code %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s not a kafka.Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Oh noes, there&#39;s a generic error creating the Consumer! %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;())&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Subscribe to the topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Subscribe&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;☠️ Uh oh, there was an error subscribing to the topic :&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Poll&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1000&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// the Poll timed out and we got nothin&#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;……&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;continue&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// The poll pulled an event, let&#39;s now&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// look at the type of Event we&#39;ve received&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s a message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;✅ Message &#39;%v&#39; received from topic &#39;%v&#39; (partition %d at offset %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Offset&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PartitionEOF&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// We&#39;ve finished reading messages on this partition so let&#39;s wrap up&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// n.b. this is a BIG assumption that we are only consuming from one partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;pe&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PartitionEOF&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;🌆 Got to the end of partition %v on topic %v at offset %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;pe&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;pe&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;pe&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Offset&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;OffsetsCommitted&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;continue&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s an error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;em&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;☠️ Uh oh, caught an error:&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;em&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s not anything we were expecting&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;Got an event that&#39;s not a Message, Error, or PartitionEOF 👻&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;👋 … and we&#39;re done. Closing the consumer and exiting.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Now we can exit&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I run it using a &lt;a href=&#34;https://rmoff.net/code/go/kafka/consumer02/docker-compose.yml&#34;&gt;Docker Compose&lt;/a&gt; which also runs a data generator in Kafka Connect populating a topic for the consumer to read from. When I shut down Kafka Connect the data generator stops, the consumer reads to the end of the topic, and exits:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;……
……
……
✅ Message &#39;Struct{ip=122.249.79.233,userid=20,remote_user=-,time=81,_time=81,request=GET /site/login.html HTTP/1.1,status=405,bytes=1289,referrer=-,agent=Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)}&#39; received from topic &#39;ratings&#39; (partition 0 at offset 2522)
✅ Message &#39;Struct{ip=222.245.174.248,userid=14,remote_user=-,time=91,_time=91,request=GET /index.html HTTP/1.1,status=404,bytes=278,referrer=-,agent=Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)}&#39; received from topic &#39;ratings&#39; (partition 0 at offset 2523)
🌆 Got to the end of partition 0 on topic ratings at offset 2524
👋 … and we&#39;re done. Closing the consumer and exiting.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_more_episodes&#34;&gt;📺 More Episodes…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Kafka and Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e00-kafka-and-go/&#34;&gt;S02E00 - Kafka and Go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e01-my-first-kafka-go-producer/&#34;&gt;S02E01 - My First Kafka Go Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;S02E02 - Adding error handling to the Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e03-kafka-go-consumer-channel-based/&#34;&gt;S02E03 - Kafka Go Consumer (Channel-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e04-kafka-go-consumer-function-based/&#34;&gt;S02E04 - Kafka Go Consumer (Function-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e05-kafka-go-adminclient/&#34;&gt;S02E05 - Kafka Go AdminClient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e06-putting-the-producer-in-a-function-and-handling-errors-in-a-go-routine/&#34;&gt;S02E06 - Putting the Producer in a function and handling errors in a Go routine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/16/learning-golang-some-rough-notes-s02e07-splitting-go-code-into-separate-source-files-and-building-a-binary-executable/&#34;&gt;S02E07 - Splitting Go code into separate source files and building a binary executable&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;S01E00 - Background&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e01-pointers/&#34;&gt;S01E01 - Pointers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e02-slices/&#34;&gt;S01E02 - Slices&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e03-maps/&#34;&gt;S01E03 - Maps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e04-function-closures/&#34;&gt;S01E04 - Function Closures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/30/learning-golang-some-rough-notes-s01e05-interfaces/&#34;&gt;S01E05 - Interfaces&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e06-errors/&#34;&gt;S01E06 - Errors&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e07-readers/&#34;&gt;S01E07 - Readers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e08-images/&#34;&gt;S01E08 - Images&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e09-concurrency-channels-goroutines/&#34;&gt;S01E09 - Concurrency (Channels, Goroutines)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/&#34;&gt;S01E10 - Concurrency (Web Crawler)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    <item>
      <title>Learning Golang (some rough notes) - S02E03 - Kafka Go Consumer (Channel-based)</title>
      <link>https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e03-kafka-go-consumer-channel-based/</link>
      <pubDate>2020-07-14</pubDate>
      
      <guid>https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e03-kafka-go-consumer-channel-based/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/07/IMG_5126.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Having written my first &lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e01-my-first-kafka-go-producer/&#34;&gt;Kafka producer in Go&lt;/a&gt;, and even &lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;added error handling to it&lt;/a&gt;, the next step was to write a consumer. It follows closely the pattern of &lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;Producer code I finished up with previously&lt;/a&gt;, using the channel-based approach for the &lt;a href=&#34;https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#Consumer&#34;&gt;Consumer&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create Consumer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Subscribe to topic&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read messages from the channel as the consumer receives them&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When we&amp;#8217;ve read all messages, exit&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
I&amp;#8217;ve used the channel-based consumer because it fitted the most neatly with my existing code that I was adapting to work as a consumer, and the general concept of consuming from a channel also felt quite idiomatic. &lt;em&gt;However&lt;/em&gt;, if you consult the &lt;a href=&#34;https://github.com/confluentinc/confluent-kafka-go#channel-based-consumer-deprecated&#34;&gt;client GitHub repo&lt;/a&gt; you&amp;#8217;ll see that the channel-based consumer is marked as deprecated, and there is a &lt;a href=&#34;https://github.com/confluentinc/confluent-kafka-go/blob/e266799b3bfbbaf8230a9a6f71e8c92f0e67341b/kafka/consumer.go#L369-L374&#34;&gt;note in the code&lt;/a&gt; as to why this is. I&amp;#8217;ll take a look in the next article at using the function-based consumer instead :)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The main thing here is that we use the &lt;code&gt;.Events()&lt;/code&gt; channel for which there&amp;#8217;s a Go Routine, and so this pattern to wait until we&amp;#8217;ve finished with it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// For signalling termination from main to go-routine&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;chan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// For signalling that termination is done from go-routine to main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;chan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

            &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// channels that we&#39;re listening to&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

        &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
            &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

    &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// …&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// We&#39;re ready to finish&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// wait for go-routine to terminate&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Now we can exit&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To know when to finish, we listen for &lt;code&gt;PartitionEOF&lt;/code&gt; events, which we need to enable when creating the consumer&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;enable.partition.eof&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When we receive one we&amp;#8217;ll assume there&amp;#8217;s just the single partition (BIG assumption) and set the &lt;code&gt;doTerm&lt;/code&gt; to true to break out of the &lt;code&gt;for&lt;/code&gt; loop in the Go routine which then closes the &lt;code&gt;doneChan&lt;/code&gt; and the program can exit&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PartitionEOF&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// We&#39;ve finished reading messages on this partition so let&#39;s wrap up&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;pe&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PartitionEOF&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;🌆 Got to the end of partition %v on topic %v at offset %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;pe&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;pe&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;pe&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Offset&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The full code looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;package&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;fmt&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;gopkg.in/confluentinc/confluent-kafka-go.v1/kafka&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;ratings&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Create Consumer instance&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#NewConsumer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Store the config&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ConfigMap&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;bootstrap.servers&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;localhost:9092&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;go.events.channel.enable&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;group.id&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;                 &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;rmoff_learning_go&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;enable.partition.eof&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Variable p holds the new Consumer instance.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;NewConsumer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;cm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Check for errors in creating the Consumer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Code&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ErrInvalidArg&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the Consumer because you&#39;ve configured it wrong (code: %d)!&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;To see the configuration options, refer to https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the Consumer (Kafka error code %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s not a kafka.Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Oh noes, there&#39;s a generic error creating the Consumer! %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;())&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// For signalling termination from main to go-routine&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;chan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// For signalling that termination is done from go-routine to main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;chan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Subscribe to the topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Subscribe&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;☠️ Uh oh, there was an error subscribing to the topic :&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Handle the events that we get&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// The `select` blocks until one of the `case` conditions&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// are met - therefore we run it in a Go Routine.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Events&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Look at the type of Event we&#39;ve received&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s a message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;✅ Message &#39;%v&#39; received from topic &#39;%v&#39; (partition %d at offset %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Offset&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PartitionEOF&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// We&#39;ve finished reading messages on this partition so let&#39;s wrap up&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// n.b. this is a BIG assumption that we are only consuming from one partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;pe&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;PartitionEOF&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;🌆 Got to the end of partition %v on topic %v at offset %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;pe&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;pe&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;pe&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Offset&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;OffsetsCommitted&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;continue&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s an error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;em&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;☠️ Uh oh, caught an error:&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;em&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s not anything we were expecting&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;Got an event that&#39;s not a Message, Error, or PartitionEOF 👻&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// We&#39;ll wait for the Go routine to exit, which will happen once we&#39;ve read all the messages on the topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Now we can exit&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/07/consumer01.gif&#34; alt=&#34;consumer01&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I run it using a &lt;a href=&#34;https://rmoff.net/code/go/kafka/consumer01/docker-compose.yml&#34;&gt;Docker Compose&lt;/a&gt; which also runs a data generator in Kafka Connect populating a topic for the consumer to read from. When I shut down Kafka Connect the data generator stops, the consumer reads to the end of the topic, and exits:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;…
✅ Message &#39;Struct{ip=233.245.174.233,userid=13,remote_user=-,time=23811,_time=23811,request=GET /index.html HTTP/1.1,status=407,bytes=4006,referrer=-,agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36}&#39; received from topic &#39;ratings&#39; (partition 0 at offset 2381)
✅ Message &#39;Struct{ip=122.145.8.244,userid=9,remote_user=-,time=23821,_time=23821,request=GET /images/track.png HTTP/1.1,status=302,bytes=4006,referrer=-,agent=Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)}&#39; received from topic &#39;ratings&#39; (partition 0 at offset 2382)
✅ Message &#39;Struct{ip=111.145.8.144,userid=38,remote_user=-,time=23831,_time=23831,request=GET /site/user_status.html HTTP/1.1,status=406,bytes=4096,referrer=-,agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36}&#39; received from topic &#39;ratings&#39; (partition 0 at offset 2383)
✅ Message &#39;Struct{ip=222.245.174.248,userid=36,remote_user=-,time=23841,_time=23841,request=GET /site/user_status.html HTTP/1.1,status=200,bytes=4096,referrer=-,agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36}&#39; received from topic &#39;ratings&#39; (partition 0 at offset 2384)
🌆 Got to the end of partition 0 on topic ratings at offset 2385&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_more_episodes&#34;&gt;📺 More Episodes…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Kafka and Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e00-kafka-and-go/&#34;&gt;S02E00 - Kafka and Go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e01-my-first-kafka-go-producer/&#34;&gt;S02E01 - My First Kafka Go Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;S02E02 - Adding error handling to the Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e03-kafka-go-consumer-channel-based/&#34;&gt;S02E03 - Kafka Go Consumer (Channel-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e04-kafka-go-consumer-function-based/&#34;&gt;S02E04 - Kafka Go Consumer (Function-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e05-kafka-go-adminclient/&#34;&gt;S02E05 - Kafka Go AdminClient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e06-putting-the-producer-in-a-function-and-handling-errors-in-a-go-routine/&#34;&gt;S02E06 - Putting the Producer in a function and handling errors in a Go routine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/16/learning-golang-some-rough-notes-s02e07-splitting-go-code-into-separate-source-files-and-building-a-binary-executable/&#34;&gt;S02E07 - Splitting Go code into separate source files and building a binary executable&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;S01E00 - Background&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e01-pointers/&#34;&gt;S01E01 - Pointers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e02-slices/&#34;&gt;S01E02 - Slices&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e03-maps/&#34;&gt;S01E03 - Maps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e04-function-closures/&#34;&gt;S01E04 - Function Closures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/30/learning-golang-some-rough-notes-s01e05-interfaces/&#34;&gt;S01E05 - Interfaces&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e06-errors/&#34;&gt;S01E06 - Errors&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e07-readers/&#34;&gt;S01E07 - Readers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e08-images/&#34;&gt;S01E08 - Images&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e09-concurrency-channels-goroutines/&#34;&gt;S01E09 - Concurrency (Channels, Goroutines)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/&#34;&gt;S01E10 - Concurrency (Web Crawler)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Learning Golang (some rough notes) - S02E02 - Adding error handling to the Producer</title>
      <link>https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/</link>
      <pubDate>2020-07-10</pubDate>
      
      <guid>https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/07/IMG_5126.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I looked &lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e01-my-first-kafka-go-producer/&#34;&gt;last time&lt;/a&gt; at the very bare basics of writing a Kafka producer using Go. It worked, but only with everything lined up and pointing the right way. There was no error handling of any sorts. Let&amp;#8217;s see about fixing this now.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_a_bit_of_code_tidying&#34;&gt;A bit of code tidying&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To make the code more readable to me, I split out the configuration into a new variable that&amp;#8217;s then passed to the &lt;code&gt;NewProducer&lt;/code&gt;, so instead of the more compact but possibly less readable&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;NewProducer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ConfigMap&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;bootstrap.servers&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;localhost:9092&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ConfigMap&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;boostrap.servers&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;localhost:9092&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;NewProducer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_catching_errors_from_newproducer&#34;&gt;Catching errors from &lt;code&gt;NewProducer()&lt;/code&gt;&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Instead of &lt;code&gt;p, &lt;em&gt;&lt;/code&gt; when invoking &lt;code&gt;NewProducer&lt;/code&gt; (the &lt;code&gt;&lt;/em&gt;&lt;/code&gt; denoting an empty placeholder variable), we supply a variable into which the error can be stored:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;NewProducer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we can check it and report back if there&amp;#8217;s a problem:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢Oh noes, there&#39;s an error creating the Producer! %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// do producing stuff&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If I make a deliberate mistake so that the &lt;code&gt;NewProducer&lt;/code&gt; returns an error we get this&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;😢 Oh noes, there&#39;s an error creating the Producer! No such configuration property: &#34;boostrap.servers&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_be_assertive&#34;&gt;Be Assertive!&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can take this a step further and look at the type of error that&amp;#8217;s returned. Whilst &lt;code&gt;e&lt;/code&gt; is a generic interface for holding an error, we can try casting it to a &lt;code&gt;kafka.Error&lt;/code&gt;. Why would we want to do this? Well, &lt;code&gt;kafka.Error&lt;/code&gt; exposes &lt;a href=&#34;https://github.com/confluentinc/confluent-kafka-go/blob/master/kafka/error.go#L35-L41&#34;&gt;properties&lt;/a&gt; including an &lt;a href=&#34;https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#ErrorCode&#34;&gt;ErrorCode&lt;/a&gt; that describes the type of error. From that code we can handle the error in a more useful way than just dumping it to the screen. For example, if it&amp;#8217;s an error about configuration properties (as in the example above) we could tell the user where to find the reference information for this; but including that in an error to the user if it&amp;#8217;s &lt;em&gt;not&lt;/em&gt; a problem in this area would be redundant (and possibly confusing).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To cast it to a &lt;code&gt;kafka.Error&lt;/code&gt; we use a &lt;a href=&#34;https://tour.golang.org/methods/15&#34;&gt;type assertion&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We also check for success when we do it (just in case it&amp;#8217;s not actually a &lt;code&gt;kafka.Error&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// it&#39;s a kafka.Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// it&#39;s an error, but not a kafka.Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once we&amp;#8217;ve established that it&amp;#8217;s a &lt;code&gt;kafka.Error&lt;/code&gt; we can use the &lt;code&gt;Code()&lt;/code&gt; function to access the &lt;code&gt;ErrorCode&lt;/code&gt; and handle it with a &lt;code&gt;switch&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Code&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ErrInvalidArg&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
            &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the producer because you&#39;ve configured it wrong (code: %d)!&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;To see the configuration options, refer to https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
            &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the producer (Kafka error code %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s not a kafka.Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Oh noes, there&#39;s a generic error creating the Producer! %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;())&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So now the same mistake as before in configuring &lt;code&gt;bootstrap.servers&lt;/code&gt; is caught and reported like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;😢 Can&#39;t create the producer because you&#39;ve configured it wrong (code: -186)!
	No such configuration property: &#34;boostrap.servers&#34;

To see the configuration options, refer to https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_handling_producer_errors&#34;&gt;Handling Producer Errors&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When it comes to the &lt;code&gt;Produce&lt;/code&gt; I&amp;#8217;ve done the same as above - split out the creation of the message into a new variable for clarity, and added a check for error:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Build the message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;Hello world&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Produce the message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Produce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Darn, there&#39;s an error producing the message! %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;())&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But if I kill my Kafka broker and run my code, I don&amp;#8217;t get an error. Why not? Because if you look at the &lt;a href=&#34;https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#Producer.Produce&#34;&gt;documentation for &lt;code&gt;Produce&lt;/code&gt;&lt;/a&gt; you&amp;#8217;ll see that it says&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is an asynchronous call that enqueues the message on the internal transmit queue, thus returning immediately&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So all we&amp;#8217;re doing is &#34;fire and forget&#34;. Put it on an internal queue, and we&amp;#8217;re done. We still don&amp;#8217;t know if it was delivered.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_producer_events&#34;&gt;Producer Events&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since the Producer is called asychronously, it uses Go &lt;a href=&#34;https://gobyexample.com/channels&#34;&gt;Channels&lt;/a&gt; to provide events back to the calling application about what&amp;#8217;s going on. These can be of different types, covering both errors, and the status of messages that have been sent for producing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#Error&#34;&gt;Error&lt;/a&gt; events contain … errors ;-)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#Message&#34;&gt;Message&lt;/a&gt; events contain information about messages that have been sent for producing, including whether it worked or not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can consume these events in two different ways:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Poll the producer&amp;#8217;s &lt;code&gt;Events()&lt;/code&gt; channel and triage by type&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a dedicated delivery report channel, and poll &lt;code&gt;Events()&lt;/code&gt; for errors only&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here&amp;#8217;s an example of the first option, in which we use a &lt;a href=&#34;https://gobyexample.com/goroutines&#34;&gt;Go Routine&lt;/a&gt; to listen to all events and handle them based on type:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// The `select` blocks until one of the `case` conditions&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// are met - therefore we run it in a Go Routine.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
            &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Events&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Look at the type of Event we&#39;ve received&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

                &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                    &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s a delivery report&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                    &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                        &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;☠️ Failed to send message &#39;%v&#39; to topic &#39;%v&#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Err: %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                            &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                            &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                            &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                        &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;✅ Message &#39;%v&#39; delivered to topic &#39;%v&#39; (partition %d at offset %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                            &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                            &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                            &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                            &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Offset&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

                &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                    &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s an error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;em&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;☠️ Uh oh, caught an error:&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;em&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                    &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s not anything we were expecting&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
                    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;Got an event that&#39;s not a Message or Error 👻&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

                &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now when we produce a message successfully we receive a &lt;code&gt;kafka.Message&lt;/code&gt; with a &lt;code&gt;nil&lt;/code&gt; value in &lt;code&gt;TopicPartition.Error&lt;/code&gt; and the offset of the produced message in &lt;code&gt;TopicPartition.Offset&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;✅ Message &#39;Hello world&#39; delivered to topic &#39;test_topic_02&#39; (partition 0 at offset 0)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And if there&amp;#8217;s a problem we get full details of it&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;☠️ Uh oh, caught an error:
	foobar:9092/1: Failed to resolve &#39;foobar:9092&#39;: nodename nor servname provided, or not known (after 64ms in state CONNECT)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_phantom_events&#34;&gt;Phantom events&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you run the code as-is you&amp;#8217;ll notice you get this&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;✅&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;&#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Hello&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;world&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;&#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;delivered&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;&#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;test_topic_02&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;&#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;at&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;offset&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;✨&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;All&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;messages&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;flushed&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;the&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;queue&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Got&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;an&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;that&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;&#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;not&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;or&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;👻&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Got&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;an&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;that&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;&#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;not&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;or&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;👻&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Got&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;an&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;that&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;&#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;not&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;or&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;👻&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Got&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;an&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;that&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;&#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;not&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;or&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;👻&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Got&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;an&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;that&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;&#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;not&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;or&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;👻&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After the &lt;code&gt;Close()&lt;/code&gt; is called, there are still events being consumed by our Go Routine event handler. We don&amp;#8217;t want to be doing this (if the Producer is closed, then its &lt;code&gt;Events()&lt;/code&gt; channel is meaningless), so use this pattern (inspired by &lt;a href=&#34;https://github.com/confluentinc/confluent-kafka-go/blob/master/examples/idempotent_producer_example/idempotent_producer_example.go#L164&#34;&gt;this code&lt;/a&gt;) to avoid it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// For signalling termination from main to go-routine&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;chan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// For signalling that termination is done from go-routine to main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;chan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

            &lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// channels that we&#39;re listening to&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

        &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
            &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
        &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

    &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// …&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// We&#39;re ready to finish&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// wait for go-routine to terminate&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Now we can exit&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_make_sure_you_flush&#34;&gt;Make sure you &lt;code&gt;Flush()&lt;/code&gt;&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once we&amp;#8217;ve sent our message to the Producer, we get control back straight away, because it&amp;#8217;s an asynchronous process. If we don&amp;#8217;t put anything else in place the code will run on through to the &lt;code&gt;Close()&lt;/code&gt; and exit. We want to make sure we&amp;#8217;ve sent all the messages successfully - or not. To do this we use the &lt;code&gt;Flush()&lt;/code&gt; function with a timeout of how long we&amp;#8217;ll wait before considering sending messages to have failed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Flush the Producer queue&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Flush&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;10000&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;⚠️ Failed to flush all messages after 10 seconds. %d message(s) remain&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
    &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;✨ All messages flushed from the queue&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With this in place we get a confirmation on exit of success:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;✨ All messages flushed from the queue&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;or failure:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;⚠️ Failed to flush all messages after 10 seconds. 1 message(s) remain&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_finished_result&#34;&gt;The finished result&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;package&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;fmt&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;gopkg.in/confluentinc/confluent-kafka-go.v1/kafka&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// The topic is passed as a pointer to the Producer, so we can&#39;t&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// use a hard-coded literal. And a variable is a nicer way to do&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// it anyway ;-)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;test_topic_02&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Create Producer instance&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#NewProducer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Store the config&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ConfigMap&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;bootstrap.servers&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;localhost:9092&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Variable p holds the new Producer instance.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;NewProducer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Check for errors in creating the Producer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ok&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ke&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Code&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ErrInvalidArg&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the producer because you&#39;ve configured it wrong (code: %d)!&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;To see the configuration options, refer to https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Can&#39;t create the producer (Kafka error code %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Error: %v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ec&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s not a kafka.Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Oh noes, there&#39;s a generic error creating the Producer! %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;())&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// For signalling termination from main to go-routine&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;chan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// For signalling that termination is done from go-routine to main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;chan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Send a message using Produce()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#Producer.Produce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Build the message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;Hello world&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Handle any events that we get&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// The `select` blocks until one of the `case` conditions&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// are met - therefore we run it in a Go Routine.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Events&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Look at the type of Event we&#39;ve received&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s a delivery report&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;☠️ Failed to send message &#39;%v&#39; to topic &#39;%v&#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Err: %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
							&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;✅ Message &#39;%v&#39; delivered to topic &#39;%v&#39; (partition %d at offset %d)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
								&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;km&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Offset&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s an error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;em&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;☠️ Uh oh, caught an error:&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;em&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// It&#39;s not anything we were expecting&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
						&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;Got an event that&#39;s not a Message or Error 👻&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\t&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;%v&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ev&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

					&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
				&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;case&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
					&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doTerm&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

				&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Produce the message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Produce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;😢 Darn, there&#39;s an error producing the message! %v&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;())&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Flush the Producer queue&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;10000&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Flush&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Printf&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;⚠️ Failed to flush all messages after %d milliseconds. %d message(s) remain&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;✨ All messages flushed from the queue&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Stop listening to events and close the producer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// We&#39;re ready to finish&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;termChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// wait for go-routine to terminate&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;doneChan&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Now we can exit&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_more_episodes&#34;&gt;📺 More Episodes…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Kafka and Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e00-kafka-and-go/&#34;&gt;S02E00 - Kafka and Go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e01-my-first-kafka-go-producer/&#34;&gt;S02E01 - My First Kafka Go Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;S02E02 - Adding error handling to the Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e03-kafka-go-consumer-channel-based/&#34;&gt;S02E03 - Kafka Go Consumer (Channel-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e04-kafka-go-consumer-function-based/&#34;&gt;S02E04 - Kafka Go Consumer (Function-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e05-kafka-go-adminclient/&#34;&gt;S02E05 - Kafka Go AdminClient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e06-putting-the-producer-in-a-function-and-handling-errors-in-a-go-routine/&#34;&gt;S02E06 - Putting the Producer in a function and handling errors in a Go routine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/16/learning-golang-some-rough-notes-s02e07-splitting-go-code-into-separate-source-files-and-building-a-binary-executable/&#34;&gt;S02E07 - Splitting Go code into separate source files and building a binary executable&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;S01E00 - Background&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e01-pointers/&#34;&gt;S01E01 - Pointers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e02-slices/&#34;&gt;S01E02 - Slices&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e03-maps/&#34;&gt;S01E03 - Maps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e04-function-closures/&#34;&gt;S01E04 - Function Closures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/30/learning-golang-some-rough-notes-s01e05-interfaces/&#34;&gt;S01E05 - Interfaces&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e06-errors/&#34;&gt;S01E06 - Errors&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e07-readers/&#34;&gt;S01E07 - Readers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e08-images/&#34;&gt;S01E08 - Images&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e09-concurrency-channels-goroutines/&#34;&gt;S01E09 - Concurrency (Channels, Goroutines)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/&#34;&gt;S01E10 - Concurrency (Web Crawler)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Learning Golang (some rough notes) - S02E01 - My First Kafka Go Producer</title>
      <link>https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e01-my-first-kafka-go-producer/</link>
      <pubDate>2020-07-08</pubDate>
      
      <guid>https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e01-my-first-kafka-go-producer/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/07/IMG_5126.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/07/myfirstkafkaproducer.png&#34; alt=&#34;My First Kafka Go Producer&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To install the Confluent Go client you need to run&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;gopkg&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;confluentinc&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;confluent&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;v1&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With that done, we can run our first Kafka Go code! Make sure you&amp;#8217;ve got a local Kafka broker running first, and then give this a spin:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;package&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;gopkg.in/confluentinc/confluent-kafka-go.v1/kafka&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;func&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// The topic is passed as a pointer to the Producer, so we can&#39;t&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// use a hard-coded literal. And a variable is a nicer way to do&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// it anyway ;-)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;test_topic&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Create Producer instance&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#NewProducer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Variable p holds the new Producer instance. There&#39;s a bunch of config that we _could_&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// specify here but the only essential one is the bootstrap server.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Note that we ignore any error that might happen, by passing _ as the second variable&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// on the left-hand side. This is, obviously, a terrible idea.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;NewProducer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ConfigMap&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;bootstrap.servers&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;localhost:9092&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;})&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Send a message using Produce()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// https://docs.confluent.io/current/clients/confluent-kafka-go/index.html#Producer.Produce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Only essential values are specified here - the topic, partition, and value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// There is NO handling of errors, timeouts, etc - we just fire &amp;amp; forget this message.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Did it work? ¯\_(ツ)_/¯&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Produce&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TopicPartition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Topic&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;topic&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
			&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Partition&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
		&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #445588;font-weight: bold&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&#34;Hello world&#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)},&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;

	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// --&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;// Close the producer&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
	&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Close&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you run this, you get a message written to a Kafka topic!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/07/kafkacat01.gif&#34; alt=&#34;kafkacat01&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_dont_try_this_at_home&#34;&gt;Don&amp;#8217;t try this at home!&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Well, try it at home. But don&amp;#8217;t take it anywhere near &lt;em&gt;actual code&lt;/em&gt; that you need to write. As the comments in the code above show, there is &lt;strong&gt;NO&lt;/strong&gt; error handling, whatsoever. I&amp;#8217;m going to explore that in subsequent posts, but want to start at the very simplest example to start with here.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_ide_ftw&#34;&gt;IDE FTW&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;(WTF? &lt;a href=&#34;https://en.wikipedia.org/wiki/Integrated_development_environment&#34;&gt;IDE&lt;/a&gt; &lt;a href=&#34;https://www.yourdictionary.com/ftw&#34;&gt;FTW&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The VS Code environment is nice and helpful for writing Go and brings in function definitions etc&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/07/vscode02.png&#34; alt=&#34;vscode02&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can press Ctrl and click on a function or type and it will take you through to the definition, which is often quicker than looking up the API documentation&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2020/07/vscode03.gif&#34; alt=&#34;vscode03&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_more_episodes&#34;&gt;📺 More Episodes…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Kafka and Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e00-kafka-and-go/&#34;&gt;S02E00 - Kafka and Go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e01-my-first-kafka-go-producer/&#34;&gt;S02E01 - My First Kafka Go Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;S02E02 - Adding error handling to the Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e03-kafka-go-consumer-channel-based/&#34;&gt;S02E03 - Kafka Go Consumer (Channel-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e04-kafka-go-consumer-function-based/&#34;&gt;S02E04 - Kafka Go Consumer (Function-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e05-kafka-go-adminclient/&#34;&gt;S02E05 - Kafka Go AdminClient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e06-putting-the-producer-in-a-function-and-handling-errors-in-a-go-routine/&#34;&gt;S02E06 - Putting the Producer in a function and handling errors in a Go routine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/16/learning-golang-some-rough-notes-s02e07-splitting-go-code-into-separate-source-files-and-building-a-binary-executable/&#34;&gt;S02E07 - Splitting Go code into separate source files and building a binary executable&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;S01E00 - Background&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e01-pointers/&#34;&gt;S01E01 - Pointers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e02-slices/&#34;&gt;S01E02 - Slices&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e03-maps/&#34;&gt;S01E03 - Maps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e04-function-closures/&#34;&gt;S01E04 - Function Closures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/30/learning-golang-some-rough-notes-s01e05-interfaces/&#34;&gt;S01E05 - Interfaces&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e06-errors/&#34;&gt;S01E06 - Errors&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e07-readers/&#34;&gt;S01E07 - Readers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e08-images/&#34;&gt;S01E08 - Images&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e09-concurrency-channels-goroutines/&#34;&gt;S01E09 - Concurrency (Channels, Goroutines)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/&#34;&gt;S01E10 - Concurrency (Web Crawler)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Learning Golang (some rough notes) - S02E00 - Kafka and Go</title>
      <link>https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e00-kafka-and-go/</link>
      <pubDate>2020-07-08</pubDate>
      
      <guid>https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e00-kafka-and-go/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/07/IMG_5126.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the first leg of my journey with Go &lt;a href=&#34;https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/&#34;&gt;done&lt;/a&gt; (starting from a &lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;&lt;em&gt;very&lt;/em&gt; rudimentary base&lt;/a&gt;), the next step for me was to bring it into my current area of interest and work - Apache Kafka.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are several client libraries available. I&amp;#8217;m going to use the &lt;a href=&#34;https://docs.confluent.io/current/clients/go.html&#34;&gt;the Confluent Go client&lt;/a&gt; for now, and if I feel the need later on might explore the others. The &lt;a href=&#34;https://docs.confluent.io/current/clients/confluent-kafka-go/index.html&#34;&gt;API docs&lt;/a&gt; are comprehensive as are the &lt;a href=&#34;https://github.com/confluentinc/confluent-kafka-go/tree/master/examples&#34;&gt;example code snippets&lt;/a&gt; and some showing &lt;a href=&#34;https://github.com/confluentinc/examples/tree/5.5.1-post/clients/cloud/go&#34;&gt;how to use the Go client with Confluent Cloud&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here I&amp;#8217;m going to try and apply what I&amp;#8217;ve learnt so far to the Kafka client and build my understanding of it from the ground up (instead of blindly copy &amp;amp; pasting which is effective but less educational than taking something apart and reassembling it 😎).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_more_episodes&#34;&gt;📺 More Episodes…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Kafka and Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e00-kafka-and-go/&#34;&gt;S02E00 - Kafka and Go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e01-my-first-kafka-go-producer/&#34;&gt;S02E01 - My First Kafka Go Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;S02E02 - Adding error handling to the Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e03-kafka-go-consumer-channel-based/&#34;&gt;S02E03 - Kafka Go Consumer (Channel-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e04-kafka-go-consumer-function-based/&#34;&gt;S02E04 - Kafka Go Consumer (Function-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e05-kafka-go-adminclient/&#34;&gt;S02E05 - Kafka Go AdminClient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e06-putting-the-producer-in-a-function-and-handling-errors-in-a-go-routine/&#34;&gt;S02E06 - Putting the Producer in a function and handling errors in a Go routine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/16/learning-golang-some-rough-notes-s02e07-splitting-go-code-into-separate-source-files-and-building-a-binary-executable/&#34;&gt;S02E07 - Splitting Go code into separate source files and building a binary executable&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;S01E00 - Background&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e01-pointers/&#34;&gt;S01E01 - Pointers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e02-slices/&#34;&gt;S01E02 - Slices&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e03-maps/&#34;&gt;S01E03 - Maps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e04-function-closures/&#34;&gt;S01E04 - Function Closures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/30/learning-golang-some-rough-notes-s01e05-interfaces/&#34;&gt;S01E05 - Interfaces&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e06-errors/&#34;&gt;S01E06 - Errors&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e07-readers/&#34;&gt;S01E07 - Readers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e08-images/&#34;&gt;S01E08 - Images&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e09-concurrency-channels-goroutines/&#34;&gt;S01E09 - Concurrency (Channels, Goroutines)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/&#34;&gt;S01E10 - Concurrency (Web Crawler)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Learning Golang (some rough notes) - S01E10 - Concurrency (Web Crawler)</title>
      <link>https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/</link>
      <pubDate>2020-07-03</pubDate>
      
      <guid>https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/06/IMG_5277.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;👉 &lt;a href=&#34;https://tour.golang.org/concurrency/9&#34;&gt;A Tour of Go : sync.Mutex&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In the &lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e09-concurrency-channels-goroutines/&#34;&gt;previous exercise&lt;/a&gt; I felt my &lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;absence of a formal CompSci background&lt;/a&gt; with the introduction of Binary Sorted Trees, and now I am concious of it again with learning about mutex. I&amp;#8217;d &lt;em&gt;heard&lt;/em&gt; of them before, mostly when Oracle performance folk were talking about wait types - TIL it stands for &lt;code&gt;mutual exclusion&lt;/code&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What if we … want to make sure only one goroutine can access a variable at a time to avoid conflicts?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This concept is called mutual exclusion, and the conventional name for the data structure that provides it is &lt;strong&gt;mutex&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_exercise_web_crawler&#34;&gt;Exercise: Web Crawler&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;👉 &lt;a href=&#34;https://tour.golang.org/concurrency/10&#34;&gt;A Tour of Go : Exercise: Web Crawler&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This was quite a fun one once I wrapped my head around it. It gave a health dose of copy &amp;amp; paste advice in the form of the &lt;a href=&#34;https://tour.golang.org/concurrency/9&#34;&gt;previous example&lt;/a&gt; which I used to implement the first requirement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_dont_fetch_the_same_url_twice&#34;&gt;Don&amp;#8217;t fetch the same URL twice&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I created a &lt;code&gt;URLs&lt;/code&gt; struct to hold a map of URLs and a boolean of whether they have been crawled or not, and included a mutex so that it can be read and updated safely in concurrent execution&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;type&lt;/span&gt; URLs &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;struct&lt;/span&gt; {
	c   &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;map&lt;/span&gt;[&lt;span style=&#34;color:#b00040&#34;&gt;string&lt;/span&gt;]&lt;span style=&#34;color:#b00040&#34;&gt;bool&lt;/span&gt;
	mux sync.Mutex
}

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;var&lt;/span&gt; u URLs = URLs{c: &lt;span style=&#34;color:#008000&#34;&gt;make&lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;map&lt;/span&gt;[&lt;span style=&#34;color:#b00040&#34;&gt;string&lt;/span&gt;]&lt;span style=&#34;color:#b00040&#34;&gt;bool&lt;/span&gt;)}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;code&gt;URLs&lt;/code&gt; type implements two functions - one to check if a given URL has been crawled, and the other to mark it as such&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;func&lt;/span&gt; (u URLs) &lt;span style=&#34;color:#00f&#34;&gt;IsCrawled&lt;/span&gt;(url &lt;span style=&#34;color:#b00040&#34;&gt;string&lt;/span&gt;) &lt;span style=&#34;color:#b00040&#34;&gt;bool&lt;/span&gt; {
	fmt.&lt;span style=&#34;color:#00f&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;\n👀 Checking if %v has been crawled…&amp;#34;&lt;/span&gt;, url)
	u.mux.&lt;span style=&#34;color:#00f&#34;&gt;Lock&lt;/span&gt;()
	&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;defer&lt;/span&gt; u.mux.&lt;span style=&#34;color:#00f&#34;&gt;Unlock&lt;/span&gt;()
	&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; _, ok &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; u.c[url]; ok &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt; {
		fmt.&lt;span style=&#34;color:#00f&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;…it hasn&amp;#39;t\t&amp;#34;&lt;/span&gt;)
		&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;false&lt;/span&gt;
	}
	fmt.&lt;span style=&#34;color:#00f&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;…it has\t&amp;#34;&lt;/span&gt;)
	&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;
}

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;func&lt;/span&gt; (u URLs) &lt;span style=&#34;color:#00f&#34;&gt;Crawled&lt;/span&gt;(url &lt;span style=&#34;color:#b00040&#34;&gt;string&lt;/span&gt;) {
	u.mux.&lt;span style=&#34;color:#00f&#34;&gt;Lock&lt;/span&gt;()
	u.c[url] = &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt;
	u.mux.&lt;span style=&#34;color:#00f&#34;&gt;Unlock&lt;/span&gt;()
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To the main &lt;code&gt;Crawl&lt;/code&gt; function I then added calls to these functions and a conditional return:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;// Check if the URL has been crawled already
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; u.&lt;span style=&#34;color:#00f&#34;&gt;IsCrawled&lt;/span&gt;(url) &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt; {
    &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt;
}
fmt.&lt;span style=&#34;color:#00f&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;\n➡️ Crawling %v&amp;#34;&lt;/span&gt;, url)
body, urls, err &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; fetcher.&lt;span style=&#34;color:#00f&#34;&gt;Fetch&lt;/span&gt;(url)
&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;// Mark the URL as crawled (assumes that if there&amp;#39;s an error you don&amp;#39;t want to retry it)
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;u.&lt;span style=&#34;color:#00f&#34;&gt;Crawled&lt;/span&gt;(url)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As the comment notes, we assume that if a URL has been crawled, then we mark it as such, regardless of error status. If I was feeling adventurous I guess I could implement some kind of retry logic with incremental backoff…but I&amp;#8217;m keeping it simple for now :)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_fetch_urls_in_parallel&#34;&gt;Fetch URLs in parallel&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This one I assumed could be done by simply using a Go routine in calling the nested &lt;code&gt;Crawl&lt;/code&gt; functions. What it actually did was just fetch the first URL and exit&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&amp;gt; Checking &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/ has been crawled……it hasn&amp;#39;t	
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;	found: https:&lt;span style=&#34;color:#666&#34;&gt;//&lt;/span&gt;golang.org&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;The Go Programming Language&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Off to Google we went and found &lt;a href=&#34;https://stackoverflow.com/a/12250366/350613&#34;&gt;this answer on StackOverflow&lt;/a&gt; which showed the use of &lt;a href=&#34;https://golang.org/pkg/sync/#WaitGroup&#34;&gt;WaitGroups&lt;/a&gt; (nice &lt;a href=&#34;https://gobyexample.com/waitgroups&#34;&gt;example here&lt;/a&gt;). I ripped this off shamelessly into my code and it &lt;em&gt;almost&lt;/em&gt; worked…&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;&#34;&gt;👀&lt;/span&gt; Checking &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/ has been crawled……it hasn&amp;#39;t	
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;➡&lt;/span&gt;️ Crawling https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&amp;gt;&lt;span style=&#34;&#34;&gt;✅&lt;/span&gt; found: https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/ &amp;#34;The Go Programming Language&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;👀&lt;/span&gt; Checking &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/pkg/ has been crawled……it hasn&amp;#39;t	
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;➡���&lt;/span&gt; Crawling https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/pkg/
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&amp;gt;&lt;span style=&#34;&#34;&gt;✅&lt;/span&gt; found: https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/pkg/ &amp;#34;Packages&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;👀&lt;/span&gt; Checking &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/ has been crawled……it has	
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;👀&lt;/span&gt; Checking &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/cmd/ has been crawled……it hasn&amp;#39;t	
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;➡&lt;/span&gt;️ Crawling https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/cmd/
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&amp;gt;&lt;span style=&#34;&#34;&gt;⚠&lt;/span&gt;️ not found: https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/cmd/
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;👀&lt;/span&gt; Checking &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/pkg/fmt/ has been crawled……it hasn&amp;#39;t	
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;➡&lt;/span&gt;️ Crawling https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/pkg/fmt/
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&amp;gt;&lt;span style=&#34;&#34;&gt;✅&lt;/span&gt; found: https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/pkg/fmt/ &amp;#34;Package fmt&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;👀&lt;/span&gt; Checking &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/ has been crawled……it has	
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;👀&lt;/span&gt; Checking &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/pkg/ has been crawled……it has	
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;👀&lt;/span&gt; Checking &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/pkg/os/ has been crawled……it hasn&amp;#39;t	
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;➡&lt;/span&gt;️ Crawling https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/pkg/os/
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&amp;gt;&lt;span style=&#34;&#34;&gt;✅&lt;/span&gt; found: https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/pkg/os/ &amp;#34;Package os&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;&#34;&gt;👀&lt;/span&gt; Checking &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/ has been crawled……it has	
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;👀&lt;/span&gt; Checking &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; https:&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//golang.org/pkg/ has been crawled……it has	
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;👀&lt;/span&gt; Checking &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; https:&lt;span style=&#34;color:#666&#34;&gt;//&lt;/span&gt;golang.org&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;cmd&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; has been crawled&lt;span style=&#34;&#34;&gt;……&lt;/span&gt;it has	&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;but then threw a panic&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;panic: sync: negative WaitGroup counter

goroutine &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; [running]:
sync.(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;WaitGroup).&lt;span style=&#34;color:#00f&#34;&gt;Add&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;0xc0000a4010&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;0xffffffffffffffff&lt;/span&gt;)
	&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;usr&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;local&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;src&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;sync&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;waitgroup.&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;go&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;74&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0x1ec&lt;/span&gt;
sync.(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;WaitGroup).&lt;span style=&#34;color:#00f&#34;&gt;Done&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;0xc0000a4010&lt;/span&gt;)
	&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;usr&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;local&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;src&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;sync&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;waitgroup.&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;go&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;99&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0x34&lt;/span&gt;
main.&lt;span style=&#34;color:#00f&#34;&gt;Crawl&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;0x1100e8c&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;0x13&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;0x4&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;0x110fb60&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;0xc0000801b0&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;0xc0000a4010&lt;/span&gt;)
	&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;Users&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;rmoff&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;src&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;webcrawler&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;webcrawler.&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;go&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;68&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0x676&lt;/span&gt;
main.&lt;span style=&#34;color:#00f&#34;&gt;main&lt;/span&gt;()
	&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;Users&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;rmoff&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;go&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;src&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;webcrawler&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;webcrawler.&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;go&lt;/span&gt;:&lt;span style=&#34;color:#666&#34;&gt;73&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0x98&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A bit of Googling showed that &lt;code&gt;panic: sync: negative WaitGroup counter&lt;/code&gt; (as the error actually suggests) comes about because &lt;a href=&#34;https://golang.org/pkg/sync/#WaitGroup.Done&#34;&gt;Done&lt;/a&gt; had been called to decrease the number of WaitGroups and taken them below zero.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This happened because every execution of &lt;code&gt;Crawl&lt;/code&gt; includes&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;defer&lt;/span&gt; wg.&lt;span style=&#34;color:#00f&#34;&gt;Done&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;but the corresponding&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;wg.&lt;span style=&#34;color:#00f&#34;&gt;Add&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;was only added in the &lt;em&gt;nested&lt;/em&gt; call to &lt;code&gt;Crawl&lt;/code&gt; and not the initial invocation from &lt;code&gt;main()&lt;/code&gt;. Adding this into &lt;code&gt;main()&lt;/code&gt; then made everything work just great.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:block;width:100%;background-color:#e5e5e5&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;Crawl&lt;/span&gt;(url &lt;span style=&#34;color:#b00040&#34;&gt;string&lt;/span&gt;, depth &lt;span style=&#34;color:#b00040&#34;&gt;int&lt;/span&gt;, fetcher Fetcher, wg &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;sync.WaitGroup) {
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#e5e5e5&#34;&gt;	&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;defer&lt;/span&gt; wg.&lt;span style=&#34;color:#00f&#34;&gt;Done&lt;/span&gt;()
&lt;/span&gt;
	&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; depth &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; {
		&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt;
	}

	&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;// Check if the URL has been crawled already
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; u.&lt;span style=&#34;color:#00f&#34;&gt;IsCrawled&lt;/span&gt;(url) &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;true&lt;/span&gt; {
		&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt;
	}
	fmt.&lt;span style=&#34;color:#00f&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;\n➡️ Crawling %v&amp;#34;&lt;/span&gt;, url)
	body, urls, err &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; fetcher.&lt;span style=&#34;color:#00f&#34;&gt;Fetch&lt;/span&gt;(url)
	&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;// Mark the URL as crawled (assumes that if there&amp;#39;s an error you don&amp;#39;t want to retry it)
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;	u.&lt;span style=&#34;color:#00f&#34;&gt;Crawled&lt;/span&gt;(url)

	&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;nil&lt;/span&gt; {
		fmt.&lt;span style=&#34;color:#00f&#34;&gt;Println&lt;/span&gt;(err)
		&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;return&lt;/span&gt;
	}
	fmt.&lt;span style=&#34;color:#00f&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;\n\t-&amp;gt;✅ found: %s %q\n&amp;#34;&lt;/span&gt;, url, body)
	&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; _, z &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;range&lt;/span&gt; urls {
&lt;span style=&#34;display:block;width:100%;background-color:#e5e5e5&#34;&gt;		wg.&lt;span style=&#34;color:#00f&#34;&gt;Add&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#e5e5e5&#34;&gt;		&lt;span style=&#34;color:#00f&#34;&gt;Crawl&lt;/span&gt;(z, depth&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, fetcher, wg)
&lt;/span&gt;	}

}

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;main&lt;/span&gt;() {
&lt;span style=&#34;display:block;width:100%;background-color:#e5e5e5&#34;&gt;	wg &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;sync.WaitGroup{}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#e5e5e5&#34;&gt;	wg.&lt;span style=&#34;color:#00f&#34;&gt;Add&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#e5e5e5&#34;&gt;	&lt;span style=&#34;color:#00f&#34;&gt;Crawl&lt;/span&gt;(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;https://golang.org/&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;, fetcher, wg)
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#e5e5e5&#34;&gt;	wg.&lt;span style=&#34;color:#00f&#34;&gt;Wait&lt;/span&gt;()
&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_more_episodes&#34;&gt;📺 More Episodes…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Kafka and Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e00-kafka-and-go/&#34;&gt;S02E00 - Kafka and Go&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/08/learning-golang-some-rough-notes-s02e01-my-first-kafka-go-producer/&#34;&gt;S02E01 - My First Kafka Go Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/10/learning-golang-some-rough-notes-s02e02-adding-error-handling-to-the-producer/&#34;&gt;S02E02 - Adding error handling to the Producer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e03-kafka-go-consumer-channel-based/&#34;&gt;S02E03 - Kafka Go Consumer (Channel-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e04-kafka-go-consumer-function-based/&#34;&gt;S02E04 - Kafka Go Consumer (Function-based)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/14/learning-golang-some-rough-notes-s02e05-kafka-go-adminclient/&#34;&gt;S02E05 - Kafka Go AdminClient&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/15/learning-golang-some-rough-notes-s02e06-putting-the-producer-in-a-function-and-handling-errors-in-a-go-routine/&#34;&gt;S02E06 - Putting the Producer in a function and handling errors in a Go routine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/16/learning-golang-some-rough-notes-s02e07-splitting-go-code-into-separate-source-files-and-building-a-binary-executable/&#34;&gt;S02E07 - Splitting Go code into separate source files and building a binary executable&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learning Go&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;S01E00 - Background&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e01-pointers/&#34;&gt;S01E01 - Pointers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e02-slices/&#34;&gt;S01E02 - Slices&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e03-maps/&#34;&gt;S01E03 - Maps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e04-function-closures/&#34;&gt;S01E04 - Function Closures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/06/30/learning-golang-some-rough-notes-s01e05-interfaces/&#34;&gt;S01E05 - Interfaces&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e06-errors/&#34;&gt;S01E06 - Errors&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e07-readers/&#34;&gt;S01E07 - Readers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e08-images/&#34;&gt;S01E08 - Images&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e09-concurrency-channels-goroutines/&#34;&gt;S01E09 - Concurrency (Channels, Goroutines)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/&#34;&gt;S01E10 - Concurrency (Web Crawler)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Why JSON isn&#39;t the same as JSON Schema (Viewing Kafka messages bytes as hex)</title>
      <link>https://rmoff.net/2020/07/03/why-json-isnt-the-same-as-json-schema-viewing-kafka-messages-bytes-as-hex/</link>
      <pubDate>2020-07-03</pubDate>
      
      <guid>https://rmoff.net/2020/07/03/why-json-isnt-the-same-as-json-schema-viewing-kafka-messages-bytes-as-hex/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2020/05/IMG_4466.jpeg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I&amp;#8217;ve been playing around with the new SerDes (serialisers/deserialisers) that shipped with Confluent Platform 5.5 - &lt;a href=&#34;https://docs.confluent.io/current/schema-registry/serdes-develop/index.html&#34;&gt;Protobuf, and JSON Schema&lt;/a&gt; (these were added to the existing support for Avro). The serialisers (and associated &lt;a href=&#34;https://docs.confluent.io/current/schema-registry/connect.html&#34;&gt;Kafka Connect converters&lt;/a&gt;) take a payload and serialise it into bytes for sending to Kafka, and I was interested in what those bytes look like. For that I used my favourite Kafka swiss-army knife: kafkacat.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here&amp;#8217;s a message serialised to JSON Schema:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ kafkacat -b kafka:29092 -t pageviews-js -C -c1

&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;viewtime&amp;#34;&lt;/span&gt;:1,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;userid&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;User_9&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;pageid&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Page_57&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Looks just like a message from another topic serialised as regular JSON, right?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ kafkacat -b kafka:29092 -t pageviews-j -C -c1

&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;viewtime&amp;#34;&lt;/span&gt;:1,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;userid&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;User_3&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;pageid&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Page_77&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Except it&amp;#8217;s not! We can confirm this by looking at the raw bytes on the message itself by piping the output from kafkacat into hexdump.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Check out these magical, pesky, bytes on the front of the JSON Schema-encoded message, and note that they&amp;#8217;re not there on the JSON message:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ kafkacat -b kafka:29092 -t pageviews-jsonschema -C -c1 | hexdump -C

&lt;span style=&#34;display:block;width:100%;background-color:#e5e5e5&#34;&gt;&lt;span style=&#34;color:#666&#34;&gt;00000000&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;02&lt;/span&gt; 7b &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;76&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;65&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;77&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;74&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt; 6d &lt;span style=&#34;color:#666&#34;&gt;65&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;  |.....&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;viewtime&amp;#34;&lt;/span&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;00000010&lt;/span&gt;  3a &lt;span style=&#34;color:#666&#34;&gt;31&lt;/span&gt; 2c &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;75&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;73&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;65&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;72&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;64&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt; 3a &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;55&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;73&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;65&lt;/span&gt;  |:1,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;userid&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Use|
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;00000020  72 5f 39 22 2c 22 70 61  67 65 69 64 22 3a 22 50  |r_9&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;pageid&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;P|
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;00000030  61 67 65 5f 35 37 22 7d  0a                       |age_57&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;.|
&lt;span style=&#34;color:#666&#34;&gt;00000039&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ kafkacat -b kafka:29092 -t pageviews-json -C -c1 | hexdump -C

&lt;span style=&#34;display:block;width:100%;background-color:#e5e5e5&#34;&gt;&lt;span style=&#34;color:#666&#34;&gt;00000000&lt;/span&gt;  7b &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;76&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;65&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;77&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;74&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt;  6d &lt;span style=&#34;color:#666&#34;&gt;65&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt; 3a &lt;span style=&#34;color:#666&#34;&gt;31&lt;/span&gt; 2c &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;75&lt;/span&gt;  |&lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;viewtime&amp;#34;&lt;/span&gt;:1,&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;u|
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;00000010  73 65 72 69 64 22 3a 22  55 73 65 72 5f 33 22 2c  |serid&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;User_3&amp;#34;&lt;/span&gt;,|
&lt;span style=&#34;color:#666&#34;&gt;00000020&lt;/span&gt;  &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;70&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;67&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;65&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;64&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt;  3a &lt;span style=&#34;color:#666&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;67&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;65&lt;/span&gt; 5f &lt;span style=&#34;color:#666&#34;&gt;37&lt;/span&gt;  |&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;pageid&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Page_7|
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;00000030  37 22 7d 0a                                       |7&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;}&lt;/span&gt;.|
&lt;span style=&#34;color:#666&#34;&gt;00000034&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The five extra bytes (&lt;code&gt;00 00 00 00 02&lt;/code&gt;) are defined in the &lt;a href=&#34;https://docs.confluent.io/current/schema-registry/serdes-develop/index.html#wire-format&#34;&gt;wire format&lt;/a&gt; used by the Schema Registry serdes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Byte 0&lt;/strong&gt;: Magic Byte - Confluent serialization format version number; currently always 0.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bytes 1-4&lt;/strong&gt;: 4-byte schema ID as returned by Schema Registry.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_json_json_schema&#34;&gt;JSON != JSON Schema&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;They may sound similar, but the above analysis shows that you can&amp;#8217;t just interchange &lt;code&gt;org.apache.kafka.connect.json.JsonConverter&lt;/code&gt; and &lt;code&gt;io.confluent.connect.json.JsonSchemaConverter&lt;/code&gt; - they are writing and expecting to read data with different wire formats. If you try to read data that&amp;#8217;s been serialised with one using the other, it&amp;#8217;s gonna break.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here&amp;#8217;s an example of writing data in the two formats in Kafka Connect:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;curl &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;s &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;X PUT &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;H  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; http&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//localhost:8083/connectors/source-datagen-jsonschema-01/config \
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;connector.class&amp;#34;: &amp;#34;io.confluent.kafka.connect.datagen.DatagenConnector&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;key.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.storage.StringConverter&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;value.converter&amp;#34;: &amp;#34;io.confluent.connect.json.JsonSchemaConverter&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;value.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;quickstart&amp;#34;: &amp;#34;ratings&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;iterations&amp;#34;:1,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;kafka.topic&amp;#34;: &amp;#34;test-jsonschema&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;tasks.max&amp;#34;: 1
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;        }&amp;#39;&lt;/span&gt;

curl &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;s &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;X PUT &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;H  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; http&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//localhost:8083/connectors/source-datagen-json-01/config \
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;connector.class&amp;#34;: &amp;#34;io.confluent.kafka.connect.datagen.DatagenConnector&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;key.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.storage.StringConverter&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;value.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;quickstart&amp;#34;: &amp;#34;ratings&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;iterations&amp;#34;:1,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;kafka.topic&amp;#34;: &amp;#34;test-json&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;tasks.max&amp;#34;: 1
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;        }&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;From this we have two topics; &lt;code&gt;test-json&lt;/code&gt; and &lt;code&gt;test-jsonschema&lt;/code&gt;. Let&amp;#8217;s read the contents of these using a Kafka Connect sink with the correct converters:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;curl &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;i &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;X PUT &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;H  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; http&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//localhost:8083/connectors/sink-file-jsonschema-as-jsonschema/config \
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;connector.class&amp;#34;: &amp;#34;org.apache.kafka.connect.file.FileStreamSinkConnector&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;key.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.storage.StringConverter&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;value.converter&amp;#34;: &amp;#34;io.confluent.connect.json.JsonSchemaConverter&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;value.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;tasks.max&amp;#34;: 1,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;file&amp;#34;: &amp;#34;/jsonschema-as-jsonschema.txt&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;topics&amp;#34;: &amp;#34;test-jsonschema&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;}&amp;#39;&lt;/span&gt;

curl &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;i &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;X PUT &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;H  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; http&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//localhost:8083/connectors/sink-file-json-as-json/config \
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;connector.class&amp;#34;: &amp;#34;org.apache.kafka.connect.file.FileStreamSinkConnector&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;key.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.storage.StringConverter&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;value.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;tasks.max&amp;#34;: 1,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;file&amp;#34;: &amp;#34;/json-as-json.txt&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;topics&amp;#34;: &amp;#34;test-json&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As expected, this works. But what about if we mix it up, and try to read JSON data using the JSON Schema deserialiser (through the &lt;code&gt;io.confluent.connect.json.JsonSchemaConverter&lt;/code&gt; converter)?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;curl &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;i &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;X PUT &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;H  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; http&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//localhost:8083/connectors/sink-file-json-as-jsonschema/config \
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;connector.class&amp;#34;: &amp;#34;org.apache.kafka.connect.file.FileStreamSinkConnector&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;key.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.storage.StringConverter&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;value.converter&amp;#34;: &amp;#34;io.confluent.connect.json.JsonSchemaConverter&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;value.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;tasks.max&amp;#34;: 1,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;file&amp;#34;: &amp;#34;/json-as-jsonschema.txt&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;topics&amp;#34;: &amp;#34;test-json&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;⚠️ It fails!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;org.apache.kafka.connect.errors.DataException: Converting byte&lt;span style=&#34;color:#666&#34;&gt;[]&lt;/span&gt; to Kafka Connect data failed due to serialization error:
        at io.confluent.connect.json.JsonSchemaConverter.toConnectData&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;JsonSchemaConverter.java:111&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.storage.Converter.toConnectData&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Converter.java:87&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.WorkerSinkTask.lambda&lt;span style=&#34;color:#19177c&#34;&gt;$convertAndTransformRecord$2&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:492&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.execAndRetry&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;RetryWithToleranceOperator.java:128&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.execAndHandleError&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;RetryWithToleranceOperator.java:162&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
        ... &lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; more
Caused by: org.apache.kafka.common.errors.SerializationException: Error deserializing JSON message &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;for&lt;/span&gt; id -1
Caused by: org.apache.kafka.common.errors.SerializationException: Unknown magic byte!&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What&amp;#8217;s this mean? Well &lt;code&gt;Unknown magic byte!&lt;/code&gt; is the deserialiser&amp;#8217;s quirky way of say that the bytes on the front of the message that JSON Schema has (which we saw above) aren&amp;#8217;t there. Why aren&amp;#8217;t they there? Because it&amp;#8217;s just straight-up JSON that we&amp;#8217;re trying to read - and so we should be use the JSON deserialiser (provided for Kafka Connect by the &lt;code&gt;org.apache.kafka.connect.json.JsonConverter&lt;/code&gt; converter).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Actual (JSON)&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;00000000  7b 22 76 69 65 77 74 69  6d 65 22 3a 31 2c 22 75  |{&#34;viewtime&#34;:1,&#34;u|&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Expected (JSON Schema)&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;00000000  00 00 00 00 02 7b 22 76  69 65 77 74 69 6d 65 22  |&amp;#8230;&amp;#8203;..{&#34;viewtime&#34;|&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The final permutation here is trying to read JSON Schema messages using the JSON deserialiser:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;curl &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;i &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;X PUT &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;H  &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; http&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;//localhost:8083/connectors/sink-file-jsonschema-as-json/config \
&lt;/span&gt;&lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;d &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;{
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;connector.class&amp;#34;: &amp;#34;org.apache.kafka.connect.file.FileStreamSinkConnector&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;key.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.storage.StringConverter&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;value.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;tasks.max&amp;#34;: 1,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;file&amp;#34;: &amp;#34;/jsonschema-as-json.txt&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;            &amp;#34;topics&amp;#34;: &amp;#34;test-jsonschema&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As we might expect, this also fails&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;org.apache.kafka.connect.errors.DataException: Converting byte&lt;span style=&#34;color:#666&#34;&gt;[]&lt;/span&gt; to Kafka Connect data failed due to serialization error:
        at org.apache.kafka.connect.json.JsonConverter.toConnectData&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;JsonConverter.java:355&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.storage.Converter.toConnectData&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;Converter.java:87&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;                                                               
        at org.apache.kafka.connect.runtime.WorkerSinkTask.lambda&lt;span style=&#34;color:#19177c&#34;&gt;$convertAndTransformRecord$2&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;WorkerSinkTask.java:492&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;                               
        at org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.execAndRetry&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;RetryWithToleranceOperator.java:128&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
        at org.apache.kafka.connect.runtime.errors.RetryWithToleranceOperator.execAndHandleError&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;RetryWithToleranceOperator.java:162&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;                
        ... &lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt; more                                                                                                                          
Caused by: org.apache.kafka.common.errors.SerializationException: java.io.CharConversionException: Invalid UTF-32 character 0x27a2272 &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;above 0x0010ffff&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; at char &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;#1, byte #7)&lt;/span&gt;
Caused by: java.io.CharConversionException: Invalid UTF-32 character 0x27a2272 &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;above 0x0010ffff&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; at char &lt;span style=&#34;color:#408080;font-style:italic&#34;&gt;#1, byte #7)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here the JSON deserialiser is trying to read JSON, but hitting the bytes that the JSON Schema serialiser writes to the front of each message, which are not valid JSON (&lt;code&gt;Invalid UTF-32 character 0x27a2272 (above 0x0010ffff) at char #1, byte #7&lt;/code&gt;). If you&amp;#8217;ve serialised your data using the Confluent Schema Registry JSON Schema serialiser, you&amp;#8217;ve gotta deserialise it with that too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Actual (JSON Schema)&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;00000000  00 00 00 00 02 7b 22 76  69 65 77 74 69 6d 65 22  |&amp;#8230;&amp;#8203;..{&#34;viewtime&#34;|&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Expected (JSON)&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;00000000  7b 22 76 69 65 77 74 69  6d 65 22 3a 31 2c 22 75  |{&#34;viewtime&#34;:1,&#34;u|&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>