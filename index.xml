<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rmoff&#39;s random ramblings</title>
    <link>https://rmoff.net/</link>
    <description>Recent content on rmoff&#39;s random ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>2025-03-25</lastBuildDate>
    
        <atom:link href="https://rmoff.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Confluent Cloud for Apache Flink - Exploring the API</title>
      <link>https://rmoff.net/2025/03/25/confluent-cloud-for-apache-flink-exploring-the-api/</link>
      <pubDate>2025-03-25</pubDate>
      
      <guid>https://rmoff.net/2025/03/25/confluent-cloud-for-apache-flink-exploring-the-api/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/03/t_IMG_1431.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.confluent.io/en-gb/blog/serverless-flink-confluent-cloud-generally-available/&#34;&gt;Confluent Cloud for Apache Flink&lt;/a&gt; gives you access to run Flink workloads using a serverless platform on Confluent Cloud.
After &lt;a href=&#34;https://rmoff.net/2025/03/13/creating-an-http-source-connector-on-confluent-cloud-from-the-cli/&#34;&gt;poking around the Confluent Cloud API for configuring connectors&lt;/a&gt; I wanted to take a look at the same for Flink.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using the API is useful particularly if you want to script a deployment, or automate a bulk operation that might be tiresome to do otherwise.
It‚Äôs also handy if you just prefer living in the CLI :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
As well as the Confluent Cloud API, there is the &lt;a href=&#34;https://docs.confluent.io/confluent-cli/current/overview.html&#34;&gt;Confluent CLI&lt;/a&gt; too with nice things like a &lt;a href=&#34;https://docs.confluent.io/confluent-cli/current/command-reference/flink/confluent_flink_shell.html&#34;&gt;Flink shell&lt;/a&gt; built in.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_understanding_the_deployment_model_within_confluent_cloud&#34;&gt;Understanding the deployment model within Confluent Cloud&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can hack away at the API blindly, hopping between HTTP error codes and the API docs, until you succeed.
I did this to start with, and I don‚Äôt recommend it.
Spending a bit of time understanding the basic model of components makes things much easier in the long run.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/cc-flink-01.svg&#34; alt=&#34;cc flink 01&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One key thing to understand is that &lt;a href=&#34;https://docs.confluent.io/cloud/current/flink/overview.html#ccloud-flink-overview-metadata-mapping&#34;&gt;Flink on Confluent Cloud models Kafka topics as Flink tables&lt;/a&gt;.
Not only that, but the Confluent Cloud Environment is represented in Flink SQL as a catalog, and each Confluent Cloud Kafka cluster in Flink SQL as a database.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When it comes to running Flink SQL, each &lt;em&gt;statement&lt;/em&gt; runs within a &lt;a href=&#34;https://docs.confluent.io/cloud/current/flink/concepts/compute-pools.html&#34;&gt;&lt;em&gt;compute pool&lt;/em&gt;&lt;/a&gt;.
One compute pool can run many statements.
Each environment can have many compute pools, as can each cloud provider and region within the environment.
You might create multiple compute pools for the purpose of workload isolation, or cost management.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to work with Flink SQL interactively through Confluent Cloud‚Äôs web interface you‚Äôll need a &lt;em&gt;workspace&lt;/em&gt;.
Each compute pool has one or more workspaces.
You don‚Äôt have to have a workspace if you‚Äôre only submitting Flink SQL through the API or CLI.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_authentication&#34;&gt;Authentication&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To use the Confluent Cloud API you need an API key.
More accurately, you probably need several API keys :)
API keys are &lt;a href=&#34;https://docs.confluent.io/cloud/current/security/authenticate/workload-identities/service-accounts/api-keys/overview.html#resource-scopes&#34;&gt;scoped to a particular resource&lt;/a&gt;; there is no such thing as &lt;a href=&#34;https://xkcd.com/149/&#34;&gt;&lt;code&gt;sudo make me a sandwich&lt;/code&gt;&lt;/a&gt; on Confluent Cloud.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/cc-flink-02.svg&#34; alt=&#34;cc flink 02&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To work with Flink you need an API key for the environment/cloud provider/region.
Note that this is at a different granularity than a Kafka cluster, for which the API key is per-cluster.
You‚Äôll also want a &lt;code&gt;cloud&lt;/code&gt; API key for working with compute pools and API keys themselves.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To create an API key you can use the &lt;a href=&#34;https://docs.confluent.io/confluent-cli/current/command-reference/api-key/confluent_api-key_create.html&#34;&gt;Confluent CLI&lt;/a&gt;, the web UI, or &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/API-Keys-(iamv2)/operation/createIamV2ApiKey&#34;&gt;the API itself&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_lets_get_started&#34;&gt;üü¢ Let‚Äôs get started! üèÅ&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
In this article I‚Äôm using &lt;a href=&#34;https://httpie.io/&#34;&gt;httpie&lt;/a&gt; to make my &lt;code&gt;http&lt;/code&gt; calls, as I like the syntax.
If you prefer you can use &lt;code&gt;curl&lt;/code&gt; or any other tool that makes HTTP calls :)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you don‚Äôt already have your Confluent Cloud environment set up, see &lt;a href=&#34;https://rmoff.net/2025/03/13/creating-an-http-source-connector-on-confluent-cloud-from-the-cli/#_setup&#34;&gt;my previous article&lt;/a&gt;.
In this we created a Confluent Cloud environment, a Kafka cluster in that environment, and also a Schema Registry which was implicitly created.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Set the environment ID as an environment variable:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CNFL_ENV&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;env-253ngy&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you don‚Äôt know your environment ID, you can get it from the web UI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/cc-flink-06.webp&#34; alt=&#34;cc flink 06&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôll set up an API key for the &lt;code&gt;cloud&lt;/code&gt; resource:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;confluent api-key create &lt;span style=&#34;color: #000080&#34;&gt;--resource&lt;/span&gt; cloud
It may take a couple of minutes &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;for &lt;/span&gt;the API key to be ready.
Save the API key and secret. The secret is not retrievable later.
+------------+------------------------------------------------------------------+
| API Key    | &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;XXXmy-cloud-api-keyXXX&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;                                         |
| API Secret | &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;XXXmy-cloud-api-secretXXX&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;                                      |
+------------+------------------------------------------------------------------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This API key I‚Äôve set as an environment variable as we need it for interacting with compute pools, and to create an API key for the Flink resource.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=(&lt;/span&gt;XXXmy-cloud-api-keyXXX&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=(&lt;/span&gt;XXXmy-cloud-api-secretXXX&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since Flink resources are region-specific I‚Äôm going to store the region details as environment variables too:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;REGION&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;us-west-2
&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CLOUD&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;aws&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_compute_pools&#34;&gt;Compute pools&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/cc-flink-cp.svg&#34; alt=&#34;cc flink cp&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Before we can do anything with Flink we need a &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Compute-Pools-(fcpmv2)&#34;&gt;compute pool&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_get_compute_pools&#34;&gt;Get compute pools&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üìï &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Compute-Pools-(fcpmv2)/operation/listFcpmV2ComputePools&#34;&gt;API doc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs see which, if any, compute pools exist:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http GET https://api.confluent.cloud/fcpm/v2/compute-pools&lt;span style=&#34;color: #d14&#34;&gt;\?&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;environment&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;--print&lt;/span&gt; b&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
The &lt;code&gt;--print b&lt;/code&gt; option is shorthand for &lt;code&gt;--print body&lt;/code&gt; which prints the response body and none of the noisy response headers.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The response shows us that there are no compute pools:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;api_version&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;fcpm/v2&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[],&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;ComputePoolList&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;first&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;next&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_create_a_compute_pool&#34;&gt;Create a compute pool&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üìï &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Compute-Pools-(fcpmv2)/operation/createFcpmV2ComputePool&#34;&gt;API doc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since we got an empty metadata response from the above query, let‚Äôs go ahead and create a compute pool.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A compute pool has a defined capacity, expressed in CFUs.
As well as its capacity, we‚Äôll give it a name and specify where it‚Äôs to be located in terms of environment, cloud provider, and region.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http POST https://api.confluent.cloud/fcpm/v2/compute-pools &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;--print&lt;/span&gt; b &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    spec:&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;{
        &amp;#34;display_name&amp;#34;: &amp;#34;my-new-flink-pool&amp;#34;,
        &amp;#34;cloud&amp;#34;: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CLOUD&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;,
        &amp;#34;region&amp;#34;: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$REGION&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;,
        &amp;#34;max_cfu&amp;#34;: 20,
        &amp;#34;environment&amp;#34;: {
            &amp;#34;id&amp;#34;:&amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;
            }
        }&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This returns a rich set of data, including the ID of the created pool.
We want to store this as we‚Äôll need it later on.
We could copy and paste the ID from the JSON response into a manual &lt;code&gt;export&lt;/code&gt; command, but we‚Äôre not heathens here‚Äîlet‚Äôs automate it!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;response&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;http POST https://api.confluent.cloud/fcpm/v2/compute-pools &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;--print&lt;/span&gt; b &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    spec:&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;{
        &amp;#34;display_name&amp;#34;: &amp;#34;my-flink-pool-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;date&lt;/span&gt; +%Y-%m-%d&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;,
        &amp;#34;cloud&amp;#34;: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CLOUD&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;,
        &amp;#34;region&amp;#34;: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$REGION&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;,
        &amp;#34;max_cfu&amp;#34;: 20,
        &amp;#34;environment&amp;#34;: {
            &amp;#34;id&amp;#34;:&amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;
            }
        }&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CNFL_COMPUTE_POOL_ID&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$response&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôve created a second compute pool, and this time captured the details about it into the &lt;code&gt;CNFL_COMPUTE_POOL_ID&lt;/code&gt; environment variable:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;$CNFL_COMPUTE_POOL_ID&lt;/span&gt;

lfcp-kz3m1p&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs look at what we‚Äôve now got in terms of compute pools:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;http GET https://api.confluent.cloud/fcpm/v2/compute-pools&lt;span style=&#34;color: #d14&#34;&gt;\?&lt;/span&gt;environment&lt;span style=&#34;color: #d14&#34;&gt;\=&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;--print&lt;/span&gt; b &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    | jq &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.data[] | .spec.display_name + &amp;#34; (&amp;#34; + .id + &amp;#34;): &amp;#34; + .status.phase&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;AWS.us-west-2.env-253ngy.c267 (lfcp-mxd977): PROVISIONED&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;my-new-flink-pool (lfcp-8oxrj0): PROVISIONED&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_delete_a_compute_pool&#34;&gt;Delete a compute pool&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üìï &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Compute-Pools-(fcpmv2)/operation/deleteFcpmV2ComputePool&#34;&gt;API doc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What about the &lt;code&gt;my-new-flink-pool&lt;/code&gt; compute pool that we created first‚Äîit seems a waste, if not downright confusing, to keep it lying around.
Plus it gives a good excuse to try out the delete API.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First we need the compute pool‚Äôs ID, which we can see from the output above (&lt;code&gt;lfcp-8oxrj0&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then we use the &lt;code&gt;DELETE&lt;/code&gt; method:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http DELETE https://api.confluent.cloud/fcpm/v2/compute-pools/lfcp-8oxrj0?environment&lt;span style=&#34;color: #d14&#34;&gt;\=&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The return code should be &lt;code&gt;HTTP/1.1 204 No Content&lt;/code&gt; if successful.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_delete_all_compute_pools&#34;&gt;Delete all compute pools&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What about if we‚Äôve been messing about and have a ton of compute pools that we want to get rid of all at once?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is why I like using APIs, because you can start to chain specific things (managing compute pools) with general shell techniques‚Äîin this case, &lt;code&gt;xargs&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http GET https://api.confluent.cloud/fcpm/v2/compute-pools&lt;span style=&#34;color: #d14&#34;&gt;\?&lt;/span&gt;environment&lt;span style=&#34;color: #d14&#34;&gt;\=&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;--print&lt;/span&gt; b | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.data[].id&amp;#39;&lt;/span&gt; | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    xargs &lt;span style=&#34;color: #000080&#34;&gt;-Ifoo&lt;/span&gt; http DELETE https://api.confluent.cloud/fcpm/v2/compute-pools/foo&lt;span style=&#34;color: #d14&#34;&gt;\?&lt;/span&gt;environment&lt;span style=&#34;color: #d14&#34;&gt;\=&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;(I‚Äôm using additional line continuation characters (&lt;code&gt;\&lt;/code&gt;) just to break the command up so you can see what the constituent parts of it are).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_a_side_step_regions&#34;&gt;A side step: Regions&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üìï &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Regions-(fcpmv2)/operation/listFcpmV2Regions&#34;&gt;API doc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;No resource to create here, just query.
To interact with Flink we need to know the HTTP endpoint for the region in which the compute pool is located.
We can get this using the &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Regions-(fcpmv2)&#34;&gt;regions API&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http GET &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;https://api.confluent.cloud/fcpm/v2/regions?cloud=&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CLOUD&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;amp;region_name=&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$REGION&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;--print&lt;/span&gt; b&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;api_version&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;fcpm/v2&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;api_version&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;fcpm/v2&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;cloud&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;AWS&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;display_name&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Oregon (us-west-2)&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;http_endpoint&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;https://flink.us-west-2.aws.confluent.cloud&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;aws.us-west-2&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Region&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;private_http_endpoint&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;https://flink.us-west-2.aws.private.confluent.cloud&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;region_name&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;us-west-2&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;RegionList&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;first&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;next&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;total_size&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As above with the compute pool ID, I‚Äôm going to store the Flink API endpoint (&lt;code&gt;http_endpoint&lt;/code&gt;) in an environment variable:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CNFL_FLINK_API_URL&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        http GET &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;https://api.confluent.cloud/fcpm/v2/regions?cloud=&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CLOUD&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;amp;region_name=&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$REGION&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.data[].http_endpoint&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_were_almost_ready_to_start_sending_flink_sql_to_confluent_cloud&#34;&gt;We‚Äôre almost ready to start sending Flink SQL to Confluent Cloud‚Ä¶&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôve created a compute pool, we‚Äôve got the Flink API endpoint; we now just need a Flink API key.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_flink_api_key&#34;&gt;Flink API key&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A Flink API key operates at the environment/cloud provider/region level.
Before we can generate it we need the ID of our user, which we can get from‚Ä¶the user API:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üìï &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Users-(iamv2)/operation/listIamV2Users&#34;&gt;API doc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CNFL_USER&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;http GET https://api.confluent.cloud/iam/v2/users &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
                    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
                    jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.data[] | select (.full_name==&amp;#34;rmoff&amp;#34;) | .id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
I‚Äôm hardcoding my username in here.
There may be a better way to do this :)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we can create the Flink API key.
I‚Äôm going to do like we did with the compute pool and store the response in an environment variable:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üìï &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/API-Keys-(iamv2)/operation/createIamV2ApiKey&#34;&gt;API doc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;response&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;http POST https://api.confluent.cloud/iam/v2/api-keys &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    spec:&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;{
        &amp;#34;owner&amp;#34;: {&amp;#34;id&amp;#34; :&amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_USER&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;},
        &amp;#34;resource&amp;#34;: {&amp;#34;id&amp;#34;:&amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CLOUD&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$REGION&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;}
    }&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CNFL_FLINK_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$response&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CNFL_FLINK_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$response&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.spec.secret&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_statements&#34;&gt;Statements&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üìï &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Statements-(sqlv1)&#34;&gt;API doc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/cc-flink-statements.svg&#34; alt=&#34;cc flink statements&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Statements are how you send Flink SQL to Confluent Cloud.
They need a compute pool and Flink API key, both of which we created above.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are just a few more variables that we need to set for when we call the statements API:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Organization ID, which we can get from the organisation API:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CNFL_ORG&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;http GET &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;https://api.confluent.cloud/org/v2/organizations&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;--print&lt;/span&gt; b | jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.data[].id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;This assumes that there is only one org; if that‚Äôs not the case you‚Äôll need to amend it to use the correct one.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you run a Flink SQL statement you need to provide a catalog (a Confluent Cloud environment) and database (a Kafka cluster) context.
This may or may not be the same as where the table you‚Äôre interacting with is located, but it must be provided nonetheless.
In the web UI it‚Äôs set by default so you may not even notice it‚Äîwith the API you need to provide it explicitly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Whilst we set the ID of the Confluent Cloud environment above, we need its &lt;em&gt;name&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CNFL_ENV_NAME&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    http GET https://api.confluent.cloud/org/v2/environments/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.display_name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For the Kafka cluster, here‚Äôs a way to pick the first Kafka cluster from your environment and get its ID and name:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;response&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;http GET &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;https://api.confluent.cloud/cmk/v2/clusters?environment=&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
            &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_CLOUD_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CNFL_KAFKA_CLUSTER&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$response&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.data[0].id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #0086B3&#34;&gt;export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;CNFL_KAFKA_CLUSTER_NAME&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$response&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.data[0].spec.display_name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_list_statements&#34;&gt;List statements&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üìï &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Statements-(sqlv1)/operation/listSqlv1Statements&#34;&gt;API doc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This will list all the statements that have been run in the environment:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http GET &lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_URL&lt;/span&gt;/sql/v1/organizations/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ORG&lt;/span&gt;/environments/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;/statements &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
The scope for this is the entire Flink deployment (environment/cloud provider/region), so you‚Äôll see statements not just those on the compute pool you‚Äôve created, or even only those on compute pools that currently exist.
This threw me at first, because if you‚Äôve been running things in the Flink environment already you may well get a long list returned.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With jq we can list just the statement names and status:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http GET &lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_URL&lt;/span&gt;/sql/v1/organizations/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ORG&lt;/span&gt;/environments/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;/statements &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    jq &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.data[]| .name + &amp;#34;: &amp;#34; + .status.phase&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;&amp;#34;ctas-measures-20250318121833: STOPPED&amp;#34;
&amp;#34;ctas-measures-dim-20250318122944: STOPPED&amp;#34;
&amp;#34;ctas-readings-2025-03-18-10-43-45: FAILED&amp;#34;
&amp;#34;ctas-readings-2025-03-18-10-53-18: COMPLETED&amp;#34;
&amp;#34;ctas-readings-2025-03-18-11-23-20: FAILED&amp;#34;
&amp;#34;ctas-readings-enriched-20250318131826: FAILED&amp;#34;
&amp;#34;ctas-readings-enriched-20250318131958: FAILED&amp;#34;
&amp;#34;ctas-readings-enriched-20250318132444: STOPPED&amp;#34;
&amp;#34;ctas-stations-20250318122308: STOPPED&amp;#34;
&amp;#34;ctas-stations-dim-20250318123821: STOPPED&amp;#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_create_a_statement&#34;&gt;Create a statement&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üìï &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Statements-(sqlv1)/operation/createSqlv1Statement&#34;&gt;API doc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you create a statement you need to specify the Flink SQL, compute pool ID, and then the environment name and Kafka cluster name as &lt;code&gt;properties&lt;/code&gt; for the catalog and database:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http POST &lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_URL&lt;/span&gt;/sql/v1/organizations/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ORG&lt;/span&gt;/environments/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;/statements &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;my-flink-sql-statement-00 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    spec:&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;{
        &amp;#34;compute_pool_id&amp;#34;: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_COMPUTE_POOL_ID&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;,
        &amp;#34;statement&amp;#34;: &amp;#34;CREATE TABLE foo AS SELECT name, COUNT(*) AS cnt FROM (VALUES (&amp;#39;&lt;/span&gt;Bob&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;), (&amp;#39;&lt;/span&gt;Alice&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;), (&amp;#39;&lt;/span&gt;Greg&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;), (&amp;#39;&lt;/span&gt;Bob&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;)) AS NameTable(name) GROUP BY name;&amp;#34;,
        &amp;#34;properties&amp;#34;: {
            &amp;#34;sql.current-catalog&amp;#34;: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV_NAME&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;,
            &amp;#34;sql.current-database&amp;#34;: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_KAFKA_CLUSTER_NAME&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;
        }
    }&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can then fetch the statement back to see its status:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üìï API doc: &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Statements-(sqlv1)/operation/getSqlv1Statement&#34;&gt;API doc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http GET &lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_URL&lt;/span&gt;/sql/v1/organizations/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ORG&lt;/span&gt;/environments/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;/statements/my-flink-sql-statement-00 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;properties&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;sql.current-catalog&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;sql.current-database&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;cluster00&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;statement&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;CREATE TABLE foo AS SELECT name, COUNT(*) AS cnt FROM (VALUES (Bob), (Alice), (Greg), (Bob)) AS NameTable(name) GROUP BY name;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;status&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;detail&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;SQL validation failed. Error from line 1, column 64 to line 1, column 66.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Caused by: Column &amp;#39;Bob&amp;#39; not found in any table&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;network_kind&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;PUBLIC&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;phase&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;FAILED&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You‚Äôll notice that it says &lt;code&gt;FAILED&lt;/code&gt;.
This is where we get into the fun of calling APIs from the shell.
Single quotes, double quotes‚Ä¶all are fun and have their own nuances to understand.
If we look carefully at the &lt;code&gt;statement&lt;/code&gt; value returned above we can see that indeed &lt;code&gt;Bob&lt;/code&gt; et al are no longer single quoted‚Äîbut should be.
The single quotes got lost in the &lt;code&gt;http&lt;/code&gt; command submission.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs use proper quoting for the single quotes in the SQL:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http POST &lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_URL&lt;/span&gt;/sql/v1/organizations/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ORG&lt;/span&gt;/environments/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;/statements &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;my-flink-sql-statement-01 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    spec:&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;{
        &amp;#34;compute_pool_id&amp;#34;: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_COMPUTE_POOL_ID&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;,
        &amp;#34;statement&amp;#34;: &amp;#34;CREATE TABLE foo AS SELECT name, COUNT(*) AS cnt FROM (VALUES (&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;Bob&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;), (&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;Alice&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;), (&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;Greg&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;), (&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;Bob&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;)) AS NameTable(name) GROUP BY name;&amp;#34;,
        &amp;#34;properties&amp;#34;: {
            &amp;#34;sql.current-catalog&amp;#34;: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV_NAME&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;,
            &amp;#34;sql.current-database&amp;#34;: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_KAFKA_CLUSTER_NAME&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;
        }
    }&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This time the statement works:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt; http GET &lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_URL&lt;/span&gt;/sql/v1/organizations/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ORG&lt;/span&gt;/environments/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;/statements/my-flink-sql-statement-01 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | jq &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.status&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;detail&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;network_kind&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;PUBLIC&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;phase&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;COMPLETED&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;scaling_status&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;last_updated&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;2025-03-26T10:25:58Z&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;scaling_state&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;OK&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;traits&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;is_append_only&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;is_bounded&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{},&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;sql_kind&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;CREATE_TABLE_AS&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;upsert_columns&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If we load up the Confluent Cloud web UI we can see that the table has indeed been created:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/cc-flink-03.webp&#34; alt=&#34;cc flink 03&#34; width=&#34;25%&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Can we get this information (i.e. a list of tables) for ourselves from the API?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can, and it‚Äôs a good excuse to look at how we get the &lt;em&gt;results&lt;/em&gt; from a statement.
So far we‚Äôve just run a statement with no result set‚Äîit just created a table.
Like many databases, Flink SQL on Confluent Cloud provides an information schema that holds metadata about the contents of the database.
Let‚Äôs run a query to show all &amp;#39;tables&amp;#39; (topics) in a &amp;#39;database&amp;#39; (Kafka cluster).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http POST &lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_URL&lt;/span&gt;/sql/v1/organizations/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ORG&lt;/span&gt;/environments/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;/statements &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;list-tables-00 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    spec:&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;{
        &amp;#34;compute_pool_id&amp;#34;: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_COMPUTE_POOL_ID&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;,
        &amp;#34;statement&amp;#34;: &amp;#34;SELECT * FROM `INFORMATION_SCHEMA`.`TABLES` WHERE TABLE_TYPE = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;BASE TABLE&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39; AND TABLE_CATALOG_ID = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39; AND TABLE_SCHEMA_ID = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_KAFKA_CLUSTER&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;,
        &amp;#34;properties&amp;#34;: {
            &amp;#34;sql.current-catalog&amp;#34;: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV_NAME&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;,
            &amp;#34;sql.current-database&amp;#34;: &amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_KAFKA_CLUSTER_NAME&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#34;
        }
    }&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This time, when we fetch the &lt;code&gt;status&lt;/code&gt; of the statement, it‚Äôs not just &lt;code&gt;COMPLETED&lt;/code&gt; but gives us information about the schema of the resultset:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http GET &lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_URL&lt;/span&gt;/sql/v1/organizations/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ORG&lt;/span&gt;/environments/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;/statements/list-tables-00 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | jq &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.status&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;detail&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;network_kind&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;PUBLIC&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;phase&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;COMPLETED&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;traits&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;is_append_only&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;is_bounded&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;columns&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;TABLE_CATALOG_ID&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2147483647&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;nullable&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;TABLE_CATALOG&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
          &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2147483647&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;nullable&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But what about the data itself?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_reading_the_results_from_a_statement&#34;&gt;Reading the results from a statement&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üìï API doc: &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Statement-Results-(sqlv1)/operation/getSqlv1StatementResult&#34;&gt;API doc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To get the results from a statement you use the &lt;code&gt;/results&lt;/code&gt; endpoint against the statement name, thus:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http GET &lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_URL&lt;/span&gt;/sql/v1/organizations/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ORG&lt;/span&gt;/environments/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;/statements/list-tables-00/results &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;--print&lt;/span&gt; b&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The schema we got from the statement endpoint above (&lt;code&gt;status.traits.schema&lt;/code&gt;), so the resultset just gives us the actual data, plus metadata on how to page through the results if there is more data than is returned in a single response.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;api_version&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;sql/v1&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;StatementResult&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;created_at&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;2025-03-26T10:41:55.989063Z&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;next&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;https://flink.us-west-2.aws.confluent.cloud/sql/v1/organizations/178cb46b-d78e-435d-8b6e-d8d023a08e6f/environments/env-253ngy/statements/list-tables-00/res
ults&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;results&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;
            &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;row&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;env-253ngy&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;lkc-qnygo6&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;cluster00&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;foo&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;BASE TABLE&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;YES&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;HASH&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;YES&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$rowtime&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;`SOURCE_WATERMARK`()&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;YES&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;
                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;
            &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As much as I am a fan of using APIs as a quick and powerful way to interact with something, reading SQL results is where I draw the line; trying to piece the above resultset manually together is not my idea of fun‚Äîand is why the Confluent Cloud Flink Workspace is a much nicer way to do this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/cc-flink-04.webp&#34; alt=&#34;cc flink 04&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;or the Confluent CLI Flink shell:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/cc-flink-05.webp&#34; alt=&#34;cc flink 05&#34; width=&#34;50%&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_delete_statements&#34;&gt;Delete statements&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üìï &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Statements-(sqlv1)/operation/deleteSqlv1Statement&#34;&gt;API doc&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs wrap up by tidying up after ourselves, and looking at how to delete statements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To delete a statement use the &lt;code&gt;DELETE&lt;/code&gt; method on the statement‚Äôs endpoint using its name:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http DELETE &lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_URL&lt;/span&gt;/sql/v1/organizations/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ORG&lt;/span&gt;/environments/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;/statements/list-tables-00 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You‚Äôll get a &lt;code&gt;HTTP/1.1 202 Accepted&lt;/code&gt; response if successful.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If we want to clean up your environment and delete all statements you can use something like the following.
Use it very carefully; it‚Äôll literally delete all the statements with no undo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http GET &lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_URL&lt;/span&gt;/sql/v1/organizations/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ORG&lt;/span&gt;/environments/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;/statements &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.data[].name&amp;#39;&lt;/span&gt; | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    xargs &lt;span style=&#34;color: #000080&#34;&gt;-Ifoo&lt;/span&gt; http DELETE &lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_URL&lt;/span&gt;/sql/v1/organizations/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ORG&lt;/span&gt;/environments/&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_ENV&lt;/span&gt;/statements/foo &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #000080&#34;&gt;--auth&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_KEY&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CNFL_FLINK_API_SECRET&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Interesting links - March 2025</title>
      <link>https://rmoff.net/2025/03/24/interesting-links-march-2025/</link>
      <pubDate>2025-03-24</pubDate>
      
      <guid>https://rmoff.net/2025/03/24/interesting-links-march-2025/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/03/t_IMG_8440.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;The problem with publishing &lt;a href=&#34;https://rmoff.net/2025/02/03/interesting-links-february-2025/&#34;&gt;February‚Äôs interesting links&lt;/a&gt; at the beginning of the month and now getting around to publishing March‚Äôs at the end is that I have nearly two months&amp;#39; worth of links to share üòÖ So with no further ado, let‚Äôs crack on.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_duckdb&#34;&gt;DuckDB&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I‚Äôve been using DuckDB a lot recently and wrote up a few articles:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/03/20/building-a-data-pipeline-with-duckdb/&#34;&gt;Building a Data Pipeline with DuckDB&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/02/27/duckdb-tricks-renaming-fields-in-a-select-across-tables/&#34;&gt;DuckDB Tricks: Renaming Fields in a SELECT * across tables&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/02/28/exploring-uk-environment-agency-data-in-duckdb-and-rill/&#34;&gt;Exploring UK Environment Agency Data in DuckDB and Rill&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&#34;https://duckdb.org/2025/03/12/duckdb-ui.html&#34;&gt;release of a built-in UI&lt;/a&gt; got the DuckDB community a flappin&amp;#39; and quackin&amp;#39;. I wrote two blog posts about it:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/03/14/kicking-the-tyres-on-the-new-duckdb-ui/&#34;&gt;Kicking the Tyres on the New DuckDB UI&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/03/19/exporting-notebooks-from-duckdb-ui/&#34;&gt;Exporting Notebooks from DuckDB UI&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DuckDB also &lt;a href=&#34;https://duckdb.org/2025/03/14/preview-amazon-s3-tables.html&#34;&gt;added support&lt;/a&gt; for reading from &lt;a href=&#34;https://aws.amazon.com/s3/features/tables/&#34;&gt;Amazon S3 Tables&lt;/a&gt; (Amazon‚Äôs managed Apache Iceberg offering).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tobias M√ºller has started a &lt;a href=&#34;https://learningduckdb.com/newsletters/welcome-to-learning-duckdb/&#34;&gt;Learning DuckDB newsletter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DeepSeek released &lt;a href=&#34;https://github.com/deepseek-ai/smallpond&#34;&gt;smallpond&lt;/a&gt;, a distributed DuckDB implementation that uses &lt;a href=&#34;https://github.com/deepseek-ai/3FS&#34;&gt;3FS&lt;/a&gt; (also from Deepseek) and &lt;a href=&#34;https://www.ray.io/&#34;&gt;Ray&lt;/a&gt;. &lt;a href=&#34;https://www.definite.app/blog/smallpond&#34;&gt;This blog post&lt;/a&gt; gives a nice overview and assessment of it‚Äîincluding the summary &amp;#34;&lt;em&gt;Is smallpond for me? tl;dr: probably not&lt;/em&gt;&amp;#34; :) Daniel Beach also &lt;a href=&#34;https://dataengineeringcentral.substack.com/p/smallpond-distributed-duckdb&#34;&gt;takes a look at it&lt;/a&gt; with some code examples.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Robin Linacre writes about &lt;a href=&#34;https://www.robinlinacre.com/recommend_duckdb/&#34;&gt;why DuckDB is his first choice for data processing&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_kafka_and_other_event_streaming_technologies&#34;&gt;Kafka (and other Event Streaming technologies)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Apache Kafka 4.0 has been released. See &lt;a href=&#34;https://dlcdn.apache.org/kafka/4.0.0/RELEASE_NOTES.html&#34;&gt;release notes&lt;/a&gt;, &lt;a href=&#34;https://kafka.apache.org/blog#apache_kafka_400_release_announcement&#34;&gt;blog post&lt;/a&gt;, and &lt;a href=&#34;https://kafka.apache.org/downloads&#34;&gt;download&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.iggy.rs/posts/apache-incubator/&#34;&gt;Iggy has joined the Apache Incubator&lt;/a&gt;. They also published an &lt;a href=&#34;https://blog.iggy.rs/posts/transparent-benchmarks/&#34;&gt;interesting post&lt;/a&gt; about benchmarking.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Speaking of benchmarking, Redpanda and StreamNative had a &lt;a href=&#34;https://www.linkedin.com/pulse/few-thoughts-streamnative-benchmark-matthew-schumpert-h8qbf/&#34;&gt;dust up&lt;/a&gt; over a &lt;a href=&#34;https://streamnative.io/blog/how-we-run-a-5-gb-s-kafka-workload-for-just-50-per-hour&#34;&gt;benchmark&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://wangjunfei.com/2025/02/10/Announcing-Stonemq-A-high-performance-and-efficient-message-queue-developed-in-Rust/&#34;&gt;Stonemq&lt;/a&gt; is a &amp;#34;A high-performance and efficient message queue developed in Rust&amp;#34; that &amp;#34;aims to outperform Kafka in scenarios with massive-scale queue clusters&amp;#34;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A post about the &lt;a href=&#34;https://broot.ca/kafka-at-the-low-end.html&#34;&gt;challenges of using Kafka as a queue&lt;/a&gt;‚Äîwhich as the author notes starts to become moot once KIP-932 is released, which it is now with &lt;a href=&#34;https://dlcdn.apache.org/kafka/4.0.0/RELEASE_NOTES.html&#34;&gt;Apache Kafka 4.0&lt;/a&gt;. Gunnar Morling takes a look at the new functionality &lt;a href=&#34;https://www.morling.dev/blog/kip-932-queues-for-kafka/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An example of &lt;a href=&#34;https://callistaenterprise.se/blogg/teknik/2025/01/03/kroxylicious-kafka-encryption/&#34;&gt;Kafka Record Encryption&lt;/a&gt; using &lt;a href=&#34;https://kroxylicious.io/&#34;&gt;Kroxylicious&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A bit of housekeeping from Trendyol in this blog post about &lt;a href=&#34;https://medium.com/trendyol-tech/detecting-and-managing-unused-topics-in-kafka-clusters-a-scalability-and-resource-optimization-2bae8a4bafea&#34;&gt;Detecting and Managing Unused Topics in Kafka Clusters&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A very nice tool from Renato Mefi that &lt;a href=&#34;https://evoura.com/kafka-traffic-visualizer/&#34;&gt;visually simulates Kafka traffic&lt;/a&gt;. Similar to the one from SoftwareMill &lt;a href=&#34;https://softwaremill.com/kafka-visualisation/&#34;&gt;a few years ago&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_data_viz&#34;&gt;Data Viz&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://nightingaledvs.com/fourth-wave-a-changing-world/&#34;&gt;A nice article&lt;/a&gt; from Amanda Makulec and Elijah Meeks about the &amp;#34;Fourth Wave&amp;#34; in Data Viz&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Maybe &lt;a href=&#34;https://nightingaledvs.com/i-stopped-using-box-plots-the-aftermath/&#34;&gt;box plots aren‚Äôt such a good idea&lt;/a&gt; after all.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_stream_processing&#34;&gt;Stream Processing&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Apache Flink 2.0 has been released - check out the &lt;a href=&#34;https://flink.apache.org/downloads/&#34;&gt;download&lt;/a&gt; and &lt;a href=&#34;https://flink.apache.org/2025/03/24/apache-flink-2.0.0-a-new-era-of-real-time-data-processing/&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nearly ten years old and still a really useful article: Tyler Akidau‚Äôs &lt;a href=&#34;https://www.oreilly.com/radar/the-world-beyond-batch-streaming-101/&#34;&gt;Streaming 101: The world beyond batch&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Yaroslav Tkachenko &lt;a href=&#34;https://www.streamingdata.tech/p/exploring-apache-datafusion-streaming-framework&#34;&gt;writes about&lt;/a&gt; how Apache DataFusion (a query engine) could be used to build a stream processing framework (just as Arroyo and others have already done).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lalamove‚Äôs talk from Flink Forward Asia last year about how their Flink architecture has been written up as a &lt;a href=&#34;https://www.alibabacloud.com/blog/how-we-build-a-scalable-cost-effective-cloud-native-streaming-platform-in-lalamove_601999&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alibaba &lt;a href=&#34;https://github.com/alibaba/fluss/issues/107&#34;&gt;published&lt;/a&gt; their updated &lt;a href=&#34;https://docs.google.com/document/d/1Ghw_Jb-yHztgGvO5OpRWgibmPClDivejp7UyLUgKxOc/edit?pli=1&amp;amp;tab=t.0&#34;&gt;Lakehouse Storage Design&lt;/a&gt; for &lt;a href=&#34;https://github.com/alibaba/fluss&#34;&gt;Fluss&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;üìÖ Save the date - &lt;a href=&#34;https://www.flink-forward.org/&#34;&gt;Flink Forward 2025&lt;/a&gt; will be in Barcelona, October 15 &amp;amp; 16.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flink and AI is a recurring theme, including in the recent Flink 2.0 release. This post gives an example of &lt;a href=&#34;https://ganxesh.medium.com/integrating-llms-into-apache-flink-pipelines-8fb433743761&#34;&gt;using LLMs with Flink&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kstd.thriving.dev/&#34;&gt;Kafka Streams Topology Design (KSTD)&lt;/a&gt; released a &lt;a href=&#34;https://github.com/thriving-dev/kafka-streams-topology-design/releases/tag/v1.0.0-beta.3&#34;&gt;new version&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I‚Äôve been learning more about Flink SQL, and wrote three articles:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/03/10/data-wrangling-with-flink-sql/&#34;&gt;Data Wrangling with Flink SQL&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/03/06/joining-two-streams-of-data-with-flink-sql/&#34;&gt;Joining Two Streams of Data with Flink SQL&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/03/03/how-to-explode-nested-arrays-with-flink-sql/&#34;&gt;How to Explode Nested Arrays with Flink SQL&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_general_data_stuff&#34;&gt;General Data Stuff&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.theregister.com/2025/02/11/microsoft_postgresql_extensions/&#34;&gt;Analysis from El Reg&lt;/a&gt; on &lt;a href=&#34;https://opensource.microsoft.com/blog/2025/01/23/documentdb-open-source-announcement/&#34;&gt;Microsoft‚Äôs releasing&lt;/a&gt; &lt;code&gt;pg_documentdb_api&lt;/code&gt; and &lt;code&gt;pg_documentdb_core&lt;/code&gt; Postgres extensions as open source.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tons of fascinating detail in &lt;a href=&#34;https://www.interdb.jp/pg/index.html&#34;&gt;The Internals of PostgreSQL&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I wrote about &lt;a href=&#34;https://rmoff.net/2025/03/13/creating-an-http-source-connector-on-confluent-cloud-from-the-cli/&#34;&gt;Creating an HTTP Source connector on Confluent Cloud from the CLI&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A nifty &lt;a href=&#34;https://debezium.io/blog/2025/02/01/real-time-data-replication-with-debezium-and-python/&#34;&gt;blog post&lt;/a&gt; about using &lt;a href=&#34;https://github.com/memiiso/pydbzengine&#34;&gt;&lt;code&gt;pydbzengine&lt;/code&gt;&lt;/a&gt; to interact with Debezium from Python, building out a CDC pipeline.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Debezium recently &lt;a href=&#34;https://debezium.io/blog/2025/02/24/go-smt/&#34;&gt;added support for SMTs written in Go&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://debezium.io/blog/2025/03/13/debezium-3-1-beta1-released/&#34;&gt;Debezium 3.1.0.Beta1&lt;/a&gt; includes the first release of &lt;a href=&#34;https://github.com/debezium/debezium-platform/blob/main/helm/README.md&#34;&gt;Debezium Platform&lt;/a&gt;, which is designed to make it easier running Debezium on Kubernetes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clue &lt;a href=&#34;https://sharon-53595.medium.com/how-we-migrated-to-apache-iceberg-utilizing-athena-trino-and-spark-58c6875b5641&#34;&gt;migrated&lt;/a&gt; from Redshift to Iceberg (with Trino and Spark)‚Äî &lt;a href=&#34;https://sharon-53595.medium.com/how-we-saved-60-on-data-infrastructure-by-migrating-from-redshift-to-apache-iceberg-e9e8ecd47931&#34;&gt;saving 60% in costs&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://amoro.apache.org/&#34;&gt;Apache Amoro&lt;/a&gt; is an open source project providing management for lakehouses. &lt;a href=&#34;https://blog.devgenius.io/apache-amoro-managing-lakehouse-30a18ad8f053&#34;&gt;This blog post&lt;/a&gt; tries it out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A really useful set of blog posts explaining &lt;a href=&#34;https://arrow.apache.org/blog/2025/01/10/arrow-result-transfer/&#34;&gt;what Apache Arrow is&lt;/a&gt; and &lt;a href=&#34;https://arrow.apache.org/blog/2025/02/28/data-wants-to-be-free/&#34;&gt;why it‚Äôs so fast&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_data_architectures&#34;&gt;Data Architectures&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;a href=&#34;https://jack-vanlightly.com/blog/2025/2/17/towards-composable-data-platforms&#34;&gt;clear and thoughtful article from Jack Vanlightly&lt;/a&gt; looking at how data virtualization enabled by OTFs fits into data architectures now and future.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;a href=&#34;https://www.eckerson.com/articles/a-fresh-look-at-data-modeling-part-1-the-what-and-why-of-data-modeling&#34;&gt;useful primer&lt;/a&gt; and &lt;a href=&#34;https://www.eckerson.com/articles/a-fresh-look-at-data-modeling-part-2-rediscovering-the-lost-art-of-data-modeling&#34;&gt;follow up&lt;/a&gt; on data modelling.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ssbipolar.com/2021/05/31/roches-maxim/&#34;&gt;Roche‚Äôs Maxim of Data Transformation&lt;/a&gt;: Data should be transformed as far upstream as possible, and as far downstream as necessary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My colleague Matthew O‚ÄôKeefe takes up the theme of data modelling in &lt;a href=&#34;https://www.linkedin.com/pulse/data-modeling-enable-shift-left-part-i-matthew-o-keefe-ph-d‚Äî‚Äãmpaac/&#34;&gt;his blog post&lt;/a&gt;, and it something that Joe Reis also talks about in his excellent post about &lt;a href=&#34;https://joereis.substack.com/p/the-tension-of-orthodoxy-and-speed&#34;&gt;The Tension of Orthodoxy and Speed&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I‚Äôm a big fan of &lt;a href=&#34;https://bsky.app/profile/rmoff.net&#34;&gt;BlueSky&lt;/a&gt;, and was interested to read this post about &lt;a href=&#34;https://jazco.dev/2025/02/19/imperfection/&#34;&gt;how they implement timelines&lt;/a&gt; and the tradeoffs involved.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Andrew Jones writes a newsletter and wrote about Data Contracts &lt;a href=&#34;https://andrew-jones.com/newsletter/2025-03-07-wrapping-legacy-applications-with-data-contracts/&#34;&gt;(1)&lt;/a&gt; &lt;a href=&#34;https://andrew-jones.com/newsletter/2025-03-14-starting-small-with-data-contracts/&#34;&gt;(2)&lt;/a&gt; &lt;a href=&#34;https://andrew-jones.com/newsletter/2025-03-21-the-many-applications-of-data-contracts/&#34;&gt;(3)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A punchy article from Ian Miell about &lt;a href=&#34;https://blog.container-solutions.com/why-im-no-longer-talking-to-architects-about-microservices&#34;&gt;why he is no longer talking to architects about microservices&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_other_stuff&#34;&gt;Other stuff&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The trend for &amp;#34;landscape&amp;#34; posts/infographics in recent years can sometimes seem like an exercise in trying to shape reality to suit the world-view of a vendor‚Äînot to mention overwhelming the reader with the number of projects and technologies to try and comprehend. However, the &lt;a href=&#34;https://substack.com/home/post/p-156586181&#34;&gt;Open Source Data Engineering Landscape&lt;/a&gt; that Alireza Sadeghi has put together is pretty decent and comprehensive list, with a solid set of analysis of each category.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gunnar Morling is a good friend of mine‚Äîand an excellent blogger. He was recently interviewed about technical blogging and &lt;a href=&#34;https://writethatblog.substack.com/p/gunnar-morling-on-technical-blogging&#34;&gt;shares some useful tips&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.autodidacts.io/troubleshooting/&#34;&gt;Troubleshooting is a core skill&lt;/a&gt;. Learning how to do it properly, in a considered and logical manner, will benefit you.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Joe Reis recently opened a Discord server &lt;strong&gt;Practical Data&lt;/strong&gt; that‚Äôs a friendly and lively place to chat about data stuff. &lt;a href=&#34;https://discord.gg/HhSZVvWDBb&#34;&gt;Join here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you have a Garmin device you‚Äôll find &lt;a href=&#34;https://github.com/tcgoetz/GarminDB&#34;&gt;this&lt;/a&gt; fun. It lets you download all your data and analyse it yourself. It‚Äôs based on Sqlite‚ÄîI‚Äôm keen to see if I can use it with DuckDB :)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_and_finally&#34;&gt;And finally‚Ä¶&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you‚Äôve never seen the &lt;a href=&#34;https://silent.org.pl/home/2022/06/13/the-floppotron-3-0/&#34;&gt;Floppotron&lt;/a&gt;, it‚Äôs a thing of wonder.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>How to create Carousel posts in LinkedIn‚Ä¶without the bullshit</title>
      <link>https://rmoff.net/2025/03/21/how-to-create-carousel-posts-in-linkedinwithout-the-bullshit/</link>
      <pubDate>2025-03-21</pubDate>
      
      <guid>https://rmoff.net/2025/03/21/how-to-create-carousel-posts-in-linkedinwithout-the-bullshit/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/03/t_IMG_8406.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
tl;dr: Upload a PDF document in which each slide of the carousel is one page.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I wanted to post a Carousel post in LinkedIn, but had to wade through a million pages of crap in Google from companies trying to sell shit.
Here‚Äôs how to do it simply.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Create your carousel slides.
I like using Excalidraw.
Here‚Äôs an example of two simple slides (that I‚Äôll use for posting this article on LinkedIn ‚àû)&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/1.png&#34; alt=&#34;1&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Export each slide as its own image file.
In Excalidraw select the objects that you want to make up the slide and hit shift-cmd-E.
Set it to &lt;code&gt;Only selected&lt;/code&gt;, and save the PNG into a folder.&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/2.png&#34; alt=&#34;2&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You should now have a folder of one or more images:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;tree my_carousel_slides
my_carousel_slides
‚îú‚îÄ‚îÄ 1.png
‚îî‚îÄ‚îÄ 2.png&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install imagemagick:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;brew &lt;span style=&#34;color: #0086B3&#34;&gt;install &lt;/span&gt;imagemagick&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Convert your image files to a single PDF:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;magick my_carousel_slides/&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;.png linkedin_carousel.pdf&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a LinkedIn post, click on add a &lt;strong&gt;Document&lt;/strong&gt;, upload your PDF, give it a title&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/3.png&#34; alt=&#34;3&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/4.png&#34; alt=&#34;4&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Erm. That‚Äôs it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Building a data pipeline with DuckDB</title>
      <link>https://rmoff.net/2025/03/20/building-a-data-pipeline-with-duckdb/</link>
      <pubDate>2025-03-20</pubDate>
      
      <guid>https://rmoff.net/2025/03/20/building-a-data-pipeline-with-duckdb/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/03/relationships.excalidraw.svg" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this blog post I‚Äôm going to explore how as a data engineer in the field today I might go about putting together a rudimentary data pipeline.
I‚Äôll take some operational data, and wrangle it into a form that makes it easily pliable for analytics work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After a somewhat fevered and nightmarish period during which people walked around declaring &amp;#34;Schema on Read&amp;#34; was the future, that &amp;#34;Data is the new oil&amp;#34;, and &amp;#34;Look at the size of my big data&amp;#34;, the path that is history in IT is somewhat coming back on itself to a more sensible approach to things.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As they say:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What‚Äôs old is new&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is good news for me, because I am old and what I knew then is &amp;#39;new&amp;#39; now ;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_overview&#34;&gt;Overview&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_the_data&#34;&gt;The Data&lt;/h3&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
this uses Environment Agency flood and river level data from the &lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference&#34;&gt;real-time data API&lt;/a&gt; (Beta)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you‚Äôve been following this blog closely you‚Äôll have seen some of my noodlings around with this data already.
I wrote about &lt;a href=&#34;https://rmoff.net/2025/02/28/exploring-uk-environment-agency-data-in-duckdb-and-rill/&#34;&gt;exploring it with DuckDB and Rill&lt;/a&gt;, using it as an excuse to &lt;a href=&#34;https://rmoff.net/2025/03/14/kicking-the-tyres-on-the-new-duckdb-ui/&#34;&gt;try out the new DuckDB UI&lt;/a&gt;, as well as &lt;a href=&#34;https://rmoff.net/2025/03/13/creating-an-http-source-connector-on-confluent-cloud-from-the-cli/&#34;&gt;loading it into Kafka&lt;/a&gt; and figuring out what &lt;a href=&#34;https://rmoff.net/2025/03/10/data-wrangling-with-flink-sql/&#34;&gt;working with it in Flink SQL&lt;/a&gt; would look like.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;At the heart of the data are &lt;strong&gt;readings&lt;/strong&gt;, providing information about &lt;strong&gt;measures&lt;/strong&gt; such as rainfall and river levels.
These are reported from a variety of &lt;strong&gt;stations&lt;/strong&gt; around the UK.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/data-model.excalidraw.svg&#34; alt=&#34;data model.excalidraw&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The data is available on &lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#availability&#34;&gt;a public REST API&lt;/a&gt; (try it out &lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/id/stations/L0607&#34;&gt;here&lt;/a&gt; to see the current river level at one of the stations in Sheffield).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_the_plan&#34;&gt;The Plan&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/overview.excalidraw.svg&#34; alt=&#34;overview.excalidraw&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I‚Äôm going to make heavy use of DuckDB for this project.
It can read data from REST APIs, it can process data, and it can store data.
What‚Äôs more, it can be queried with various visualisation tools including &lt;a href=&#34;https://rilldata.com/&#34;&gt;Rill Data&lt;/a&gt;, &lt;a href=&#34;https://superset.apache.org/&#34;&gt;Superset&lt;/a&gt;, and &lt;a href=&#34;https://metabase.com&#34;&gt;Metabase&lt;/a&gt;, as we‚Äôll see later.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôll pull the data in using DuckDB‚Äôs &lt;a href=&#34;https://duckdb.org/docs/stable/data/json/loading_json.html#the-read_json-function&#34;&gt;&lt;code&gt;read_json&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://duckdb.org/docs/stable/extensions/httpfs/overview&#34;&gt;&lt;code&gt;httpfs&lt;/code&gt;&lt;/a&gt; core extension.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once loaded, the dimension data will be brute-force rebuilt based on the latest values.
For those who like this kind of thing (and who doesn‚Äôt), this is in effect Slowly-Changing Dimension (SCD) type 1.
With SCD Type 1, no history is retained.
This means that if a measure or station is removed, associated readings previously recorded will not have a match on the corresponding dimension table.
If it‚Äôs updated, historical readings will be shown with the dimension data as-is now, not as-was then.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;code&gt;readings&lt;/code&gt; fact data we‚Äôll collect in a fact table that will mostly be appended to with each incremental load.
It‚Äôs not &lt;em&gt;entirely&lt;/em&gt; that simple though:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Some stations may lag in reporting their data, so we might pull duplicates (i.e. the reading for the last time period when it did report)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some stations may batch their reporting, so we need to handle polling back over a period of time and dealing with the resulting duplicates for readings that had been reported&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In addition, historical data is available and we want to be able to include that too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once we‚Äôve got our fact and dimension data sorted, we‚Äôll join it into a denormalised table that we can build analytics against.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_the_environment&#34;&gt;The Environment&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I‚Äôm running this all locally on my Mac.
The first step is to install DuckDB and a few other useful tools:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;brew &lt;span style=&#34;color: #0086B3&#34;&gt;install &lt;/span&gt;duckdb httpie jq&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then fire up DuckDB with its notebook-like UI (you don‚Äôt &lt;em&gt;have&lt;/em&gt; to use the UI; you can use whatever interface you want):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;duckdb env-agency.duckdb &lt;span style=&#34;color: #000080&#34;&gt;-ui&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_extract_with_just_a_little_bit_of_transform&#34;&gt;Extract (with just a little bit of transform)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The basic ingest looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_stg&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;read_json&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;https://environment.data.gov.uk/flood-monitoring/data/readings?latest&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;DuckDB automagically determines the schema of the table.
We‚Äôre going to do one bit of processing at this stage too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;By default all the API calls return &lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#api-requests&#34;&gt;a payload made up of metadata and then an array of the actual data&lt;/a&gt;.
I decided to explode out the array at this point of ingest just to make things a bit easier.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
At this point I‚Äôm throwing away the &lt;code&gt;@context&lt;/code&gt; and &lt;code&gt;meta&lt;/code&gt; data elements; you may decide you want to keep them.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_stg&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;src&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;read_json&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;https://environment.data.gov.uk/flood-monitoring/data/readings?latest&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNNEST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;u&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures_stg&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;src&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;read_json&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;https://environment.data.gov.uk/flood-monitoring/id/measures&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNNEST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;u&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations_stg&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;src&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;read_json&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;https://environment.data.gov.uk/flood-monitoring/id/stations&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNNEST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;u&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs see what data we‚Äôve pulled in:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;readings_stg&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;table_name&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;row_ct&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;min&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;min_dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;max&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;max_dateTime&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_stg&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNION&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ALL&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;measures_stg&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;table_name&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;row_ct&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures_stg&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNION&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ALL&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;stations_stg&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;table_name&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations_stg&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;table_name	    row_ct	min_dateTime	    max_dateTime
readings_stg	5272	2025-02-21 13:45:00	2025-03-20 13:25:10
measures_stg	6638
stations_stg	5400&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The latest &lt;code&gt;dateTime&lt;/code&gt; value looks right (&lt;em&gt;it‚Äôs 2025-03-20 13:42:45 as I write this&lt;/em&gt;) but why is the minimum nearly a month ago?
This is where the DuckDB UI‚Äôs data viz comes in useful:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03//dateTime_viz.png&#34; alt=&#34;dateTime viz&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What this shows us is that almost all the data &lt;em&gt;is&lt;/em&gt; for the latest timestamp, with just a handful of readings for other dates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can prove this out with a SQL query too:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;reading_count&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_stg&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;desc&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;desc&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/dateTime_dist.png&#34; alt=&#34;dateTime dist&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_transform&#34;&gt;Transform&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_keys&#34;&gt;Keys&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The staging tables have no keys defined, because YOLO right?
Well no.
Staging is where we bring in the source data, warts and all.
A station &lt;em&gt;shouldn‚Äôt have&lt;/em&gt; more than one instance, but who says that‚Äôs the case?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Rather than failing the ingest because of a logical data error, it‚Äôs our job to work with what we‚Äôve got.
That means coding defensively and ensuring that whilst we‚Äôll accept anything into the staging area, we don‚Äôt blindly propagate crap through the rest of the pipeline.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One of the ways to enforce this is constraints, of which primary keys are an example.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/relationships.excalidraw.svg&#34; alt=&#34;relationships.excalidraw&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_readingsmeasures&#34;&gt;Readings‚ÜíMeasures&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Unchanged, the data in &lt;code&gt;readings&lt;/code&gt; relates to &lt;code&gt;measures&lt;/code&gt; on the &lt;code&gt;readings.measure&lt;/code&gt; column:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;http://environment.data.gov.uk/flood-monitoring/id/measures/5312TH-level-stage-i-15_min-mASD&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;On &lt;code&gt;measures&lt;/code&gt; the &lt;code&gt;@id&lt;/code&gt; column matches this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;http://environment.data.gov.uk/flood-monitoring/id/measures/5312TH-level-stage-i-15_min-mASD&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But this is duplicated in the &lt;code&gt;notation&lt;/code&gt; column, minus the &lt;code&gt;http://environment.data.gov.uk/flood-monitoring/id/measures/&lt;/code&gt; URL prefix:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;5312TH-level-stage-i-15_min-mASD&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôll pre-process the &lt;code&gt;readings.measure&lt;/code&gt; column to strip this prefix to make the join easier (and simpler to debug, since you‚Äôre not wading through columns of long text).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_measuresstations&#34;&gt;Measures‚ÜíStations&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The station for which a reading was taken is found via the measure, since measures are unique to a station.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;On &lt;code&gt;measures&lt;/code&gt; the &lt;code&gt;station&lt;/code&gt; column is the foreign key:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;http://environment.data.gov.uk/flood-monitoring/id/stations/SP50_72&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Again, the URL prefix (&lt;code&gt;http://environment.data.gov.uk/flood-monitoring/id/stations/&lt;/code&gt;) is repeated and we‚Äôll strip that out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One thing that caught me out here is that the &lt;code&gt;station&lt;/code&gt; (minus the URL prefix) and the &lt;code&gt;stationReference&lt;/code&gt; are almost always the same.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Almost always.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I spent a bunch of time chasing down duplicates after the subsequent join to the fact table resulted in a fan-out, because &lt;code&gt;stationReference&lt;/code&gt; &lt;em&gt;isn‚Äôt unique&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stationReference&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;station&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;station&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stationReference&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stationReference&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;stationReference	station
4063TH	            4063TH-southern
4063TH	            4063TH-thames
E22300	            E22300-anglian
E22300	            E22300-southern
E22300	            E22300-southern
[‚Ä¶]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;26 rows out of 6612‚Ä¶enough to cause plenty of trouble when I made assumptions about the data I was eyeballing and missed the 0.4% exceptions‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It does state it clearly in the API doc; &lt;code&gt;station&lt;/code&gt; is the foreign key, not &lt;code&gt;stationReference&lt;/code&gt;.
RTFM, always ;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_dimension_tables&#34;&gt;Dimension tables&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Building the dimension tables is simple, if crude, enough.
With a &lt;code&gt;CREATE OR REPLACE&lt;/code&gt; we tell DuckDB to go ahead and create the table, and if it exists already, nuke it and create a fresh version.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The transformation we‚Äôll do is pretty light.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_measures&#34;&gt;Measures&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôre going to drop a couple of fields:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;@id&lt;/code&gt; we don‚Äôt need&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;latestReading&lt;/code&gt; holds fact data that we‚Äôre getting from elsewhere, so no point duplicating it here&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôll also transform the foreign key to strip the URL prefix making it easier to work with.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
            &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EXCLUDE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;latestReading&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;station&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://environment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gov&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;uk/flood-monitoring/id/stations/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;station&lt;/span&gt;
            &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures_stg&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is using a couple of my favourite recent discoveries in DuckDB‚Äîthe &lt;a href=&#34;https://duckdb.org/docs/stable/sql/expressions/star.html#exclude-clause&#34;&gt;&lt;code&gt;EXCLUDE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://duckdb.org/docs/stable/sql/expressions/star.html#replace-clause&#34;&gt;&lt;code&gt;REPLACE&lt;/code&gt;&lt;/a&gt; clauses.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With &lt;code&gt;EXCLUDE&lt;/code&gt; we‚Äôre taking advantage of &lt;code&gt;SELECT *&lt;/code&gt; to bring in all columns from the source table‚Äîwhich saves typing, but also means new columns added to the source will propagate automagically‚Äîbut &lt;em&gt;with the exception of&lt;/em&gt; ones that we don‚Äôt want.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;code&gt;REPLACE&lt;/code&gt; clause is a really elegant way of providing a &lt;em&gt;different version of the same column&lt;/em&gt;.
Since we want to retain the &lt;code&gt;station&lt;/code&gt; column but just trim the prefix, this is a great way to do it without moving its position in the column list.
The other option would have been to &lt;code&gt;EXCLUDE&lt;/code&gt; it too, and then add it on to the column list.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the table created let‚Äôs define the primary key as discussion above:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures_pk&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_stations&#34;&gt;Stations&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Very similar to the process above:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EXCLUDE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations_stg&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations_pk&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One thing that you might also do is move the primary key (&lt;code&gt;notation&lt;/code&gt;) to be the first column in the table.
This is a habit I picked up years ago; I don‚Äôt know if it‚Äôs still common practice.
To do it you‚Äôd &lt;code&gt;EXCLUDE&lt;/code&gt; the field and manually prefix it to the &lt;a href=&#34;https://duckdb.org/docs/stable/sql/expressions/star.html&#34;&gt;star expression&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EXCLUDE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations_stg&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations_pk&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;(If you do this, you‚Äôd want to logically do the same for the other tables&amp;#39; PKs too).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_fact_table&#34;&gt;Fact table&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is where things get fun :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Because we‚Äôre going to be adding to the table with new data rather than replacing it, we can‚Äôt just &lt;code&gt;CREATE OR REPLACE&lt;/code&gt; it each time.
Therefore we‚Äôll run the &lt;code&gt;CREATE&lt;/code&gt; as a one-off:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;EXISTS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EXCLUDE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_stg&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FALSE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A few notes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IF NOT EXISTS&lt;/code&gt; makes sure we don‚Äôt overwrite the table.
We‚Äôd get the same effect if we just put &lt;code&gt;CREATE TABLE&lt;/code&gt;, the only difference is the latter would fail if the table already exists, whilst &lt;code&gt;IF NOT EXISTS&lt;/code&gt; causes it to exit silently.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We‚Äôre going to &lt;code&gt;EXCLUDE&lt;/code&gt; the &lt;code&gt;@id&lt;/code&gt; column because we don‚Äôt need it&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This will only create the table using the schema projected by the &lt;code&gt;SELECT&lt;/code&gt;; the &lt;code&gt;WHERE FALSE&lt;/code&gt; means no rows will be selected.
This is so that we decouple the table &lt;em&gt;creation&lt;/em&gt; from its &lt;em&gt;population&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we‚Äôll add a primary key.
The key here is the time of the reading (&lt;code&gt;dateTime&lt;/code&gt;) plus the measure (&lt;code&gt;measure&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_pk&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_populating_the_fact_table&#34;&gt;Populating the fact table&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Our logic here is: &amp;#34;&lt;em&gt;Add data if it‚Äôs new, don‚Äôt throw an error if it already exists&amp;#34;&lt;/em&gt;.
Our primary key for this is the time of the reading and the measure.
If we receive a duplicate we‚Äôre going to ignore it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
We‚Äôre making a design choice here; in theory we could decide that a duplicate reading represents an update to the original (re-stating a fact that could have been wrong previously) and handle it as an &lt;code&gt;UPSERT&lt;/code&gt; (i.e. &lt;code&gt;INSERT&lt;/code&gt; if new, &lt;code&gt;UPDATE&lt;/code&gt; if existing).
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;DuckDB has some very nice syntax available around the &lt;code&gt;INSERT INTO ‚Ä¶ SELECT FROM&lt;/code&gt; pattern. To achieve what we want we use the self-documenting statement &lt;a href=&#34;https://duckdb.org/docs/stable/sql/statements/insert#insert-or-ignore-into&#34;&gt;&lt;code&gt;INSERT OR IGNORE&lt;/code&gt;&lt;/a&gt;. This is a condensed version of the more verbose &lt;code&gt;INSERT INTO‚Ä¶ SELECT FROM‚Ä¶ ON CONFLICT DO NOTHING&lt;/code&gt; syntax.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;IGNORE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
        &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EXCLUDE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
            &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://environment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gov&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;uk/flood-monitoring/id/measures/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_stg&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôre using the same &lt;code&gt;EXCLUDE&lt;/code&gt; and &lt;code&gt;REPLACE&lt;/code&gt; expressions as we did above; remove the &lt;code&gt;@id&lt;/code&gt; column, and strip the URL prefix from the foreign key &lt;code&gt;measure&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first time we run this we can see the number of INSERTS:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;changes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;5272&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then we re-run it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;changes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;   &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since nothing changed in the staging table, this makes sense.
Let‚Äôs load the staging table with the latest data again:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;changes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;4031&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_joining_the_data&#34;&gt;Joining the data&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Similar to the fact table above, we‚Äôre going to be incrementally loading this final, denormalised, table.
I‚Äôm taking a slightly roundabout tack to do this here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First, I‚Äôve defined a view which is the result of the join:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;VIEW&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;vw_readings_enriched&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt;  &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;r_&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\0&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COLUMNS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;
            &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;m_&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\0&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COLUMNS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;),&lt;/span&gt;
            &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;s_&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\0&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;COLUMNS&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt;
            &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;
            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;
            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;station&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
See &lt;a href=&#34;https://rmoff.net/2025/02/27/duckdb-tricks-renaming-fields-in-a-select-across-tables/&#34;&gt;my earlier blog post&lt;/a&gt; if you‚Äôre not familiar with the &lt;code&gt;COLUMNS&lt;/code&gt; syntax
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;From the view I create the table‚Äôs schema (but don‚Äôt populate anything yet):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;EXISTS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_enriched&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;vw_readings_enriched&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_enriched&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_enriched_pk&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r_dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r_measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And now populate it in the same way as we did for the &lt;code&gt;readings&lt;/code&gt; table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;IGNORE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_enriched&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;vw_readings_enriched&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_query_the_joined_data&#34;&gt;Query the joined data&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now that we‚Äôve got our joined data we can start to query and analyse it.
Here‚Äôs the five most recent readings for all water level measurements on the River Wharfe:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r_dateTime&lt;/span&gt;
		&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s_label&lt;/span&gt;
		&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r_value&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_enriched&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s_rivername&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;River Wharfe&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m_parameterName&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;Water Level&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r_dateTime&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;desc&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ     r_dateTime      ‚îÇ               s_label                ‚îÇ r_value ‚îÇ
‚îÇ      timestamp      ‚îÇ                 json                 ‚îÇ double  ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 2025-03-19 15:00:00 ‚îÇ &amp;#34;Kettlewell&amp;#34;                         ‚îÇ   0.171 ‚îÇ
‚îÇ 2025-03-19 15:00:00 ‚îÇ &amp;#34;Cock Beck Sluices&amp;#34;                  ‚îÇ   3.598 ‚îÇ
‚îÇ 2025-03-19 15:00:00 ‚îÇ &amp;#34;Nun Appleton Fleet Pumping Station&amp;#34; ‚îÇ   2.379 ‚îÇ
‚îÇ 2025-03-19 15:00:00 ‚îÇ &amp;#34;Tadcaster&amp;#34;                          ‚îÇ   0.227 ‚îÇ
‚îÇ 2025-03-19 15:00:00 ‚îÇ &amp;#34;Netherside Hall&amp;#34;                    ‚îÇ   0.319 ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_historical_data&#34;&gt;Historical data&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#readings&#34;&gt;The &lt;code&gt;readings&lt;/code&gt; API&lt;/a&gt; includes the option for specifying a date range.
However, there is a hard limit of 10000 rows, and a single time period‚Äôs readings for all stations is about 5000 rows, this doesn‚Äôt look like a viable option if we‚Äôre wanting to backfill data for all stations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Historic readings &lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#historic-readings&#34;&gt;are available&lt;/a&gt;, although in CSV format rather than the JSON we‚Äôre used to.
Nothing like real-world data engineering problems to keep us on our feet :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;http https://environment.data.gov.uk/flood-monitoring/archive/readings-2025-03-18.csv |head &lt;span style=&#34;color: #000080&#34;&gt;-n2&lt;/span&gt;
dateTime,measure,value
2025-03-18T00:00:00Z,http://environment.data.gov.uk/flood-monitoring/id/measures/531166-level-downstage-i-15_min-mAOD,49.362&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Fortunately, &lt;a href=&#34;https://duckdb.org/docs/stable/data/csv/overview&#34;&gt;DuckDB has us covered&lt;/a&gt;, and handles it in its stride:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;üü°‚óó SELECT * FROM &amp;#39;https://environment.data.gov.uk/flood-monitoring/archive/readings-2025-03-18.csv&amp;#39; LIMIT 1;
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ      dateTime       ‚îÇ                                             measure                                              ‚îÇ  value  ‚îÇ
‚îÇ      timestamp      ‚îÇ                                             varchar                                              ‚îÇ varchar ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 2025-03-18 00:00:00 ‚îÇ http://environment.data.gov.uk/flood-monitoring/id/measures/531166-level-downstage-i-15_min-mAOD ‚îÇ 49.362  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;‚Ä¶or &lt;em&gt;almost&lt;/em&gt; in its stride‚Äîonce I ran it on a full file I got this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CSV&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Line&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;388909&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Original&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Line&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #009999&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;T22&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Z&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;http&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;environment&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;gov&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;uk&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;flood&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;monitoring&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;690552&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_min&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;770&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;688&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;converting&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;column&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Could&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;convert&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;0.770|0.688&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;DOUBLE&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Column&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;being&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;converted&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;DOUBLE&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;This&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;was&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;auto&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;detected&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;CSV&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Bravo for such a verbose and useful error message.
Not just &amp;#34;there‚Äôs an error&amp;#34;, or &amp;#34;could not convert&amp;#34;, but tells you where, shows you the line, makes it super-easy to understand the problem and what to do.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What to do? Brush it under the carpet and pretend it didn‚Äôt happen!
In other words, &lt;code&gt;ignore_errors=true&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_historical&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;read_csv&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;https://environment.data.gov.uk/flood-monitoring/archive/readings-2025-03-18.csv&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ignore_errors&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This loads all 476k rows of data for 18th March into a new table.
Now we‚Äôll add the previous days too‚Äîand head out to the shell to do it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;‚ùØ duckdb env-agency.duckdb &lt;span style=&#34;color: #000080&#34;&gt;-c&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;INSERT INTO readings_historical SELECT * FROM read_csv(&amp;#39;https://environment.data.gov.uk/flood-monitoring/archive/readings-2025-03-16.csv&amp;#39;, ignore_errors=true);&amp;#34;&lt;/span&gt;
100% ‚ñï‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè
Run Time &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;)&lt;/span&gt;: real 16.405 user 1.090767 sys 0.516826&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Even more concise is the &lt;code&gt;COPY&lt;/code&gt; option:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;duckdb&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;agency&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;duckdb&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;COPY readings_historical FROM &amp;#39;https://environment.data.gov.uk/flood-monitoring/archive/readings-2025-03-14.csv&amp;#39; (IGNORE_ERRORS);&amp;#34;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Run&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;Time&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;):&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;real&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;275&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;718801&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;sys&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;247875&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Why am I doing this from the shell? So that I can then do this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;start_date&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;2025-01-01&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #008080&#34;&gt;end_date&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;2025-03-13&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color: #008080&#34;&gt;current_date&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$start_date&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$current_date&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &amp;lt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$end_date&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$current_date&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$end_date&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;]]&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;do
    &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;Processing &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$current_date&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;...&amp;#34;&lt;/span&gt;
    duckdb env-agency.duckdb &lt;span style=&#34;color: #000080&#34;&gt;-c&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;COPY readings_historical
        FROM &amp;#39;https://environment.data.gov.uk/flood-monitoring/archive/readings-&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$current_date&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;.csv&amp;#39;
        (IGNORE_ERRORS);&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;current_date&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;date&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-d&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$current_date&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt; + 1 day&amp;#34;&lt;/span&gt; +%Y-%m-%d&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In the &lt;code&gt;readings_historical&lt;/code&gt; table is now a nice big chunk of data (&lt;em&gt;not Big Data, just a big chunk of normally-size data&lt;/em&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/historical.png&#34; alt=&#34;historical&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now to merge this into the main table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;üü°‚óó&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;IGNORE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://environment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gov&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;uk/flood-monitoring/id/measures/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_historical&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Run&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;Time&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;):&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;real&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;003&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;002708&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;sys&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;000571&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Conversion&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Error&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Could&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;convert&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;0.772|0.692&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;DOUBLE&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here‚Äôs the problem with taking the easy route.
By letting DuckDB guess at the data types for the CSV data, we‚Äôve ended up with dodgy data being ingested.
How much dodgy data? 0.01%‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;üü°‚óó&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_historical&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TRY_CAST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;DOUBLE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ count_star() ‚îÇ
‚îÇ    int64     ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ     3202     ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It took a few minutes to load the historical data, so instead of ditching the table let‚Äôs just deal with what we‚Äôve got.
First up, what is the dodgy data?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;üü°‚óó&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_historical&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TRY_CAST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;DOUBLE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;USING&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SAMPLE&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ    value    ‚îÇ
‚îÇ   varchar   ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 2.415|2.473 ‚îÇ
‚îÇ 1.496|1.489 ‚îÇ
‚îÇ 1.730|1.732 ‚îÇ
‚îÇ 1.419|1.413 ‚îÇ
‚îÇ 1.587|1.586 ‚îÇ
‚îÇ 1.097|1.101 ‚îÇ
‚îÇ 1.032|1.033 ‚îÇ
‚îÇ 0.866|0.874 ‚îÇ
‚îÇ 0.864|0.862 ‚îÇ
‚îÇ 0.861|0.862 ‚îÇ
‚îÇ 0.386|0.387 ‚îÇ
‚îÇ 1.118|1.062 ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ   12 rows   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It looks like they all follow this pattern of two valid-looking values separated by a pipe &lt;code&gt;|&lt;/code&gt;.
We can double-check this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;üü°‚óó&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_historical&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;%|%&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TRY_CAST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;DOUBLE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ dateTime  ‚îÇ measure ‚îÇ  value  ‚îÇ
‚îÇ timestamp ‚îÇ varchar ‚îÇ varchar ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ            0 rows             ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôll make an executive decision to take the first value in these pairs, using &lt;code&gt;REPLACE&lt;/code&gt; to override the &lt;code&gt;value&lt;/code&gt; to split out the string and use the first instance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;IGNORE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://environment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gov&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;uk/flood-monitoring/id/measures/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;SPLIT_PART&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;|&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_historical&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;%|%&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we can load the rest of the data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;üü°‚óó&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;IGNORE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
                    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://environment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gov&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;uk/flood-monitoring/id/measures/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_historical&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;%|%&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #009999&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚ñï‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Run&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;Time&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;):&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;real&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;218&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;189&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;213&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;713807&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;sys&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;481680&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;changes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;37031770&lt;/span&gt;   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;total_changes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;37034972&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The data‚Äôs loaded:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;üü°‚óó&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;row_ct&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;min&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;min_dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;max&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;max_dateTime&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  row_ct  ‚îÇ    min_dateTime     ‚îÇ    max_dateTime     ‚îÇ
‚îÇ  int64   ‚îÇ      timestamp      ‚îÇ      timestamp      ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 37044275 ‚îÇ 2025-01-01 00:00:00 ‚îÇ 2025-03-20 15:25:10 ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now to load it into the denormalised table‚Äîfor this it‚Äôs the same query as when we‚Äôre just loading incremental changes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;IGNORE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_enriched&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;vw_readings_enriched&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_lets_operationalise_it&#34;&gt;Let‚Äôs &amp;#34;Operationalise&amp;#34; it&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs have a look at a &lt;em&gt;very&lt;/em&gt; rough way of running the update for this pipeline automatically.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôll create a SQL script to update the dimension data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;dimensions.sql&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- Load the staging data from the REST API&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures_stg&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;src&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;read_json&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;https://environment.data.gov.uk/flood-monitoring/id/measures&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNNEST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;u&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations_stg&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;src&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;read_json&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;https://environment.data.gov.uk/flood-monitoring/id/stations&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNNEST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;u&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- Rebuild dimension tables&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
            &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EXCLUDE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;latestReading&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;station&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://environment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gov&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;uk/flood-monitoring/id/stations/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                        &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;station&lt;/span&gt;
            &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures_stg&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures_pk&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EXCLUDE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations_stg&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations_pk&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and load the fact data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;fact.sql&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- Load the staging data from the REST API&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_stg&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;src&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;read_json&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;https://environment.data.gov.uk/flood-monitoring/data/readings?latest&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNNEST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;u&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- Merge into the fact table&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;IGNORE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
        &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EXCLUDE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
            &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://environment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gov&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;uk/flood-monitoring/id/measures/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_stg&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- Merge into the denormalised table&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;IGNORE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_enriched&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;vw_readings_enriched&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now to schedule it.
An entire industry has been built around workflow scheduling tools;
I‚Äôm going to stick to the humble &lt;code&gt;cron&lt;/code&gt;.
It‚Äôs simple, it‚Äôs quick, and LLMs have now learnt how to write the syntax ;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/crontab.png&#34; alt=&#34;crontab&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Well, the syntax to invoke DuckDB is a bit different from what Claude thought, but the fiddly &lt;code&gt;*/15&lt;/code&gt; stuff it nailed.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here‚Äôs the crontab I set up (&lt;code&gt;crontab -e&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Run the pipeline every 15 minutes&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;/15 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;cd&lt;/span&gt; ~/env-agency/ &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; /opt/homebrew/bin/duckdb env-agency.duckdb &lt;span style=&#34;color: #000080&#34;&gt;-f&lt;/span&gt; dimensions.sql &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; /opt/homebrew/bin/duckdb env-agency.duckdb &lt;span style=&#34;color: #000080&#34;&gt;-f&lt;/span&gt; fact.sql&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Every fifteen minutes this pulls down the latest data, rebuilds the dimension tables, and adds the new data to the fact table.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_analysing_the_data&#34;&gt;Analysing the data&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs finish off by looking at how we can analyse the data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_metabase&#34;&gt;Metabase&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Metabase is fairly quick to get up and running.
The complication is that to query DuckDB you need &lt;a href=&#34;https://github.com/motherduckdb/metabase_duckdb_driver&#34;&gt;a driver that Motherduck have created&lt;/a&gt; that I couldn‚Äôt get to work under Docker, hence running Metabase locally:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# You need Java 21&lt;/span&gt;
sdk &lt;span style=&#34;color: #0086B3&#34;&gt;install &lt;/span&gt;java 21.0.6-tem

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Download Metabase &amp;amp; Metaduck&lt;/span&gt;
&lt;span style=&#34;color: #0086B3&#34;&gt;mkdir &lt;/span&gt;metabase
curl https://downloads.metabase.com/v0.53.7/metabase.jar &lt;span style=&#34;color: #000080&#34;&gt;-O&lt;/span&gt;
&lt;span style=&#34;color: #0086B3&#34;&gt;mkdir &lt;/span&gt;plugins &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;pushd &lt;/span&gt;plugins &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; curl https://github.com/motherduckdb/metabase_duckdb_driver/releases/download/0.2.12-b/duckdb.metabase-driver.jar &lt;span style=&#34;color: #000080&#34;&gt;-O&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;popd&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Run metabase&lt;/span&gt;
java &lt;span style=&#34;color: #000080&#34;&gt;--add-opens&lt;/span&gt; java.base/java.nio&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;ALL-UNNAMED &lt;span style=&#34;color: #000080&#34;&gt;-jar&lt;/span&gt; metabase.jar&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This launches Metabase on &lt;a href=&#34;http://localhost:3000&#34; class=&#34;bare&#34;&gt;http://localhost:3000&lt;/a&gt;, and after an annoying on-boarding survey, it‚Äôs remarkably quick to get something created.
Adding the database is simple enough:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/metabase-add-db.png&#34; alt=&#34;metabase add db&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once you‚Äôve done that Metabase automagically (&lt;em&gt;I‚Äôm surprised it doesn‚Äôt say &amp;#34;AI&amp;#34; when it does it&lt;/em&gt;) offers a summary of the data in the table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/metabase-wizard.png&#34; alt=&#34;metabase wizard&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It‚Äôs not a bad starter for ten; the count of rows is useful from a data-completeness point of view.
We‚Äôd need to do some work to define the &lt;code&gt;value&lt;/code&gt; metric and perhaps some geographic hierarchies‚Äîbut there‚Äôs definitely lots of potential.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/metabase-db.png&#34; alt=&#34;metabase db&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can also poke around in the data itself with a tabular slice &amp;amp; dice approach:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/metbase-table.png&#34; alt=&#34;metbase table&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_rill&#34;&gt;Rill&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I used &lt;a href=&#34;https://www.rilldata.com/&#34;&gt;Rill&lt;/a&gt; &lt;a href=&#34;https://rmoff.net/2025/02/28/exploring-uk-environment-agency-data-in-duckdb-and-rill/&#34;&gt;previously&lt;/a&gt; and liked it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Getting it up and running is easy:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Install‚Ä¶&lt;/span&gt;
curl https://rill.sh | sh

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# ‚Ä¶and go!&lt;/span&gt;
rill start rill-env-agency&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Rill supports DuckDB out of the box, so adding our data source is easy:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/rill-add.png&#34; alt=&#34;rill add&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Who can resist a bit of AI magic?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/rill-ai.png&#34; alt=&#34;rill ai&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As with Metabase, it‚Äôs a pretty good starting point for customising into what you want to analyse.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/rill-db.png&#34; alt=&#34;rill db&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With a bit of playing around you can create a nice comparison between January and February‚Äôs readings for stations on a given river:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/rill-compare.png&#34; alt=&#34;rill compare&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I couldn‚Äôt figure out how to plot a time series of values for a series of data, but as my children would say to me, that‚Äôs probably a skill issue on my part‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_superset&#34;&gt;Superset&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is a bit heavier to install than Metabase, and definitely more so than Rill.
After an &lt;a href=&#34;https://github.com/apache/superset/discussions/25963&#34;&gt;aborted attempt&lt;/a&gt; to install it locally I went the Docker route even though it meant a bit of fiddling to get the DuckDB dependency installed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Follow the &lt;a href=&#34;https://superset.apache.org/docs/quickstart/&#34;&gt;steps in the Quickstart&lt;/a&gt; to clone the repo, and then modify the &lt;code&gt;command&lt;/code&gt; for the &lt;code&gt;superset&lt;/code&gt; service to install the DuckDB dependencies before launching Superset itself:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;yaml&#34;&gt;    &lt;span style=&#34;color: #008080&#34;&gt;command&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;sh&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;-c&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;pip&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;install&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;duckdb&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;duckdb-engine&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;/app/docker/docker-bootstrap.sh&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;app-gunicorn&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now bring up Superset:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;docker compose &lt;span style=&#34;color: #000080&#34;&gt;-f&lt;/span&gt; docker-compose-image-tag.yml up&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You‚Äôll find Superset at &lt;a href=&#34;http://localhost:8088‚Äînote&#34; class=&#34;bare&#34;&gt;http://localhost:8088‚Äînote&lt;/a&gt; that it does take a few minutes to boot up, so don‚Äôt be impatient if it doesn‚Äôt seem to be working straight away.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After quite a lot of fiddling around to get this far, I realised that my DuckDB file is on my host machine, not in the Docker container.
I couldn‚Äôt just mount it as a volume as there are already volumes mounted using a syntax I wasn‚Äôt familiar with how to add to:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;yaml&#34;&gt;    &lt;span style=&#34;color: #008080&#34;&gt;volumes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #008080&#34;&gt;*superset-volumes&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Instead I just did a bit of a hack and copied the file onto the container:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;docker compose &lt;span style=&#34;color: #0086B3&#34;&gt;cp&lt;/span&gt; ~/env-agency/env-agency.duckdb superset:/tmp/&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Finally, within Superset, I could add the database (Settings ‚Üí Manage Databases).
Somewhat confusingly, if you select &amp;#34;DuckDB&amp;#34; as the type, you‚Äôre asked for &amp;#34;DuckDB Credentials&amp;#34; and a Motherduck access token; click the small &lt;code&gt;Connect this database with a SQLAlchemy URI string instead&lt;/code&gt; link (or just select &amp;#34;Other&amp;#34; database type in the first place).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Specify the &lt;em&gt;local path&lt;/em&gt; to your DuckDB file, for example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;duckdb:////tmp/env-agency.duckdb&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/ss-db.png&#34; alt=&#34;ss db&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Next, create a Dataset‚Äîselect the database you just defined, and the &lt;code&gt;readings_enriched&lt;/code&gt; table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/ss-ds.png&#34; alt=&#34;ss ds&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After all that, fortunately, Superset has a rich set of functionality particularly when it comes to charting.
I did hit frequent time-outs when experimenting, but managed to create a nice time-series chart fairly easily:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/ss-viz1.png&#34; alt=&#34;ss viz1&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_wrapping_up&#34;&gt;Wrapping up&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/03/overview.excalidraw.svg&#34; alt=&#34;overview.excalidraw&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôve &lt;del&gt;built&lt;/del&gt; cobbled together a pipeline that extracts data from a set of REST APIs, applies some light cleansing and transformation, and loads it into a DuckDB table from where it can be queried and analysed.
With &lt;code&gt;cron&lt;/code&gt; we‚Äôve automated the refresh of this data every fifteen minutes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The total bill of materials is approximately:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1 x DuckDB&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;14 SQL statements (16 if you include historical backfill)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1 ropey cron job&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Would this pass muster in a real deployment?
You tell me :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;My guess is that I‚Äôd not want to be on the hook to support it, but it‚Äôd do the job until it didn‚Äôt.
That is, as a prototype with sound modelling to expand on later it‚Äôs probably good enough.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But I‚Äôd love to hear from folk who are building this stuff for real day in, day out.
What did I overlook here?
Is doing it in DuckDB daft?
Let me know on &lt;a href=&#34;https://bsky.app/profile/rmoff.net&#34;&gt;Bluesky&lt;/a&gt; or &lt;a href=&#34;https://www.linkedin.com/in/robinmoffatt&#34;&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
You can find the full set of SQL files to run this &lt;a href=&#34;https://gist.github.com/rmoff/461fd169843063fc1b9b3113759ff5b6&#34;&gt;here&lt;/a&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Exporting Notebooks from DuckDB UI</title>
      <link>https://rmoff.net/2025/03/19/exporting-notebooks-from-duckdb-ui/</link>
      <pubDate>2025-03-19</pubDate>
      
      <guid>https://rmoff.net/2025/03/19/exporting-notebooks-from-duckdb-ui/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/03/t_IMG_8368.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;DuckDB added a very cool &lt;a href=&#34;https://duckdb.org/2025/03/12/duckdb-ui.html&#34;&gt;UI&lt;/a&gt; last week and &lt;a href=&#34;https://rmoff.net/2025/03/14/kicking-the-tyres-on-the-new-duckdb-ui/&#34;&gt;I‚Äôve been using it&lt;/a&gt; as my primary interface to DuckDB since.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One thing that bothered me was that the SQL I was writing in the notebooks wasn‚Äôt exportable.
Since DuckDB uses DuckDB in the background for storing notebooks, getting the SQL out is easy enough.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here‚Äôs a rough-and-readyscript that will dump it out to a series of &lt;code&gt;.sql&lt;/code&gt; files, one per notebook.
It &lt;em&gt;only&lt;/em&gt; exports the SQL; any other data like &lt;code&gt;useDatabase&lt;/code&gt; and &lt;code&gt;isActive&lt;/code&gt; is not included.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# @rmoff / 2025-03-19&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Create a temporary file for the JSON output&lt;/span&gt;
&lt;span style=&#34;color: #008080&#34;&gt;temp_file&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;mktemp&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Run the DuckDB query and save the output to the temp file&lt;/span&gt;
duckdb &lt;span style=&#34;color: #000080&#34;&gt;-json&lt;/span&gt; ~/.duckdb/extension_data/ui/ui.db &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-c&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;select title,json from ui.main.notebook_versions where expires is null&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        | &lt;span style=&#34;color: #0086B3&#34;&gt;grep&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-v&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;^Run Time&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$temp_file&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Create a directory with timestamp for the output&lt;/span&gt;
&lt;span style=&#34;color: #008080&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;date&lt;/span&gt; +&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;%Y%m%d_%H%M%S&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #008080&#34;&gt;output_dir&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;DuckDB_notebooks_&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #0086B3&#34;&gt;mkdir&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-p&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$output_dir&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Process the JSON output&lt;/span&gt;
jq &lt;span style=&#34;color: #000080&#34;&gt;-c&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.[]&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$temp_file&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;while &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;read&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; item&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;do&lt;/span&gt;

    &lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Extract title&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$item&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.title&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;

    &lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Create a sanitized filename from the title&lt;/span&gt;
    &lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Replace spaces with underscores and remove special characters&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$title&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | &lt;span style=&#34;color: #0086B3&#34;&gt;tr&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt; | &lt;span style=&#34;color: #0086B3&#34;&gt;tr&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-cd&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;a-zA-Z0-9_-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt;.sql

    &lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Extract all queries from the notebook JSON and save them to the file&lt;/span&gt;
    &lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Credit to Hayley Jane Wakenshaw for the Duck ASCII art :)&lt;/span&gt;
    &lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$item&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; | jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.json&amp;#39;&lt;/span&gt; | jq &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.cells[] | &amp;#34;\n--           _      _      _\n--         &amp;gt;(.)__ &amp;lt;(.)__ =(.)__\n--          (___/  (___/  (___/ \n-- ¬∞¬∫¬§√∏,¬∏¬∏,√∏¬§¬∫¬∞`¬∞¬∫¬§√∏,¬∏,√∏¬§¬∞¬∫¬§√∏,¬∏¬∏,√∏¬§¬∫¬∞`¬∞¬∫¬§√∏,¬∏\n\n&amp;#34; + .query&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$output_dir&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;Created file: &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$filename&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;done&lt;/span&gt;

&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;# Clean up the temporary file&lt;/span&gt;
&lt;span style=&#34;color: #0086B3&#34;&gt;rm&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$temp_file&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;All notebook queries have been saved to individual files in folder &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$output_dir&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;.&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #0086B3&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;To create a new gist run: gh gist create --desc &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;DuckDB UI Notebook export &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$timestamp&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$output_dir&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;/*.sql&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In use it looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;Created file: Load_historical_data.sql
Created file: Load_latest_data.sql
Created file: Buildadd_to_main_tables.sql
Created file: Join_and_Analyse.sql
Created file: Untitled_Notebook.sql
All notebook queries have been saved to individual files &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;in &lt;/span&gt;folder DuckDB_notebooks_20250319_170611.

To create a new gist run: gh gist create DuckDB_notebooks_20250319_170611/&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;.sql&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I use it to then upload the SQL to gist (the &lt;a href=&#34;https://cli.github.com/&#34;&gt;GitHub CLI tool &lt;code&gt;gh&lt;/code&gt;&lt;/a&gt; is awesome, install it if you haven‚Äôt already!) with:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;‚ùØ gh gist create &lt;span style=&#34;color: #000080&#34;&gt;--desc&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;DuckDB UI Notebook export 20250319_170851&amp;#34;&lt;/span&gt; DuckDB_notebooks_20250319_170851/&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;.sql
- Creating gist with multiple files
‚úì Created secret gist Buildadd_to_main_tables.sql
https://gist.github.com/rmoff/7c681529754a74d7e8f6bff31e069d5b&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/duckdb-ui-gist.webp&#34; alt=&#34;DuckDB UI Notebook export to gist&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
For other DuckDB UI notebook export ideas, see &lt;a href=&#34;https://github.com/duckdb/duckdb-ui/issues/60&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://www.linkedin.com/posts/jimmy-jensen_the-new-duckdb-ui-has-been-a-blast-to-work-activity-7306638115887063040-fNuy/?rcm=ACoAACxkZnABX3mxGA-OnJm4UtaYTTOWIqL3sUw&#34;&gt;here&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Kicking the tyres on the new DuckDB UI</title>
      <link>https://rmoff.net/2025/03/14/kicking-the-tyres-on-the-new-duckdb-ui/</link>
      <pubDate>2025-03-14</pubDate>
      
      <guid>https://rmoff.net/2025/03/14/kicking-the-tyres-on-the-new-duckdb-ui/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/03/CleanShot2025-03-14at12.04.28@2x.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I wrote a couple of weeks ago about &lt;a href=&#34;https://rmoff.net/2025/02/28/exploring-uk-environment-agency-data-in-duckdb-and-rill/&#34;&gt;using DuckDB and Rill Data&lt;/a&gt; to explore a new data source that I‚Äôm working with.
I wanted to understand the data‚Äôs structure and distribution of values, as well as how different entities related.
This week DuckDB 1.2.1 was released and that little 0.0.1 version boost brought with it the &lt;a href=&#34;https://duckdb.org/2025/03/12/duckdb-ui.html&#34;&gt;DuckDB UI&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here I‚Äôll go through the same process as I did before, and see how much of what I was doing can be done in DuckDB alone now.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Launching the UI couldn‚Äôt be simpler really:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;‚ùØ duckdb &lt;span style=&#34;color: #000080&#34;&gt;-ui&lt;/span&gt;
&lt;span style=&#34;color: #000080&#34;&gt;--&lt;/span&gt; Loading resources from /Users/rmoff/.duckdbrc
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                result                ‚îÇ
‚îÇ               varchar                ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ UI started at http://localhost:4213/ ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It opens up a blank page, from which I selected &lt;strong&gt;Give me an empty notebook&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at11.35.06@2x.webp&#34; alt=&#34;CleanShot2025 03 14at11.35.06@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It‚Äôs a notebook.
If you‚Äôre familiar with Jupyter or Zeppelin you‚Äôll be right at home.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I‚Äôll paste my &lt;code&gt;CREATE TABLE&lt;/code&gt; statements in that fetch the data from the API. Press ctrl-enter to run it. All very nice, all very intuitive.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now I have tables:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at11.37.01@2x.webp&#34; alt=&#34;CleanShot2025 03 14at11.37.01@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I‚Äôll explode the JSON array into a new table.
Note the distribution details of the data in each field for the table.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at11.47.57@2x.webp&#34; alt=&#34;CleanShot2025 03 14at11.47.57@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Nice auto-complete (as you‚Äôd kinda expect these days anyway‚Äîbut good to see nonetheless)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at11.48.53@2x.webp&#34; alt=&#34;CleanShot2025 03 14at11.48.53@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Very usable interface for exploring the data&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at11.50.38@2x.webp&#34; alt=&#34;CleanShot2025 03 14at11.50.38@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Filtering the returned data is easy, as is changing the order and visibility of columns&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at11.54.20@2x.webp&#34; alt=&#34;CleanShot2025 03 14at11.54.20@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Pivoting is a nice touch for starting to understand hierarchies within the data&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at11.56.28@2x.webp&#34; alt=&#34;CleanShot2025 03 14at11.56.28@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But careful, you can also break things ;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at11.55.06@2x.webp&#34; alt=&#34;CleanShot2025 03 14at11.55.06@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When we join the tables it‚Äôs easy to see all the columns.
This is what previously had me breaking out of DuckDB CLI and out to Rill Data.
With DuckDB UI it‚Äôs totally usable for exploring the data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at12.00.35.gif&#34; alt=&#34;CleanShot2025 03 14at12.00.35&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Looking at &lt;a href=&#34;https://rmoff.net/2025/02/28/exploring-uk-environment-agency-data-in-duckdb-and-rill/&#34;&gt;what I did in Rill&lt;/a&gt; I can do easily in DuckDB UI.
Here‚Äôs the &lt;code&gt;measures&lt;/code&gt; table data summary in DuckDB UI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at12.04.28@2x.webp&#34; alt=&#34;CleanShot2025 03 14at12.04.28@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The same column detail is available too:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at12.04.56@2x.webp&#34; alt=&#34;CleanShot2025 03 14at12.04.56@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Following on &lt;a href=&#34;https://rmoff.net/2025/02/28/exploring-uk-environment-agency-data-in-duckdb-and-rill/&#34;&gt;the analysis I did before&lt;/a&gt;, I can get the same breakdown of the &lt;code&gt;dateTime&lt;/code&gt; field in &lt;code&gt;readings&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at12.07.41@2x.webp&#34; alt=&#34;CleanShot2025 03 14at12.07.41@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Along with the same cardinality information on the &lt;code&gt;measure&lt;/code&gt; field that highlighted I had a problem in my understanding of the API since I only had data for one measure:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at12.08.10@2x.webp&#34; alt=&#34;CleanShot2025 03 14at12.08.10@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What DuckDB UI &lt;strong&gt;doesn‚Äôt&lt;/strong&gt; seem to do (yet?) is be able to create a chart on the output of a query; it‚Äôs only a flat or pivot table that‚Äôs possible.
For that, I‚Äôd still need Rill, which is what this is taken from:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/rillchart.webp&#34; alt=&#34;rillchart&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 1. Charting data in Rill Data&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, back to the exploration in DuckDB UI.
We‚Äôve realised that we need to pull in more data, so rebuild the &lt;code&gt;readings&lt;/code&gt; table using the &lt;code&gt;readings?today&lt;/code&gt; API endpoint&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at12.12.56@2x.webp&#34; alt=&#34;CleanShot2025 03 14at12.12.56@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It seems the UI maybe has a little bug, because the &lt;code&gt;readings&lt;/code&gt; table didn‚Äôt update its data summary (even after clicking onto another table and back to &lt;code&gt;readings&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at12.13.34@2x.webp&#34; alt=&#34;CleanShot2025 03 14at12.13.34@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I ended up creating a clone of the table (&lt;code&gt;readings2&lt;/code&gt;) and this showed the expected row count and associated data properties:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at12.15.21@2x.webp&#34; alt=&#34;CleanShot2025 03 14at12.15.21@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You also get some nice statistical breakdowns of metric fields:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot2025-03-14at12.16.13@2x.webp&#34; alt=&#34;CleanShot2025 03 14at12.16.13@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Notebooks are awesome. DuckDB is awesome. DuckDB with embedded notebooks? HELL YEAH!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There‚Äôs plenty of scope for development of the DuckDB UI, with things like charting of results and more interactivity over fields (e.g. click a cell and apply a filter on its value).
But even at it stands now, it‚Äôs a superb addition to an already amazing tool.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Creating an HTTP Source connector on Confluent Cloud from the CLI</title>
      <link>https://rmoff.net/2025/03/13/creating-an-http-source-connector-on-confluent-cloud-from-the-cli/</link>
      <pubDate>2025-03-13</pubDate>
      
      <guid>https://rmoff.net/2025/03/13/creating-an-http-source-connector-on-confluent-cloud-from-the-cli/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/03/t_IMG_6004.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this blog article I‚Äôll show you how you can use the &lt;a href=&#34;https://docs.confluent.io/confluent-cli/current/overview.html&#34;&gt;&lt;code&gt;confluent&lt;/code&gt; CLI&lt;/a&gt; to set up a Kafka cluster on Confluent Cloud, the necessary API keys, and then a managed connector.
The connector I‚Äôm setting up is the &lt;a href=&#34;https://docs.confluent.io/cloud/current/connectors/cc-http-source-v2.html&#34;&gt;HTTP Source (v2)&lt;/a&gt; connector.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/managed-http-connector.webp&#34; alt=&#34;managed http connector&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It‚Äôs part of a pipeline that I‚Äôm working on to pull in &lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference&#34;&gt;a feed of data from the UK Environment Agency&lt;/a&gt; for processing.
The data is spread across three endpoints, and one of the nice features of the HTTP Source (v2) connector is that one connector can pull data from more than one endpoint.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As part of learning about Confluent Cloud and its support for Kafka Connect, I wanted to understand how to configure fully-managed connectors from the CLI.
The UI is nice, but the CLI is repeatable.
Whilst there is &lt;a href=&#34;https://registry.terraform.io/providers/confluentinc/confluent/latest/docs/resources/confluent_connector&#34;&gt;Terraform support for resources in Confluent Cloud&lt;/a&gt;, I‚Äôve yet to learn Terraform so this would take me off a whole different yak-shaving path that I‚Äôm going to save for another day.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_setup&#34;&gt;Setup&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To start with, login to Confluent Cloud:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ confluent login --save&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
To &lt;em&gt;actually&lt;/em&gt; start with, you need to go and &lt;a href=&#34;https://www.confluent.io/en-gb/get-started/&#34;&gt;sign up for Confluent Cloud&lt;/a&gt; (which you can even do from the CLI with &lt;code&gt;confluent cloud-signup&lt;/code&gt;!). Then come back here :)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we‚Äôll create an environment within our organisation and set it as the active environment for the CLI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ confluent environment create rmoff

# The above command with return an ID for the environment, which
# is what you specify in the next command here
$ confluent environment use env-253ngy&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What does any environment need? A Kafka cluster!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ confluent kafka cluster create cluster00 --cloud aws --region us-west-2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The output of this command tells us various things about the cluster, including its ID and broker.
I‚Äôm going to store these in local environment variables to make things easier later on when we want to use them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;+----------------------+---------------------------------------------------------+
[‚Ä¶]
| ID                   | lkc-qnygo6                                              |
| Endpoint             | SASL_SSL://pkc-rgm37.us-west-2.aws.confluent.cloud:9092 |
[‚Ä¶]
+----------------------+---------------------------------------------------------+

$ export CNFL_ENV=env-253ngy
$ export CNFL_KAFKA_CLUSTER=lkc-qnygo6
$ export CNFL_KAFKA_BROKER=pkc-rgm37.us-west-2.aws.confluent.cloud:9092&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Having created the cluster, we‚Äôll set it as the active one for our CLI session:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ confluent kafka cluster use $CNFL_KAFKA_CLUSTER
Set Kafka cluster lkc-qnygo6 as the active cluster for environment env-253ngy.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When we created the cluster we got a Schema Registry with it‚Äîwe need to get the ID and endpoint details:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ confluent schema-registry cluster describe
+----------------------+----------------------------------------------------+
| Name                 | Always On Stream Governance                        |
|                      | Package                                            |
| Cluster              | lsrc-g70zm3                                        |
| Endpoint URL         | https://psrc-13go8y7.us-west-2.aws.confluent.cloud |
[‚Ä¶]
+----------------------+----------------------------------------------------+

export CNFL_SR_HOST=psrc-13go8y7.us-west-2.aws.confluent.cloud
export CNFL_SR_ID=lsrc-g70zm3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_api_keys&#34;&gt;API Keys&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
I‚Äôm &lt;em&gt;obviously&lt;/em&gt; not sharing the actual API keys generated by the commands below, and have instead put placeholders.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We need to create some API keys for the calls we‚Äôre going to be making to interact with the cluster.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First, one for the Kafka cluster itself:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ confluent api-key create --resource $CNFL_KAFKA_CLUSTER
It may take a couple of minutes for the API key to be ready.
Save the API key and secret. The secret is not retrievable later.
+------------+------------------------------------------------------------------+
| API Key    | (XXXmy-kafka-api-keyXXX)                                         |
| API Secret | (XXXmy-kafka-api-secretXXX)                                      |
+------------+------------------------------------------------------------------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then one for the cloud resources:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ confluent api-key create --resource cloud
It may take a couple of minutes for the API key to be ready.
Save the API key and secret. The secret is not retrievable later.
+------------+------------------------------------------------------------------+
| API Key    | (XXXmy-cloud-api-keyXXX)                                         |
| API Secret | (XXXmy-cloud-api-secretXXX)                                      |
+------------+------------------------------------------------------------------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Finally, for the Schema Registry:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ confluent api-key create --resource $CNFL_SR_ID
It may take a couple of minutes for the API key to be ready.
Save the API key and secret. The secret is not retrievable later.
+------------+------------------------------------------------------------------+
| API Key    | (XXXmy-schema-registry-api-keyXXX)                               |
| API Secret | (XXXmy-schema-registry-api-secretXXX)                            |
+------------+------------------------------------------------------------------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Having done this, we‚Äôll store the API keys and secrets in local environment variables to make it easy to re-use them later on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;export CNFL_KC_API_KEY=(XXXmy-kafka-api-keyXXX)
export CNFL_KC_API_SECRET=(XXXmy-kafka-api-secretXXX)

export CNFL_CLOUD_API_KEY=(XXXmy-cloud-api-keyXXX)
export CNFL_CLOUD_API_SECRET=(XXXmy-cloud-api-secretXXX)

export CNFL_SR_API_KEY=(XXXmy-schema-registry-api-keyXXX)
export CNFL_SR_API_SECRET=(XXXmy-schema-registry-api-secretXXX)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Warning&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Storing API details in environment variables is a risky thing to do if anyone were to get hold of your machine, your bash history, etc etc. There are much better ways to manage secrets; I‚Äôm just taking the easy (but insecure) route here.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_confluent_cloud_api&#34;&gt;The Confluent Cloud API&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can use the &lt;a href=&#34;https://docs.confluent.io/confluent-cli/current/command-reference/connect/cluster/confluent_connect_cluster_create.html#confluent-connect-cluster-create&#34;&gt;&lt;code&gt;confluent&lt;/code&gt; CLI to create connectors&lt;/a&gt;, but I ended up using a REST call directly.
If you do use the &lt;code&gt;confluent&lt;/code&gt; CLI note that the terminology is to create a Connect &amp;#34;Cluster&amp;#34;, rather than a connector.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html&#34;&gt;Confluent Cloud API&lt;/a&gt; uses an API key for authentication.
For working with connectors the API key should be created for access to the &lt;code&gt;cloud&lt;/code&gt; resource (see &lt;code&gt;confluent api-key create --resource cloud&lt;/code&gt; above).
The docs show how to create an &lt;code&gt;Authorization&lt;/code&gt; header with a base64-encoded representation of the API key.
A simpler way is to pass it as a username/password combo, separated by a colon (i.e. &lt;code&gt;API_KEY:API_SECRET&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In &lt;code&gt;curl&lt;/code&gt; you use &lt;code&gt;--user&lt;/code&gt; like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl --request GET \
      --url https://api.confluent.cloud/org/v2/organizations \
      --user &amp;#34;(XXXmy-cloud-api-keyXXX):(XXXmy-cloud-api-secretXXX)&amp;#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using &lt;a href=&#34;https://httpie.io/&#34;&gt;httpie&lt;/a&gt; (my favourite tool for this kind of stuff) it‚Äôs &lt;code&gt;--auth&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;http GET https://api.confluent.cloud/org/v2/organizations \
      --auth &amp;#34;(XXXmy-cloud-api-keyXXX):(XXXmy-cloud-api-secretXXX)&amp;#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_create_an_http_source_connector_for_a_single_endpoint&#34;&gt;Create an HTTP Source connector for a single endpoint&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôll start simple and make sure that this thing works for a single endpoint.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;http PUT \
    &amp;#34;https://api.confluent.cloud/connect/v1/environments/$CNFL_ENV/clusters/$CNFL_KAFKA_CLUSTER/connectors/env-agency--flood-monitoring-stations/config&amp;#34; \
    --auth &amp;#34;$CNFL_CLOUD_API_KEY:$CNFL_CLOUD_API_SECRET&amp;#34; \
    content-type:application/json \
    connector.class=&amp;#34;HttpSourceV2&amp;#34; \
    name=&amp;#34;&amp;#34; \
    http.api.base.url=&amp;#34;https://environment.data.gov.uk/flood-monitoring&amp;#34; \
    api1.http.api.path=&amp;#34;/id/stations&amp;#34; \
    api1.http.offset.mode=&amp;#34;SIMPLE_INCREMENTING&amp;#34; \
    api1.http.initial.offset=&amp;#34;0&amp;#34; \
    api1.request.interval.ms=&amp;#34;3600000&amp;#34; \
    api1.topics=&amp;#34;flood-monitoring-stations&amp;#34; \
    kafka.api.key=$CNFL_KC_API_KEY \
    kafka.api.secret=$CNFL_KC_API_SECRET \
    output.data.format=&amp;#34;AVRO&amp;#34; \
    tasks.max=&amp;#34;1&amp;#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The documentation for the connector details all of &lt;a href=&#34;https://docs.confluent.io/cloud/current/connectors/cc-http-source-v2.html#configuration-properties&#34;&gt;the configuration options&lt;/a&gt;.
Let‚Äôs take a look at what we‚Äôre going to configure:&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 25%;&#34;/&gt;
&lt;col style=&#34;width: 50%;&#34;/&gt;
&lt;col style=&#34;width: 25%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Property&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Value&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;connector.class&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;HttpSourceV2&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;This is the connector type we‚Äôre going to use.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;This config value isn‚Äôt used, but the element must be specified for the config to be valid. The name of the connector is taken from the URL path (see below).&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;http.api.base.url&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;&lt;code&gt;https://environment.data.gov.uk/flood-monitoring&lt;/code&gt;&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;The base URL for the API endpoint.
This will make a lot of sense later when we define more than one endpoint.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;api1.http.api.path&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;/id/stations&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;The path to the API endpoint (to be added to the base URL)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;api1.http.offset.mode&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;SIMPLE_INCREMENTING&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34; rowspan=&#34;2&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Since the endpoint provides a full set of the data each time we query it, these two settings are necessary to tell the connector to expect this and not try to page through the endpoint.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;api1.http.initial.offset&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;0&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;api1.request.interval.ms&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;3600000&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Poll the endpoint once an hour (60 minutes / 3600 seconds / 3600000 ms)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;api1.topics&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;flood-monitoring-stations&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Which topic to write the endpoint response to&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;output.data.format&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;AVRO&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;How to serialise the data when writing it&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;kafka.api.key&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;$CNFL_KC_API_KEY&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34; rowspan=&#34;2&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Credentials that the connector will use to write to the Kafka cluster&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;kafka.api.secret&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;$CNFL_KC_API_SECRET&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;tasks.max&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;1&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;How many tasks the connector can run (less relevant for a single endpoint, but important when we add more later)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Confluent Cloud REST API endpoint that we‚Äôre going to send this data to is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;https://api.confluent.cloud/connect/v1/environments/$CNFL_ENV/clusters/$CNFL_KAFKA_CLUSTER/connectors/flood-monitoring-stations/config&amp;#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The component parts are broken out like this:&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 50%;&#34;/&gt;
&lt;col style=&#34;width: 50%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;Value&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;URL Element&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;&lt;code&gt;https://api.confluent.cloud/connect/v1&lt;/code&gt;&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;em&gt;[fixed]&lt;/em&gt; Base URL&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;$CNFL_ENV&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Confluent Cloud Environment ID&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;$CNFL_KAFKA_CLUSTER&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Kafka Cluster ID&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;connectors&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;em&gt;[fixed]&lt;/em&gt; Resource Type&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;flood-monitoring-stations&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;The name that you want to use for the connector&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;code&gt;config&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;em&gt;[fixed]&lt;/em&gt; The configuration endpoint&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Connectors-(connectv1)/operation/createOrUpdateConnectv1ConnectorConfig&#34;&gt;&lt;code&gt;/config&lt;/code&gt; API&lt;/a&gt; expects a &lt;code&gt;PUT&lt;/code&gt; operation, and has the advantage over the related &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Connectors-(connectv1)/operation/createConnectv1Connector&#34;&gt;&lt;code&gt;POST&lt;/code&gt; to &lt;code&gt;/connectors&lt;/code&gt;&lt;/a&gt; in that it does an &amp;#39;upsert&amp;#39;‚Äîif the connector doesn‚Äôt exist it creates it, and if it does, it updates it. That makes the REST call idempotent (a fancy way of saying you can run it repeatedly with the same result).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When we run the command we get back an HTTP status code which if all has gone well is this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;HTTP/1.1 200 OK&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_checking_the_status_of_a_connector&#34;&gt;Checking the status of a connector&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Status-(connectv1)/operation/readConnectv1ConnectorStatus&#34;&gt;/status&lt;/a&gt; endpoint tells us about the connector, including its health and details of the tasks within it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;http GET &amp;#34;https://api.confluent.cloud/connect/v1/environments/$CNFL_ENV/clusters/$CNFL_KAFKA_CLUSTER/connectors/env-agency--flood-monitoring-stations/status&amp;#34; \
    --auth &amp;#34;$CNFL_CLOUD_API_KEY:$CNFL_CLOUD_API_SECRET&amp;#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Use the &lt;code&gt;-b&lt;/code&gt; flag with httpie if you want to supress the response headers
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
    &amp;#34;connector&amp;#34;: {
        &amp;#34;state&amp;#34;: &amp;#34;RUNNING&amp;#34;,
        &amp;#34;trace&amp;#34;: &amp;#34;&amp;#34;,
        &amp;#34;worker_id&amp;#34;: &amp;#34;env-agency--flood-monitoring-stations&amp;#34;
    },
    &amp;#34;error_details&amp;#34;: null,
    &amp;#34;errors_from_trace&amp;#34;: [],
    &amp;#34;is_csfle_error&amp;#34;: false,
    &amp;#34;name&amp;#34;: &amp;#34;env-agency--flood-monitoring-stations&amp;#34;,
    &amp;#34;override_message&amp;#34;: &amp;#34;&amp;#34;,
    &amp;#34;tasks&amp;#34;: [
        {
            &amp;#34;id&amp;#34;: 0,
            &amp;#34;msg&amp;#34;: &amp;#34;&amp;#34;,
            &amp;#34;state&amp;#34;: &amp;#34;RUNNING&amp;#34;,
            &amp;#34;worker_id&amp;#34;: &amp;#34;env-agency--flood-monitoring-stations&amp;#34;
        }
    ],
    &amp;#34;type&amp;#34;: &amp;#34;source&amp;#34;,
    &amp;#34;validation_error_category_info&amp;#34;: null,
    &amp;#34;validation_errors&amp;#34;: []
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You could use jq to simplify this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;http GET &amp;#34;https://api.confluent.cloud/connect/v1/environments/$CNFL_ENV/clusters/$CNFL_KAFKA_CLUSTER/connectors/env-agency--flood-monitoring-stations/status&amp;#34; \
    --auth &amp;#34;$CNFL_CLOUD_API_KEY:$CNFL_CLOUD_API_SECRET&amp;#34; | \
    jq &amp;#39;.connector.state&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&amp;#34;RUNNING&amp;#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you prefer, you can use the Confluent CLI too:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ # Get the connector ID
$ confluent connect cluster list
      ID     |                 Name                  | Status  |  Type  | Trace
-------------+---------------------------------------+---------+--------+--------
  lcc-r19wjk | env-agency--flood-monitoring-stations | RUNNING | source |

$ # Get its details, including status
$ confluent connect cluster describe lcc-r19wjk
Connector Details
+--------+---------------------------------------+
| ID     | lcc-r19wjk                            |
| Name   | env-agency--flood-monitoring-stations |
| Status | RUNNING                               |
| Type   | source                                |
+--------+---------------------------------------+


Task Level Details
  Task |  State
-------+----------
     0 | RUNNING


Configuration Details
           Config          |                          Value
---------------------------+----------------------------------------------------------
  api1.http.api.path       | /id/stations
  api1.http.initial.offset | 0
  api1.request.interval.ms | 3600000
  api1.topics              | flood-monitoring-stations
  cloud.environment        | prod
  cloud.provider           | aws
  connector.class          | HttpSourceV2
  http.api.base.url        | https://environment.data.gov.uk/flood-monitoring
  kafka.api.key            | ****************
  kafka.api.secret         | ****************
  kafka.endpoint           | SASL_SSL://pkc-rgm37.us-west-2.aws.confluent.cloud:9092
  kafka.region             | us-west-2
  name                     | env-agency--flood-monitoring-stations
  output.data.format       | AVRO
  tasks.max                | 1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For brevity, you can ask the Confluent CLI to return JSON that you then filter with jq:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;confluent connect cluster describe lcc-r19wjk --output json | jq &amp;#39;.connector.status&amp;#39;
&amp;#34;RUNNING&amp;#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_looking_at_the_data&#34;&gt;Looking at the data&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Based on the above configuration and the fact that the connector is &lt;code&gt;RUNNING&lt;/code&gt;, we should hopefully see data written to the &lt;code&gt;flood-monitoring-stations&lt;/code&gt; topic.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As above, you can use the Confluent CLI, or your own approach for this.
I‚Äôm a big fan of &lt;code&gt;kcat&lt;/code&gt; so tend to gravitate towards it, but it‚Äôs up to you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here‚Äôs kcat listing (&lt;code&gt;-L&lt;/code&gt;) the topics on my Confluent Cloud Kafka cluster:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ kcat -b $CNFL_KAFKA_BROKER \
    -X security.protocol=sasl_ssl -X sasl.mechanisms=PLAIN \
    -X sasl.username=$CNFL_KC_API_KEY -X sasl.password=$CNFL_KC_API_SECRET \
    -L

Metadata for all topics (from broker -1: sasl_ssl://pkc-rgm37.us-west-2.aws.confluent.cloud:9092/bootstrap):
 6 brokers:
  broker 0 at b0-pkc-rgm37.us-west-2.aws.confluent.cloud:9092 (controller)
  broker 1 at b1-pkc-rgm37.us-west-2.aws.confluent.cloud:9092
  broker 2 at b2-pkc-rgm37.us-west-2.aws.confluent.cloud:9092
  broker 3 at b3-pkc-rgm37.us-west-2.aws.confluent.cloud:9092
  broker 4 at b4-pkc-rgm37.us-west-2.aws.confluent.cloud:9092
  broker 5 at b5-pkc-rgm37.us-west-2.aws.confluent.cloud:9092
 2 topics:
  topic &amp;#34;error-lcc-r19wjk&amp;#34; with 1 partitions:
    partition 0, leader 4, replicas: 4,2,0, isrs: 4,2,0
  topic &amp;#34;flood-monitoring-stations&amp;#34; with 1 partitions:
    partition 0, leader 2, replicas: 2,4,0, isrs: 2,4,0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Doing the same with Confluent CLI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ confluent kafka topic list
              Name              | Internal | Replication Factor | Partition Count
--------------------------------+----------+--------------------+------------------
  error-lcc-r19wjk              | false    |                  3 |               1
  flood-monitoring-stations     | false    |                  3 |               1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To query the topic, bearing in mind that it‚Äôs serialised with Avro and so we need the Schema Registry too, I‚Äôm using kcat.
Here is how to read (&lt;code&gt;-C&lt;/code&gt;) a single message (&lt;code&gt;-c1&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ kcat -b $CNFL_KAFKA_BROKER \
    -X security.protocol=sasl_ssl -X sasl.mechanisms=PLAIN \
    -X sasl.username=$CNFL_KC_API_KEY -X sasl.password=$CNFL_KC_API_SECRET \
    -s avro -r https://$CNFL_SR_API_KEY:$CNFL_SR_API_SECRET@$CNFL_SR_HOST \
    -C -t flood-monitoring-stations -c1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It turns out the payload is huge‚Äîmore than will fit on a terminal to inspect.
We can use the Linux tool &lt;code&gt;wc&lt;/code&gt; to see quite how big it is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ kcat -q -b $CNFL_KAFKA_BROKER \
    -X security.protocol=sasl_ssl -X sasl.mechanisms=PLAIN \
    -X sasl.username=$CNFL_KC_API_KEY -X sasl.password=$CNFL_KC_API_SECRET \
    -s avro -r https://$CNFL_SR_API_KEY:$CNFL_SR_API_SECRET@$CNFL_SR_HOST \
    -C -t flood-monitoring-stations -c1 | wc --bytes

5002406&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Huh‚Äî4.77 MB! We‚Äôre gonna need a bigger monitor ;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs look at the payload structure:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ kcat -q -b $CNFL_KAFKA_BROKER \
    -X security.protocol=sasl_ssl -X sasl.mechanisms=PLAIN \
    -X sasl.username=$CNFL_KC_API_KEY -X sasl.password=$CNFL_KC_API_SECRET \
    -s avro -r https://$CNFL_SR_API_KEY:$CNFL_SR_API_SECRET@$CNFL_SR_HOST \
    -C -t flood-monitoring-stations -c1 | jq &amp;#39;keys&amp;#39;

[
  &amp;#34;_40context&amp;#34;,
  &amp;#34;items&amp;#34;,
  &amp;#34;meta&amp;#34;
]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Based on the &lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference&#34;&gt;source API‚Äôs documentation&lt;/a&gt; we know &lt;code&gt;items&lt;/code&gt; is an array, so let‚Äôs inspect on element of it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ kcat -q -b $CNFL_KAFKA_BROKER \
    -X security.protocol=sasl_ssl -X sasl.mechanisms=PLAIN \
    -X sasl.username=$CNFL_KC_API_KEY -X sasl.password=$CNFL_KC_API_SECRET \
    -s avro -r https://$CNFL_SR_API_KEY:$CNFL_SR_API_SECRET@$CNFL_SR_HOST \
    -C -t flood-monitoring-stations -c1 | jq &amp;#39;.items[1]&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &amp;#34;_40id&amp;#34;: &amp;#34;http://environment.data.gov.uk/flood-monitoring/id/stations/E2043&amp;#34;,
  &amp;#34;RLOIid&amp;#34;: {
    &amp;#34;string&amp;#34;: &amp;#34;6022&amp;#34;
  },
  &amp;#34;catchmentName&amp;#34;: {
    &amp;#34;string&amp;#34;: &amp;#34;Welland&amp;#34;
  },
  &amp;#34;dateOpened&amp;#34;: {
    &amp;#34;int&amp;#34;: 8035
  },
  &amp;#34;easting&amp;#34;: {
    &amp;#34;string&amp;#34;: &amp;#34;528000&amp;#34;
  },
  &amp;#34;label&amp;#34;: &amp;#34;Surfleet Sluice&amp;#34;,
  [‚Ä¶]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This all looks good.
We‚Äôre going to about adding the other two endpoints into this connector.
But first‚Äîlet‚Äôs tidy up after ourselves and remove this version of the connector.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_deleting_a_managed_connector_on_confluent_cloud&#34;&gt;Deleting a managed connector on Confluent Cloud&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;My brain likes working with well-designed APIs and the HTTP vocabulary:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You &lt;code&gt;PUT&lt;/code&gt; a &lt;code&gt;/config&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You &lt;code&gt;GET&lt;/code&gt; a &lt;code&gt;/status&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To list the connectors that have been created? It‚Äôs a &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Connectors-(connectv1)/operation/listConnectv1Connectors&#34;&gt;&lt;code&gt;GET&lt;/code&gt; against &lt;code&gt;/connectors&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ http GET &amp;#34;https://api.confluent.cloud/connect/v1/environments/$CNFL_ENV/clusters/$CNFL_KAFKA_CLUSTER/connectors&amp;#34; \
    --auth &amp;#34;$CNFL_CLOUD_API_KEY:$CNFL_CLOUD_API_SECRET&amp;#34; -b

[
    &amp;#34;foo&amp;#34;,
    &amp;#34;env-agency--flood-monitoring-stations&amp;#34;,
    &amp;#34;flood-monitoring&amp;#34;,
    &amp;#34;test&amp;#34;
]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So you can pretty much guess the Confluent Cloud REST API for deleting a connector‚Äîyou &lt;a href=&#34;https://docs.confluent.io/cloud/current/api.html#tag/Connectors-(connectv1)/operation/deleteConnectv1Connector&#34;&gt;&lt;code&gt;DELETE&lt;/code&gt; a &lt;code&gt;$connector-name&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ http DELETE \
    &amp;#34;https://api.confluent.cloud/connect/v1/environments/$CNFL_ENV/clusters/$CNFL_KAFKA_CLUSTER/connectors/env-agency--flood-monitoring-stations&amp;#34; \
    --auth &amp;#34;$CNFL_CLOUD_API_KEY:$CNFL_CLOUD_API_SECRET&amp;#34;

HTTP/1.1 200 OK&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
As discussed above, we could &lt;code&gt;PUT&lt;/code&gt; the new config to this connector instead of deleting and recreating it, but I want to use a new name‚Äîplus this gives me an excuse to illustrate the &lt;code&gt;DELETE&lt;/code&gt; endpoint :)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_creating_an_http_source_connector_for_multiple_api_endpoints&#34;&gt;Creating an HTTP Source connector for multiple API endpoints&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The HTTP source (v2) connector supports ingesting data with a single connector from &lt;em&gt;multiple API endpoints&lt;/em&gt; with the same base URL.
Our endpoints here are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#stations&#34;&gt;&lt;code&gt;/id/stations&lt;/code&gt;&lt;/a&gt; (as above)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#measures&#34;&gt;&lt;code&gt;/id/measures&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#readings&#34;&gt;&lt;code&gt;/data/readings?latest&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The core parts of configuration stay as they were, but we now add in &lt;code&gt;api2&lt;/code&gt; and &lt;code&gt;api3&lt;/code&gt; configuration.
We also need to define &lt;code&gt;apis.num&lt;/code&gt; since it‚Äôs now greater than the default of one.
In the example below I‚Äôve added in additional line breaks so that you can see the relevant groupings of the configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;http PUT \
    &amp;#34;https://api.confluent.cloud/connect/v1/environments/$CNFL_ENV/clusters/$CNFL_KAFKA_CLUSTER/connectors/env-agency--flood-monitoring/config&amp;#34; \
    --auth &amp;#34;$CNFL_CLOUD_API_KEY:$CNFL_CLOUD_API_SECRET&amp;#34; \
    content-type:application/json \
    connector.class=&amp;#34;HttpSourceV2&amp;#34; \
    name=&amp;#34;&amp;#34; \
    \
    http.api.base.url=&amp;#34;https://environment.data.gov.uk/flood-monitoring&amp;#34; \
    apis.num=&amp;#34;3&amp;#34; \
    api1.http.api.path=&amp;#34;/id/stations&amp;#34; \
    api1.http.offset.mode=&amp;#34;SIMPLE_INCREMENTING&amp;#34; \
    api1.http.initial.offset=&amp;#34;0&amp;#34; \
    api1.request.interval.ms=&amp;#34;3600000&amp;#34; \
    api1.topics=&amp;#34;flood-monitoring-stations&amp;#34; \
    \
    api2.http.api.path=&amp;#34;/id/measures&amp;#34; \
    api2.http.offset.mode=&amp;#34;SIMPLE_INCREMENTING&amp;#34; \
    api2.http.initial.offset=&amp;#34;0&amp;#34; \
    api2.request.interval.ms=&amp;#34;3600000&amp;#34; \
    api2.topics=&amp;#34;flood-monitoring-measures&amp;#34; \
    \
    api3.http.api.path=&amp;#34;/data/readings?latest&amp;#34; \
    api3.http.offset.mode=&amp;#34;SIMPLE_INCREMENTING&amp;#34; \
    api3.http.initial.offset=&amp;#34;0&amp;#34; \
    api3.request.interval.ms=&amp;#34;900000&amp;#34; \
    api3.topics=&amp;#34;flood-monitoring-readings&amp;#34; \
    \
    kafka.api.key=$CNFL_KC_API_KEY \
    kafka.api.secret=$CNFL_KC_API_SECRET \
    output.data.format=&amp;#34;AVRO&amp;#34; \
    \
    tasks.max=&amp;#34;3&amp;#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to run your connector with more than one task (&lt;code&gt;tasks.max&lt;/code&gt;), your &lt;a href=&#34;https://docs.confluent.io/cloud/current/clusters/cluster-types.html#cluster-types&#34;&gt;Confluent Cloud cluster type&lt;/a&gt; needs to be bigger than basic.
If it‚Äôs not, you‚Äôll get this message:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;Failed to Claim the tasks requested: Failed to claim the task requested:
Max 1 task(s) allowed per connector with basic cluster type.
To use more than 1 task(s), please upgrade your cluster type from basic to standard.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs check the status:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;http GET &amp;#34;https://api.confluent.cloud/connect/v1/environments/$CNFL_ENV/clusters/$CNFL_KAFKA_CLUSTER/connectors/env-agency--flood-monitoring/status&amp;#34; \
    --auth &amp;#34;$CNFL_CLOUD_API_KEY:$CNFL_CLOUD_API_SECRET&amp;#34; \
    --print b | jq &amp;#39;.tasks[]&amp;#39;
{
  &amp;#34;id&amp;#34;: 0,
  &amp;#34;state&amp;#34;: &amp;#34;RUNNING&amp;#34;,
  &amp;#34;worker_id&amp;#34;: &amp;#34;env-agency--flood-monitoring&amp;#34;,
  &amp;#34;msg&amp;#34;: &amp;#34;&amp;#34;
}
{
  &amp;#34;id&amp;#34;: 1,
  &amp;#34;state&amp;#34;: &amp;#34;RUNNING&amp;#34;,
  &amp;#34;worker_id&amp;#34;: &amp;#34;env-agency--flood-monitoring&amp;#34;,
  &amp;#34;msg&amp;#34;: &amp;#34;&amp;#34;
}
{
  &amp;#34;id&amp;#34;: 2,
  &amp;#34;state&amp;#34;: &amp;#34;RUNNING&amp;#34;,
  &amp;#34;worker_id&amp;#34;: &amp;#34;env-agency--flood-monitoring&amp;#34;,
  &amp;#34;msg&amp;#34;: &amp;#34;&amp;#34;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Three tasks, all up and running :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What about the data?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ confluent kafka topic list
            Name            | Internal | Replication Factor | Partition Count
----------------------------+----------+--------------------+------------------
  error-lcc-3mpv1j          | false    |                  3 |               1
  error-lcc-5nx9on          | false    |                  3 |               1
  error-lcc-5nxknn          | false    |                  3 |               1
  flood-monitoring-measures | false    |                  3 |               1
  flood-monitoring-readings | false    |                  3 |               1
  flood-monitoring-stations | false    |                  3 |               1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Measures:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ kcat -q -b $CNFL_KAFKA_BROKER \
    -X security.protocol=sasl_ssl -X sasl.mechanisms=PLAIN \
    -X sasl.username=$CNFL_KC_API_KEY -X sasl.password=$CNFL_KC_API_SECRET \
    -s avro -r https://$CNFL_SR_API_KEY:$CNFL_SR_API_SECRET@$CNFL_SR_HOST \
    -C -t flood-monitoring-measures -c1 | jq &amp;#39;.items[1]&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &amp;#34;_40id&amp;#34;: &amp;#34;http://environment.data.gov.uk/flood-monitoring/id/measures/1029TH-level-stage-i-15_min-mASD&amp;#34;,
  &amp;#34;datumType&amp;#34;: {
    &amp;#34;string&amp;#34;: &amp;#34;http://environment.data.gov.uk/flood-monitoring/def/core/datumASD&amp;#34;
  },
  &amp;#34;label&amp;#34;: &amp;#34;RIVER DIKLER AT BOURTON ON THE WATER - level-stage-i-15_min-mASD&amp;#34;,
[‚Ä¶]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stations:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ kcat -q -b $CNFL_KAFKA_BROKER \
    -X security.protocol=sasl_ssl -X sasl.mechanisms=PLAIN \
    -X sasl.username=$CNFL_KC_API_KEY -X sasl.password=$CNFL_KC_API_SECRET \
    -s avro -r https://$CNFL_SR_API_KEY:$CNFL_SR_API_SECRET@$CNFL_SR_HOST \
    -C -t flood-monitoring-stations -c1 | jq &amp;#39;.items[1]&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &amp;#34;_40id&amp;#34;: &amp;#34;http://environment.data.gov.uk/flood-monitoring/id/stations/E2043&amp;#34;,
  &amp;#34;RLOIid&amp;#34;: {
    &amp;#34;string&amp;#34;: &amp;#34;6022&amp;#34;
  },
  &amp;#34;catchmentName&amp;#34;: {
    &amp;#34;string&amp;#34;: &amp;#34;Welland&amp;#34;
  },
  &amp;#34;dateOpened&amp;#34;: {
    &amp;#34;int&amp;#34;: 8035
  },
  &amp;#34;easting&amp;#34;: {
    &amp;#34;string&amp;#34;: &amp;#34;528000&amp;#34;
  },
  &amp;#34;label&amp;#34;: &amp;#34;Surfleet Sluice&amp;#34;,
[‚Ä¶]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Readings:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ kcat -q -b $CNFL_KAFKA_BROKER \
    -X security.protocol=sasl_ssl -X sasl.mechanisms=PLAIN \
    -X sasl.username=$CNFL_KC_API_KEY -X sasl.password=$CNFL_KC_API_SECRET \
    -s avro -r https://$CNFL_SR_API_KEY:$CNFL_SR_API_SECRET@$CNFL_SR_HOST \
    -C -t flood-monitoring-readings -c1 | jq &amp;#39;.items[1]&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &amp;#34;_40id&amp;#34;: &amp;#34;http://environment.data.gov.uk/flood-monitoring/data/readings/5312TH-level-stage-i-15_min-mASD/2025-02-21T13-45-00Z&amp;#34;,
  &amp;#34;dateTime&amp;#34;: 1740145500000,
  &amp;#34;measure&amp;#34;: &amp;#34;http://environment.data.gov.uk/flood-monitoring/id/measures/5312TH-level-stage-i-15_min-mASD&amp;#34;,
  &amp;#34;value&amp;#34;: 22.664999999999999
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    <item>
      <title>Why is kcat showing the wrong topics?</title>
      <link>https://rmoff.net/2025/03/13/why-is-kcat-showing-the-wrong-topics/</link>
      <pubDate>2025-03-13</pubDate>
      
      <guid>https://rmoff.net/2025/03/13/why-is-kcat-showing-the-wrong-topics/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/03/t_IMG_8288.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Much as I love kcat (ü§´ &lt;em&gt;it‚Äôll always be kafkacat to me&lt;/em&gt;‚Ä¶), this morning I nearly fell out with it üëá&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üòñ I thought I was going stir crazy, after listing topics on a broker &lt;strong&gt;and seeing topics from a different broker&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üòµ WTF üòµ&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It turns out that the &lt;code&gt;~/.config.kcat.conf&lt;/code&gt; I created last week and was so proud to thinking to do takes üö®PRIORITYüö® over any CLI arguments provided.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So I was merrily telling it with CLI flag -b to use broker X:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;kcat &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; my-local-broker:9092 &lt;span style=&#34;color: #000080&#34;&gt;-L&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and it was merrily listing topics from broker Y that‚Äôs specified in the config file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;cat&lt;/span&gt; ~/.config/kcat.conf
metadata.broker.list&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;lol-i-will-use-this-broker-instead-ha-ha-ha:9092&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
I still like the config file idea (Kris Jenkins wrote &lt;a href=&#34;https://blog.jenkster.com/2022/10/setting-up-kcat-config.html&#34;&gt;a nice blog article about it here&lt;/a&gt;), I just need to remember about it next time ü§¶
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Write more blog articles, not fewer (Don&#39;t leave the scraps on the cutting floor)</title>
      <link>https://rmoff.net/2025/03/11/write-more-blog-articles-not-fewer-dont-leave-the-scraps-on-the-cutting-floor/</link>
      <pubDate>2025-03-11</pubDate>
      
      <guid>https://rmoff.net/2025/03/11/write-more-blog-articles-not-fewer-dont-leave-the-scraps-on-the-cutting-floor/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/03/t_IMG_7694.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some would say that the perfect blog article takes the reader on a journey on in which the development process looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/blog_content1.excalidraw.webp&#34; alt=&#34;blog content1.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Starting from the position of a problem statement, the reader is taken on an exposition of the solution, through to joyful crescendo of benefits and a climactic finale of &lt;del&gt;world peace&lt;/del&gt; a solid explanation of why the tool or product is the right tool for the reader to use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Right on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Meanwhile, back in the real world, we all know that the development process never looks like that beautifully clean and unadorned linear path.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Rather, it looks more like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/blog_content3.excalidraw.webp&#34; alt=&#34;blog content3.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We set off an idea with a full knapsack of sustenance and resources, confident of the direction of our journey.
Shortly after, we realise that didn‚Äôt read the map quite close enough.
Progress stalls as we take time to familiarise ourselves with new concepts or more detailed understanding of existing ones.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After a while we‚Äôre back on course, and things are going great.
Progress continues at a linear rate, until it doesn‚Äôt.
We hit a nasty bug, and again, progress halts whilst we try to fix the problem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Sometimes, it‚Äôs not even bugs.
It‚Äôs just that &lt;em&gt;this shit is difficult&lt;/em&gt;.
We‚Äôve entered that dark and sometimes deep chasm between the marketecture diagrams presented by the PowerPoint engineers and reality.
You whisper mockingly under your breath&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&amp;#34;gnargh, so much for &amp;#39;&lt;em&gt;You just click here and then it‚Äôs done&lt;/em&gt;&amp;#39;&amp;#34;&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You eventually get to the finish and step back in satisfaction at a job well done‚Äîand reflect on what you‚Äôve learnt along the way.&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Everyone thinks of publishing the obvious blog article, with a value commensurate with the &amp;#39;happy path&amp;#39;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/blog_content2.excalidraw.webp&#34; alt=&#34;blog content2.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If this is all you publish, you‚Äôre leaving money on the table.
There is value in the problems you encountered.
The problem is that having solved them, hindsight presents them as &amp;#34;obvious&amp;#34; and we don‚Äôt write them up.
Even worse, we‚Äôre embarrassed in what we didn‚Äôt know, and hesitate to talk about it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
üí° If you had to go through it, so will others.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Those things you learnt along the way, that is &lt;em&gt;valuable&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/blog_content4.excalidraw.webp&#34; alt=&#34;blog content4.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That‚Äôs why on this blog you‚Äôll find some articles that are barely more than a scrap of an error that I couldn‚Äôt find a Google hit for so wrote up, through to deep-dives into concepts that I needed to understand better.
It was useful to me‚Äîhopefully it‚Äôll be useful to someone else :)&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Data Wrangling with Flink SQL</title>
      <link>https://rmoff.net/2025/03/10/data-wrangling-with-flink-sql/</link>
      <pubDate>2025-03-10</pubDate>
      
      <guid>https://rmoff.net/2025/03/10/data-wrangling-with-flink-sql/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/03/t_IMG_7777.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The UK Government publishes a lot of its data as &lt;a href=&#34;https://www.data.gov.uk/&#34;&gt;open feeds&lt;/a&gt;.
One that I keep coming back to is the &lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference&#34;&gt;Environment Agency‚Äôs flood-monitoring API&lt;/a&gt; that gives access to an estate of sensors that provide information about data such as river levels and rainfall.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The data is well-structured and provided across three primary API endpoints.
In this blog article I‚Äôm going to show you how I use Flink SQL to explore and wrangle these into the kind of form from which I am then going to build a streaming pipeline using them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I initially used &lt;a href=&#34;https://rmoff.net/2025/02/28/exploring-uk-environment-agency-data-in-duckdb-and-rill/&#34;&gt;DuckDB and Rill Data&lt;/a&gt; to explore the structure of the data and verify the relationships and keys.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/02/4a663670f62f9acd7d15158b64bfa417.excalidraw.svg&#34; alt=&#34;4a663670f62f9acd7d15158b64bfa417.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now to work with it in Apache Flink :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The data is loaded into three Apache Kafka topics, each corresponding to the respective API.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#stations&#34;&gt;&lt;code&gt;stations&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#measures&#34;&gt;&lt;code&gt;measures&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#readings&#34;&gt;&lt;code&gt;readings&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first step was to unnest the source data, each of which uses an &lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#api-items&#34;&gt;&lt;code&gt;items&lt;/code&gt; array&lt;/a&gt; to nest the actual payload.
I wrote about how to do this &lt;a href=&#34;https://rmoff.net/2025/03/03/how-to-explode-nested-arrays-with-flink-sql/&#34;&gt;here&lt;/a&gt;.
It‚Äôs done with &lt;code&gt;CROSS JOIN UNNEST&lt;/code&gt; in Flink SQL:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt;
      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`flood-monitoring-readings`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;
	  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CROSS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNNEST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`flood-monitoring-measures`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;
	  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CROSS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNNEST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`flood-monitoring-stations`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;
	  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CROSS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNNEST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This results in three new Flink tables, backed by Kafka topics:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;readings&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Environment Agency&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;0.9&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1740380400000&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;http://environment.data.gov.uk/flood-monitoring/id/measures/SU89_82-level-groundwater-i-1_h-mAOD&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;50.211&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;measures&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Environment Agency&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;0.9&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Leeds FAS Calverley FSR Upstream Level - level-stage-i-15_min-mAOD&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;parameterName&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Water Level&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;unitName&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;mAOD&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;valueType&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;instantaneous&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;stations&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Environment Agency&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;0.9&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Hurworth&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;L3609A&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;riverName&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;River Tees&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gridReference&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;NZ3108210067&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;lat&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;54.484987&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;long&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;-1.521745&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_plan&#34;&gt;The Plan&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Going back to my roots as a data engineer, there were several things I wanted to do with the data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Not all the fields in &lt;code&gt;items&lt;/code&gt; or &lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#api-metadata&#34;&gt;&lt;code&gt;meta&lt;/code&gt;&lt;/a&gt; arrays are directly useful, so I‚Äôd like to exclude them from the downstream pipeline.
However, typing out the full list of columns except those you don‚Äôt want is not only time consuming, but hugely error prone.
It also makes future schema evolution more difficult, because if you add (or remove) a column in the future, you need to make sure that all down-stream processes do the same, otherwise you will lose (or incorrectly try to query) the new column.&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;DuckDB &lt;a href=&#34;https://duckdb.org/docs/stable/sql/expressions/star.html&#34;&gt;supports&lt;/a&gt; a &lt;code&gt;SELECT * EXCLUDE (except_this_column)&lt;/code&gt; syntax; unfortunately Flink SQL doesn‚Äôt.
So, we can scratch that one off the list for now.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;meta&lt;/code&gt; field in each API response is useful, but doesn‚Äôt necessarily belong in the payload; it‚Äôs what Kafka headers are useful for.
So can we do that with Flink SQL?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Whilst &lt;code&gt;readings&lt;/code&gt; are facts/events, the &lt;code&gt;stations&lt;/code&gt; and &lt;code&gt;measures&lt;/code&gt; are dimensions/reference data.
Each time we poll the API we get a full dump of the reference data.
I want to work out how to logically model (primary/foreign keys) and physically store (compacted topics?) this in Flink and Kafka.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally, once we‚Äôve done this, what does joining the three entities in Flink SQL look like?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_writing_kafka_headers_from_flink_sql&#34;&gt;Writing Kafka headers from Flink SQL&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With each request is included a &lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#api-metadata&#34;&gt;&lt;code&gt;meta&lt;/code&gt; array of data&lt;/a&gt;.
It‚Äôd be nominally useful to know, but included in the main payload makes it even wider that it is already.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Environment Agency&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;0.9&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;licence&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;documentation&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;http://environment.data.gov.uk/flood-monitoring/doc/reference&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;0.9&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;comment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Status: Beta service&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is a perfect fit for &lt;a href=&#34;https://www.confluent.io/en-gb/blog/5-things-every-kafka-developer-should-know/#tip-5-record-headers&#34;&gt;record headers in Kafka&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To include them in a Flink table backed by a Kafka topic, use a &lt;code&gt;headers&lt;/code&gt; metadata column.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First, I‚Äôll create a new table into which to write the &lt;code&gt;readings&lt;/code&gt; data, based on the existing one:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_with_header&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`dateTime`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then add the &lt;code&gt;headers&lt;/code&gt; column‚Äînote the &lt;code&gt;METADATA&lt;/code&gt; keyword.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`readings_with_header`&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;MAP&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;METADATA&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So now the table looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DESCRIBE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`readings_with_header`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Column&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Name&lt;/span&gt;      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Data&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Type&lt;/span&gt;                               &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;Nullable&lt;/span&gt;   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Extras&lt;/span&gt;
&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;--------------+------------------------------------------+----------+-----------&lt;/span&gt;
  &lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;TIMESTAMP_LTZ&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;                           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;       &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt;                                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;         &lt;span style=&#34;color: #0086B3&#34;&gt;DOUBLE&lt;/span&gt;                                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;headers&lt;/span&gt;       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;MAP&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;      &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;METADATA&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To add data into it we‚Äôll copy it across from the previous incarnation of the table.
Note how the headers are specified as a key/value‚Äîthe key is the column name, the value is the column value itself:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`readings_with_header`&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`dateTime`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;MAP&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;publisher&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;      &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;headers&lt;/span&gt;
	  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`readings`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the data in the table, let‚Äôs take a look at the underlying Kafka topic.
I‚Äôm going to use one of my favourite tools: &lt;a href=&#34;https://github.com/edenhill/kcat&#34;&gt;&lt;code&gt;kcat&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;kcat &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; readings_with_header &lt;span style=&#34;color: #000080&#34;&gt;-c1&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-s&lt;/span&gt; avro &lt;span style=&#34;color: #000080&#34;&gt;-f&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;\nKey (%K bytes): %k
  Value (%S bytes): %s
  Timestamp: %T
  Partition: %p
  Offset: %o
  Headers: %h\n&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;):&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;72&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;):&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1740562200000&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;1023SE-rainfall-tipping_bucket_raingauge-t-15_min-mm&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0.0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;Timestamp&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1741615690391&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Partition&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Offset&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Headers&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0.9&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Environment&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Agency&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
I‚Äôm using a &lt;code&gt;kcat&lt;/code&gt; config file (&lt;code&gt;~/.config/kcat.conf&lt;/code&gt;) to hold details of my broker and credentials etc. Read more about it &lt;a href=&#34;http://blog.jenkster.com/2022/10/setting-up-kcat-config.html&#34;&gt;here&lt;/a&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Learn more about headers and other Kafka metadata available in Flink &lt;a href=&#34;https://docs.confluent.io/cloud/current/flink/reference/sql-examples.html#read-and-or-write-ak-headers&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/table/kafka/#available-metadata&#34;&gt;here&lt;/a&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_handling_dimensions_in_flink_sql&#34;&gt;Handling dimensions in Flink SQL&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_setting_the_kafka_record_key&#34;&gt;Setting the Kafka record key&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As you can see in the output from &lt;code&gt;kcat&lt;/code&gt; above, there are no keys currently set on the Kafka messages:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code&gt;Key (-1 bytes):&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs create a new version of the &lt;code&gt;measures&lt;/code&gt; table with a primary key (PK).
This uses the &lt;code&gt;PRIMARY KEY&lt;/code&gt; and &lt;code&gt;DISTRIBUTED BY&lt;/code&gt; syntax.
The primary key is set as &lt;code&gt;id&lt;/code&gt;, which is an alias for the original &lt;code&gt;@id&lt;/code&gt; column (changed to &lt;code&gt;_40id&lt;/code&gt; at ingest).
The column projection is restated here (instead of a &lt;code&gt;SELECT *&lt;/code&gt;) to change the order of columns so that the PK is the first column in the table.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure_with_pk&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`id`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ENFORCED&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;DISTRIBUTED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;HASH&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`id`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BUCKETS&lt;/span&gt;
     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt;  	&lt;span style=&#34;color: #008080&#34;&gt;`_40id`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`id`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;datumType&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`parameter`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;parameterName&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`period`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;qualifier&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;station&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stationReference&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;unit&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;unitName&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;valueType&lt;/span&gt;
          &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now the key of a Kafka message from the topic underpinning the table looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;kcat &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; measure_with_pk &lt;span style=&#34;color: #000080&#34;&gt;-c1&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
       &lt;span style=&#34;color: #000080&#34;&gt;-s&lt;/span&gt; avro &lt;span style=&#34;color: #000080&#34;&gt;-f&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;\nKey (%K bytes): %k\nValue (%S bytes): %s&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;95&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;):&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;http://environment.data.gov.uk/flood-monitoring/id/measures/50150-level-stage-i-15_min-m&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;222&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;):&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;datumType&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;BRENDON - level-stage-i-15_min-m&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;50150-level-stage-i-15_min-m&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;parameter&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;parameterName&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Water Level&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;period&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;900&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;qualifier&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Stage&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;station&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;http://environment.data.gov.uk/flood-monitoring/id/stations/50150&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;stationReference&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;50150&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;unit&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;http://qudt.org/1.1/vocab/unit#Meter&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;unitName&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;valueType&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;instantaneous&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Docs for primary keys and partitioning of Kafka topics with Flink tables &lt;a href=&#34;https://docs.confluent.io/cloud/current/flink/reference/statements/create-table.html#primary-keys-and-distribution-strategies&#34;&gt;here&lt;/a&gt;, &lt;a href=&#34;https://nightlies.apache.org/flink/flink-docs-master/docs/dev/table/sql/create/#primary-key&#34;&gt;here&lt;/a&gt;, and &lt;a href=&#34;https://nightlies.apache.org/flink/flink-docs-master/docs/dev/table/sql/create/#distributed&#34;&gt;here&lt;/a&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_changing_the_kafka_topic_under_a_flink_table_to_compacted&#34;&gt;Changing the Kafka topic under a Flink table to compacted&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.confluent.io/courses/architecture/compaction/&#34;&gt;Kafka topic compaction&lt;/a&gt; is one of those wonderfully simple-yet-powerful concepts.
Instead of an infinite append-only log, a compacted topic starts to feel more like regular RDBMS table.
For each key (hence the importance of setting them correctly in the section above), Kafka will retain the &lt;em&gt;latest&lt;/em&gt; value.
To change the value for a key, you add another message to the topic with the same key.
When the compaction process runs, it‚Äôll remove earlier versions.
You can also delete a key by sending a &lt;em&gt;tombstone&lt;/em&gt; message, which is the key with a null for its value.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In short, a compacted topic is perfect for our reference data here.
Whilst we could build the processing to handle changing values for our dimension data, we‚Äôre going to keep things very simple to start with.
We‚Äôll implement what is known as a &lt;em&gt;Type 1 Slowly Changing Dimension (SCD)&lt;/em&gt;.
In essence, when we get a new (or unchanged) value for a dimension, we just replace the previous one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Topic compaction is a Kafka topic configuration, so can be set as part of the connection properties in the &lt;code&gt;CREATE TABLE&lt;/code&gt; statement:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures_with_pk&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`id`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ENFORCED&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;DISTRIBUTED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;HASH&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`id`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BUCKETS&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.cleanup-policy&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;compact&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt;  	&lt;span style=&#34;color: #008080&#34;&gt;`_40id`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`id`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;datumType&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`parameter`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;parameterName&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`period`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;qualifier&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;station&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stationReference&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;unit&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;unitName&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;valueType&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Over in the Confluent Cloud UI we can see the cleanup policy of the topic is now &lt;code&gt;Compact&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot%202025-03-04%20at%2015.09.22.png&#34; alt=&#34;CleanShot%202025 03 04%20at%2015.09.22&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs do the same for the &lt;code&gt;stations&lt;/code&gt; data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations_with_pk&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`id`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ENFORCED&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;DISTRIBUTED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;HASH&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`id`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.cleanup-policy&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;compact&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.retention.time&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;1h&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt;  	&lt;span style=&#34;color: #008080&#34;&gt;`_40id`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`id`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`RLOIid`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`catchmentName`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`dateOpened`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`easting`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`label`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`lat`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`long`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`northing`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`notation`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`riverName`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`stageScale`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`stationReference`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`status`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`town`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`wiskiID`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`datumOffset`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`gridReference`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`downstageScale`&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`stations`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Verify with &lt;code&gt;kcat&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;73&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;):&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;http://environment.data.gov.uk/flood-monitoring/id/stations/023839&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Value&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;94&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;):&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;RLOIid&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;catchmentName&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;dateOpened&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;easting&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;412450&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;Rainfall station&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;lat&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;54.829815&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;long&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;-1.807716&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;northing&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;548350&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;023839&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;riverName&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;stageScale&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;stationReference&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;023839&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;status&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;town&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;wiskiID&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;datumOffset&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gridReference&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;NZ124483&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;downstageScale&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_changing_the_key&#34;&gt;Changing the key&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In looking at the PK for each, we can see that the actual key is a somewhat verbose URL:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For measures, a concatenation of base URL, plus station, plus measure&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;http://environment.data.gov.uk/flood-monitoring/id/measures/50150-level-stage-i-15_min-m&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For stations,  a concatenation of base URL, plus station:&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;http://environment.data.gov.uk/flood-monitoring/id/stations/023839&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This makes it more difficult working with the data to eyeball it, since all column values just look like &lt;code&gt;http://environment.da[‚Ä¶]&lt;/code&gt; as they get truncated. There‚Äôs presumably a theoretical performance implication too of such redundant data in the string, but that‚Äôs not the motivating factor here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, let‚Äôs do a bit of data munging, and change the key for &lt;code&gt;stations&lt;/code&gt; to &lt;code&gt;stationReference&lt;/code&gt; (&lt;code&gt;023839&lt;/code&gt; in the above example), and &lt;code&gt;notation&lt;/code&gt; for &lt;code&gt;measures&lt;/code&gt; (&lt;code&gt;690408-level-stage-i-15_min-m&lt;/code&gt; above).
This does mean that we‚Äôll need to allow for this in processing &lt;code&gt;readings&lt;/code&gt;, but that‚Äôs not a problem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For &lt;code&gt;measures&lt;/code&gt; I‚Äôm keeping the &lt;code&gt;notation&lt;/code&gt; column name the same to avoid any confusion. The &lt;code&gt;_40id&lt;/code&gt; (which is &lt;code&gt;@id&lt;/code&gt; translated away from a special character) column isn‚Äôt any use so I‚Äôm dropping it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures_with_pk&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measures_with_pk&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`notation`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ENFORCED&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;DISTRIBUTED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;HASH&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`notation`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BUCKETS&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.cleanup-policy&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;compact&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt;  	&lt;span style=&#34;color: #008080&#34;&gt;`notation`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`notation`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;datumType&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`parameter`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;parameterName&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`period`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;qualifier&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;station&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stationReference&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;unit&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;unitName&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;valueType&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations_with_pk&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stations_with_pk&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`stationReference`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ENFORCED&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;DISTRIBUTED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;HASH&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`stationReference`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.cleanup-policy&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;compact&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt;  	&lt;span style=&#34;color: #008080&#34;&gt;`stationReference`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`RLOIid`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`catchmentName`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`dateOpened`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`easting`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`label`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`lat`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`long`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`northing`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`notation`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`riverName`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`stageScale`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`status`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`town`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`wiskiID`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`datumOffset`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`gridReference`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;color: #008080&#34;&gt;`downstageScale`&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`stations`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here‚Äôs a sample &lt;code&gt;station&lt;/code&gt; message key:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;stationReference&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;1416TH&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;compared to the previous:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;http://environment.data.gov.uk/flood-monitoring/id/stations/1416TH&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Much nicer!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_changing_the_foreign_key_fk_on_readings&#34;&gt;Changing the foreign key (FK) on &lt;code&gt;readings&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When we receive a &lt;code&gt;reading&lt;/code&gt;, we are going to enrich it with details of the measure (e.g. &amp;#34;rainfall&amp;#34;) and the station (e.g. &amp;#34;Bourton Dickler&amp;#34; in the &amp;#34;Cotswolds&amp;#34;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/02/4a663670f62f9acd7d15158b64bfa417.excalidraw.svg&#34; alt=&#34;4a663670f62f9acd7d15158b64bfa417.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Remember how we changed the logical key on which we were going to join, from the verbose and repetitive &lt;code&gt;@id&lt;/code&gt; (e.g. &lt;code&gt;http://environment.data.gov.uk/flood-monitoring/id/measures/50150-level-stage-i-15_min-m&lt;/code&gt;) to a shorter version (e.g. &lt;code&gt;50150-level-stage-i-15_min-m&lt;/code&gt; in a column called &lt;code&gt;notation&lt;/code&gt;, for the &lt;code&gt;measures&lt;/code&gt; table)? That means that the foreign key (FK) of the join on &lt;code&gt;readings&lt;/code&gt; also needs amending.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We could put the transformation into the join predicate itself:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`readings`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;
		&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures_with_pk`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;
		&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
				  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://environment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gov&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;uk/flood-monitoring/id/measures/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
				  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But that &lt;code&gt;REGEXP_REPLACE&lt;/code&gt; is going to get tiresome to type out each time‚Äînot to mention the fact that we‚Äôre then doing additional processing for every join that might want to use it. Plus, if we ever forget to, our join won‚Äôt work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Why don‚Äôt we shift that processing left, and do it once, when we create the original &lt;code&gt;readings&lt;/code&gt;? We can rebuild the existing &lt;code&gt;readings&lt;/code&gt; table and change how we populate the column.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-warning&#34; title=&#34;Warning&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Before we do this we need to check is if we have sufficient retention of the source data in &lt;code&gt;flood-monitoring-readings&lt;/code&gt;.
If the data in &lt;code&gt;readings&lt;/code&gt; isn‚Äôt still available in the source then we‚Äôll need to handle this processing differently (otherwise we lose data).
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To check the retention we can look at the Kafka topic properties exposed by &lt;code&gt;SHOW CREATE TABLE&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SHOW&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`readings`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;----------------------------------------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;                    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SHOW&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt;                     &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;----------------------------------------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`default`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`cluster_0`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`readings`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;          &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;                                                   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.retention.size&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;0 bytes&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;                    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.retention.time&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;0 ms&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;                       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So &lt;code&gt;readings&lt;/code&gt; is set for infinite retention. What about the source data?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SHOW&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`flood-monitoring-readings`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------------------------------------------------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;                  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SHOW&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt;                               &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;------------------------------------------------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`default`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`cluster_0`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`flood-monitoring-readings`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;                                                           &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.cleanup-policy&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;delete&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;                             &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.retention.size&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;0 bytes&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;                            &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.retention.time&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;7 d&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;                                &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Uh oh! Our source data only goes back seven days, whilst our processed &lt;code&gt;readings&lt;/code&gt; could be further. Let‚Äôs check:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;MIN&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EXPR&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;                  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;29&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;000&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-------------------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For &lt;code&gt;flood-monitoring-readings&lt;/code&gt; I‚Äôm not going to do the &lt;code&gt;UNNEST&lt;/code&gt; but instead just pick the first entry from the &lt;code&gt;items&lt;/code&gt; array‚Äîbecause the readings are per time slice anyway, so it‚Äôs a fair assumption that the &lt;code&gt;dateTime&lt;/code&gt; of the first item will be the same as the others:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;MIN&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;].&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`flood-monitoring-readings`&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;EXPR&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;                  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;29&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;000&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-------------------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ü§î The date on which I‚Äôm currently writing this is 5 March 2025. So how is a table with one week‚Äôs retention showing data for over a month ago?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_sidebar_how_many_times_are_there&#34;&gt;Sidebar: How many times are there?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When working with any data‚Äîbatch included‚Äîthere are important times to be aware of:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Processing time (when is the row passing through the SQL processor)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;System time (when did it get loaded into the system)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Event time (what is the time attached to the event itself)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The system time is an integral part of the Kafka message, and exposed in our Flink table with the special &lt;code&gt;$rowtime&lt;/code&gt; column.
Let‚Äôs look at it compared to the event time (the &lt;code&gt;dateTime&lt;/code&gt; column):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;2025-01-29 13:15:00.000&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;                &lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;
&lt;span style=&#34;color: #009999&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;26&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;872&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;29&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;000&lt;/span&gt;
&lt;span style=&#34;color: #009999&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;862&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;29&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;000&lt;/span&gt;
&lt;span style=&#34;color: #009999&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;901&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;29&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;000&lt;/span&gt;
&lt;span style=&#34;color: #009999&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;03&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;863&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;29&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;000&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What‚Äôs happening here is that the &lt;strong&gt;system time&lt;/strong&gt; of the data is from a couple of days ago (March 3rd), and so hasn‚Äôt been aged out of the underlying Kafka topic yet (which is set to a week‚Äôs retention).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This means that we broadly have the same data on the source (&lt;code&gt;flood-monitoring-readings&lt;/code&gt;) as the existing processed table (&lt;code&gt;readings&lt;/code&gt;).
As this is just a sandbox, I‚Äôm not going to go through this with a fine-toothed comb; both tables going back to &lt;code&gt;2025-01-29 13:15:00&lt;/code&gt; is good enough for me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As a reminder, if they &lt;strong&gt;didn‚Äôt&lt;/strong&gt; match in their earliest data, and &lt;code&gt;readings&lt;/code&gt; went back further, we‚Äôd need to take a different approach to repopulating the table when we redefine the &lt;code&gt;measure&lt;/code&gt; FK field.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Having confirmed that we‚Äôve got the source data to reprocess, let‚Äôs go ahead and recreate the table with the new FK (&lt;code&gt;measure&lt;/code&gt;) definition:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
				  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://environment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gov&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;uk/flood-monitoring/id/measures/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
				  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt;
	  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`flood-monitoring-readings`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;
		   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CROSS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNNEST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To check that this has worked we can sample some data and inspect the &lt;code&gt;measure&lt;/code&gt; column:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;publisher&lt;/span&gt;          &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;version&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;                &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;                          &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;value&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Environment&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;Agency&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;9&lt;/span&gt;     &lt;span style=&#34;color: #009999&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;29&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;000&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;E21046&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;_min&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;mAOD&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can also look at the range of timestamps for system and event time on &lt;code&gt;readings&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;MIN&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;earliest_dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;MAX&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;latest_dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;MIN&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;earliest_rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;MAX&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;latest_rowtime&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`readings`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you run this query you‚Äôll see the &lt;code&gt;latest_&lt;/code&gt; values increasing.
It‚Äôll run until you cancel it‚Äîupdating as data is back processed, and then as new data arrives.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;earliest_dateTime       latest_dateTime         earliest_rowtime        latest_rowtime
2025-01-29 13:15:00.000 2025-03-05 11:55:10.000 2025-03-05 12:09:44.422 2025-03-05 12:23:38.167&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You might see &lt;code&gt;dateTime&lt;/code&gt; go back and forth, as the processing reads records from across partitions; it‚Äôll not necessarily be in strict chronological order.
You‚Äôll also see that the &lt;code&gt;rowtime&lt;/code&gt; values are as of now, since this is the time at which the data has been written for the new table (i.e. system time).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
We could optimise this all one step further by defining &lt;code&gt;dateTime&lt;/code&gt; as a &lt;code&gt;timestamp&lt;/code&gt; metadata field in the new table, thus &lt;a href=&#34;https://docs.confluent.io/cloud/current/flink/reference/statements/create-table.html#flink-sql-metadata-columns-timestamp&#34;&gt;telling Flink to write it as the actual Kafka record time&lt;/a&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_joining_kafka_topics_in_flink_sql&#34;&gt;Joining Kafka topics in Flink SQL&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What‚Äôs the point of identifying and defining primary and foreign keys to define relationships if we don‚Äôt make use of them! Let‚Äôs start by joining a reading that we receive to the measure to which it relates:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`dateTime`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`label`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`parameterName`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`period`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`qualifier`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`stationReference`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`unitName`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`valueType`&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures_with_pk`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;dateTime                value label  parameterName period qualifier stationReference unitName valueType
2025-02-26 09:00:00.000 0.4   NULL   NULL          NULL   NULL      NULL             NULL     NULL
2025-02-26 09:00:00.000 0.0   NULL   NULL          NULL   NULL      NULL             NULL     NULL
2025-02-26 09:00:00.000 0.0   NULL   NULL          NULL   NULL      NULL             NULL     NULL
[‚Ä¶]&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Hmmmmm that‚Äôs not so good. A bunch of &lt;code&gt;NULL&lt;/code&gt; values where there should be details about the measure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôre using a &lt;code&gt;LEFT OUTER JOIN&lt;/code&gt; just to highlight any issue where there might be a missing entry in &lt;code&gt;measures&lt;/code&gt; for a given reading. If we used an &lt;code&gt;INNER JOIN&lt;/code&gt; then these readings would be omitted.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs add in the FK from &lt;code&gt;readings&lt;/code&gt; to help with diagnosing what‚Äôs going on, along with the &lt;code&gt;$ROWTIME&lt;/code&gt; for each table‚Äîand filter for unmatched rows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`dateTime`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`$rowtime`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r_rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`$rowtime`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m_rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`label`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`parameterName`&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures_with_pk`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;dateTime                value   measure                                              r_rowtime               m_rowtime label parameterName
2025-02-26 09:30:00.000 0.234   F7070-flow--i-15_min-m3_s                            2025-03-05 12:09:45.816 NULL      NULL  NULL
2025-02-26 09:00:00.000 0.0     48180-rainfall-tipping_bucket_raingauge-t-15_min-mm  2025-03-05 12:09:44.917 NULL      NULL  NULL
2025-02-26 09:30:00.000 0.0     1792-rainfall-tipping_bucket_raingauge-t-15_min-mm   2025-03-05 12:09:45.016 NULL      NULL  NULL
2025-02-26 09:30:00.000 0.0     1792-rainfall-tipping_bucket_raingauge-t-15_min-mm   2025-03-05 12:09:45.715 NULL      NULL  NULL
2025-02-26 09:30:00.000 0.149   E24817-level-stage-i-15_min-m                        2025-03-05 12:09:45.816 NULL      NULL  NULL
2025-02-26 09:30:00.000 0.4     3996-rainfall-tipping_bucket_raingauge-t-15_min-mm   2025-03-05 12:09:44.919 NULL      NULL  NULL&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now let‚Äôs drill in even further to just one of these measures:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`dateTime`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`$rowtime`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r_rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`$rowtime`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m_rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`label`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`parameterName`&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures_with_pk`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;F7070-flow--i-15_min-m3_s&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first set of rows look like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;dateTime                value measure                   r_rowtime               m_rowtime label parameterName
2025-02-26 10:00:00.000 0.234 F7070-flow--i-15_min-m3_s 2025-03-05 12:09:49.317 NULL      NULL  NULL
2025-02-26 10:15:00.000 0.233 F7070-flow--i-15_min-m3_s 2025-03-05 12:09:51.217 NULL      NULL  NULL
2025-02-26 10:30:00.000 0.233 F7070-flow--i-15_min-m3_s 2025-03-05 12:09:53.314 NULL      NULL  NULL
2025-02-26 10:45:00.000 0.232 F7070-flow--i-15_min-m3_s 2025-03-05 12:09:54.224 NULL      NULL  NULL&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But then changes (we‚Äôre streaming, remember!) and the NULLs disappear&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;dateTime                value measure                   r_rowtime               m_rowtime               label                                  parameterName
2025-02-26 10:00:00.000 0.234 F7070-flow--i-15_min-m3_s 2025-03-05 12:09:49.317 2025-03-05 16:26:02.395 HENLEY BRIDGE GS - flow--i-15_min-m3_s Flow
2025-02-26 10:30:00.000 0.233 F7070-flow--i-15_min-m3_s 2025-03-05 12:09:53.314 2025-03-05 16:26:02.395 HENLEY BRIDGE GS - flow--i-15_min-m3_s Flow
2025-02-26 10:15:00.000 0.233 F7070-flow--i-15_min-m3_s 2025-03-05 12:09:51.217 2025-03-05 16:26:02.395 HENLEY BRIDGE GS - flow--i-15_min-m3_s Flow
2025-02-26 10:45:00.000 0.232 F7070-flow--i-15_min-m3_s 2025-03-05 12:09:54.224 2025-03-05 16:26:02.395 HENLEY BRIDGE GS - flow--i-15_min-m3_s Flow&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The magic button in the Flink shell is &lt;code&gt;M&lt;/code&gt; - this shows the underlying changelog that the client is displaying. Note the highlights on the &lt;code&gt;Operation&lt;/code&gt; column to see what‚Äôs happening:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot%202025-03-05%20at%2017.06.02@2x.webp&#34; alt=&#34;CleanShot%202025 03 05%20at%2017.06.02@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First up a row with no match is emitted (&lt;code&gt;+I&lt;/code&gt;) from the join. After that a match is found, so the first result is retracted (&lt;code&gt;-D&lt;/code&gt;) and replaced (the second &lt;code&gt;+I&lt;/code&gt;). This happens for each of the four rows that we saw above.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Something else I saw in looking more closely at the rowtimes in the data was this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot%202025-03-05%20at%2017.21.33@2x.webp&#34; alt=&#34;CleanShot%202025 03 05%20at%2017.21.33@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A seeming duplicate, after the initial retract &amp;amp; restatement with a successful join to &lt;code&gt;measures&lt;/code&gt;, with a difference &lt;code&gt;$ROWTIME&lt;/code&gt; on the &lt;code&gt;readings&lt;/code&gt; table.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs dig in even further and narrow it down to just this particular record:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`dateTime`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`$rowtime`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r_rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`$rowtime`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m_rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`label`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`parameterName`&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures_with_pk`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;F7070-flow--i-15_min-m3_s&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;2025-02-26 10:00:00.000&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now it gets stranger‚Ä¶I don‚Äôt get the &lt;code&gt;NULL&lt;/code&gt; at all‚Äîbut I do get duplicates:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot%202025-03-05%20at%2017.34.29@2x%201.webp&#34; alt=&#34;CleanShot%202025 03 05%20at%2017.34.29@2x 1&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_where_are_the_duplicates_coming_from&#34;&gt;Where are the duplicates coming from?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So we‚Äôve got two rows returned from &lt;code&gt;readings&lt;/code&gt; (&lt;code&gt;$ROWTIME&lt;/code&gt; of &lt;code&gt;12:09:48.223&lt;/code&gt; and &lt;code&gt;12:09:49.317&lt;/code&gt;), and two from &lt;code&gt;measures_with_pk&lt;/code&gt; (&lt;code&gt;$ROWTIME&lt;/code&gt; of &lt;code&gt;17:25:20.687&lt;/code&gt; and &lt;code&gt;16:26:02.395&lt;/code&gt;), giving us a cartesian result of four rows.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Looking at the &lt;code&gt;measures&lt;/code&gt; data first, let‚Äôs confirm the presence of the duplicate, and then figure out what to do about it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures_with_pk`&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;F7070-flow--i-15_min-m3_s&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;$rowtime                notation                  datumType label
2025-03-05 16:26:02.395 F7070-flow--i-15_min-m3_s NULL      HENLEY BRIDGE GS - flow--i-15_min-m3_s
2025-03-05 17:25:20.687 F7070-flow--i-15_min-m3_s NULL      HENLEY BRIDGE GS - flow--i-15_min-m3_s&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Checking the table definition again, I‚Äôve maybe not got it quite right:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SHOW&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures_with_pk`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`default`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`cluster_0`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measures_with_pk`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #008080&#34;&gt;`notation`&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;2147483647&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`PK_notation`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`notation`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ENFORCED&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;DISTRIBUTED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;HASH&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`notation`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BUCKETS&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;changelog.mode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;append&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.cleanup-policy&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;compact&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.retention.size&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;0 bytes&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.retention.time&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;7 d&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;‚Ä¶&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The PK is defined, yes‚Äîbut I think there are two problems here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;#39;kafka.retention.time&amp;#39; = &amp;#39;7 d&amp;#39;&lt;/code&gt;: If there‚Äôs no new data pulled into the source topic (&lt;code&gt;flood-monitoring-measures&lt;/code&gt;) for a week then the data will age out of this table, and we don‚Äôt want that (&lt;a href=&#34;https://docs.confluent.io/cloud/current/flink/reference/sql-examples.html#table-with-infinite-retention-time&#34;&gt;ref&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;#39;changelog.mode&amp;#39; = &amp;#39;append&amp;#39;,&lt;/code&gt; (&lt;a href=&#34;https://docs.confluent.io/cloud/current/flink/reference/sql-examples.html#create-with-different-changelog-modes&#34;&gt;ref&lt;/a&gt;): as this is a dimension table, we don‚Äôt want to &lt;em&gt;add&lt;/em&gt; (append) data to it, but update existing values for a key or insert them if they don‚Äôt exist‚Äîwhich is what &lt;code&gt;upsert&lt;/code&gt; does.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs try changing these.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #999988;font-style: italic&#34;&gt;-- See https://docs.confluent.io/cloud/current/flink/reference/sql-examples.html#table-with-infinite-retention-time&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures_with_pk`&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;changelog.mode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	     &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.retention.time&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now when I query the table I get a single row returned. Note the &lt;code&gt;$rowtime&lt;/code&gt;; it‚Äôs as of today (2025-03-07), since I took a break in writing this since running the query last (as seen on the &lt;code&gt;$rowtime&lt;/code&gt; in the query output above, 2025-03-05)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;$rowtime                notation                  datumType label                                  parameter
2025-03-07 10:47:17.385 F7070-flow--i-15_min-m3_s NULL      HENLEY BRIDGE GS - flow--i-15_min-m3_s flow&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can also confirm the underlying Kafka topic configuration is now correct:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;confluent kafka topic configuration list measures_with_pk&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;
                   Name                   |        Value        | Read-Only
&lt;span style=&#34;color: #000080&#34;&gt;------------------------------------------&lt;/span&gt;+---------------------+------------
  cleanup.policy                          | compact             | &lt;span style=&#34;color: #0086B3&#34;&gt;false&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;[&lt;/span&gt;‚Ä¶]
  retention.bytes                         | &lt;span style=&#34;color: #000080&#34;&gt;-1&lt;/span&gt;                  | &lt;span style=&#34;color: #0086B3&#34;&gt;false
  &lt;/span&gt;retention.ms                            | &lt;span style=&#34;color: #000080&#34;&gt;-1&lt;/span&gt;                  | &lt;span style=&#34;color: #0086B3&#34;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Going back to the join between readings and measures, let‚Äôs see how the data now looks:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;dateTime                value measure                   r_rowtime               m_rowtime               label                                  parameterName
2025-02-26 10:00:00.000 0.234 F7070-flow--i-15_min-m3_s 2025-03-05 12:09:49.317 2025-03-07 10:47:17.385 HENLEY BRIDGE GS - flow--i-15_min-m3_s Flow
2025-02-26 10:00:00.000 0.234 F7070-flow--i-15_min-m3_s 2025-03-05 12:09:48.223 2025-03-07 10:47:17.385 HENLEY BRIDGE GS - flow--i-15_min-m3_s Flow&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Still a duplicate entry for the measure at &lt;code&gt;2025-02-26 10:00:00.000&lt;/code&gt;, because of two entries in the &lt;code&gt;readings&lt;/code&gt; table (note the different &lt;code&gt;r_rowtime&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In the &lt;code&gt;readings&lt;/code&gt; table we can see the duplicate (as you‚Äôd expect, based on the output above):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;F7070-flow--i-15_min-m3_s&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`dateTime`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;2025-02-26 10:00:00.000&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;$rowtime                publisher          version dateTime                measure                   value
2025-03-05 12:09:48.223 Environment Agency 0.9     2025-02-26 10:00:00.000 F7070-flow--i-15_min-m3_s 0.234
2025-03-05 12:09:49.317 Environment Agency 0.9     2025-02-26 10:00:00.000 F7070-flow--i-15_min-m3_s 0.234&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One thing I want to check is that there‚Äôs a single process writing to the table‚Äîgiven that as we work our way through this exploration, there may be things lying around that we‚Äôve not tidied up.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can look at what statements are running using the &lt;code&gt;statement list&lt;/code&gt; command and filter it with &lt;code&gt;jq&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;confluent flink statement list &lt;span style=&#34;color: #000080&#34;&gt;--output&lt;/span&gt; json | &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
  jq &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.[] | select((.statement | contains(&amp;#34;readings&amp;#34;)) and (.status == &amp;#34;RUNNING&amp;#34;)) &amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;json&#34;&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;creation_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;2025-03-03T15:35:35.945202Z&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;cli-2025-03-03-153534-4c63832d-187e-481c-9091-24f6147e226f&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;statement&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;CREATE TABLE readings AS&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;SELECT meta.publisher, meta.version, i.dateTime, i.measure,i.`value` FROM `flood-monitoring-readings` r&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;  CROSS JOIN UNNEST(r.items) AS i;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;compute_pool&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;lfcp-kzky6g&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;RUNNING&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;latest_offsets&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;latest_offsets_timestamp&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;0001-01-01T00:00:00Z&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;creation_date&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;2025-03-05T12:09:29.082467Z&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;cli-2025-03-05-120928-608894cd-4a72-473f-b80c-0a35ea6e41cc&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;statement&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;CREATE TABLE readings AS&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;SELECT meta.publisher, &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;   meta.version, &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;   i.dateTime, &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;   REGEXP_REPLACE(i.measure, &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;  &amp;#39;http://environment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;.data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;.gov&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;.uk/flood-monitoring/id/measures/&amp;#39;, &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;  &amp;#39;&amp;#39;) AS measure,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;   i.`value` &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;  FROM `flood
-monitoring-readings` r&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;   CROSS JOIN UNNEST(r.items) AS i;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;compute_pool&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;lfcp-kzky6g&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;RUNNING&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;latest_offsets&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
  &lt;/span&gt;&lt;span style=&#34;color: #990000;font-weight: bold&#34;&gt;&amp;#34;latest_offsets_timestamp&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;0001-01-01T00:00:00Z&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #bbbbbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So there are two statements running. &lt;em&gt;However&lt;/em&gt;, this isn‚Äôt quite the smoking gun you‚Äôd think, because as you can see in the query output above (and in fact, in the &lt;code&gt;WHERE&lt;/code&gt; clause too) the &lt;code&gt;measure&lt;/code&gt; field is the newer version without the URL base prefix: &lt;code&gt;F7070-flow‚Äî‚Äãi-15_min-m3_s&lt;/code&gt;. The other query that‚Äôs running still is just selecting the unmodified &lt;code&gt;measure&lt;/code&gt; column. That‚Äôs not to say that it‚Äôs not also creating duplicate/redundant data on the &lt;code&gt;readings&lt;/code&gt; table, but it doesn‚Äôt account for the duplicate that we‚Äôre seeing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs remove the query, so that we have just the correct one running:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;confluent flink statement delete cli-2025-03-03-153534-4c63832d-187e-481c-9091-24f6147e226f&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Digging into the table some more there are plenty of rows where there is just one entry for a measure; but also a consistent pattern over time where there are duplicates:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;F7070-flow--i-15_min-m3_s&amp;#39;&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot%202025-03-07%20at%2012.25.16@2x.webp&#34; alt=&#34;CleanShot%202025 03 07%20at%2012.25.16@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_why_are_there_duplicates_in_readings&#34;&gt;Why are there duplicates in &lt;code&gt;readings&lt;/code&gt;?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs go back to the source table for &lt;code&gt;readings&lt;/code&gt; and see if there are duplicates in that‚Äîif it, as is more likely, in our futzing around with re-creating &lt;code&gt;readings&lt;/code&gt; earlier we made a snafu and ran two queries at once.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is the query that creates the &lt;code&gt;readings&lt;/code&gt; table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
				  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://environment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gov&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;uk/flood-monitoring/id/measures/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
				  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt;
	  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`flood-monitoring-readings`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;
		   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CROSS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNNEST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs run just the &lt;code&gt;SELECT&lt;/code&gt;, and add the predicate we used above, to see if we see the same duplicates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_cte&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #a61717;background-color: #e3d2d2&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
			&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
				  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://environment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gov&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;uk/flood-monitoring/id/measures/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
				  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt;
	  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`flood-monitoring-readings`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;
		   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CROSS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNNEST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings_cte&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;F7070-flow--i-15_min-m3_s&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Yep, still duplicates - with different &lt;code&gt;$rowtime&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot%202025-03-07%20at%2014.35.45@2x.webp&#34; alt=&#34;CleanShot%202025 03 07%20at%2014.35.45@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Going all the way back to the source, here are the messages on the Kafka topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #008080&#34;&gt;$ &lt;/span&gt;kcat &lt;span style=&#34;color: #000080&#34;&gt;-b&lt;/span&gt; my-broker.aws.confluent.cloud:9092 &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-X&lt;/span&gt; security.protocol&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;sasl_ssl &lt;span style=&#34;color: #000080&#34;&gt;-X&lt;/span&gt; sasl.mechanisms&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;PLAIN &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-X&lt;/span&gt; sasl.username&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CC_API&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-X&lt;/span&gt; sasl.password&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;$CC_SECRET&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-s&lt;/span&gt; avro &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-r&lt;/span&gt; https://&lt;span style=&#34;color: #008080&#34;&gt;$SR_API&lt;/span&gt;:&lt;span style=&#34;color: #008080&#34;&gt;$SR_SECRET$@&lt;/span&gt;my_sr.aws.confluent.cloud | jq &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;.items[] | select (.measure | contains(&amp;#34;F7070&amp;#34;))&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #000080&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-t&lt;/span&gt; flood-monitoring-readings &lt;span style=&#34;color: #000080&#34;&gt;-o&lt;/span&gt; s@&lt;span style=&#34;color: #d14&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;date&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-d&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;2025-03-01 11:53:02.000&amp;#34;&lt;/span&gt; +%s%3N&lt;span style=&#34;color: #d14&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000080&#34;&gt;-c2&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;_40id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;http://environment.data.gov.uk/flood-monitoring/data/readings/F7070-flow--i-15_min-m3_s/2025-03-01T11-30-00Z&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;dateTime&amp;#34;&lt;/span&gt;: 1740828600000,
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;measure&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;http://environment.data.gov.uk/flood-monitoring/id/measures/F7070-flow--i-15_min-m3_s&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: 0.17499999999999999
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;_40id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;http://environment.data.gov.uk/flood-monitoring/data/readings/F7070-flow--i-15_min-m3_s/2025-03-01T11-30-00Z&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;dateTime&amp;#34;&lt;/span&gt;: 1740828600000,
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;measure&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;http://environment.data.gov.uk/flood-monitoring/id/measures/F7070-flow--i-15_min-m3_s&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: 0.17499999999999999
&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Where does that leave us?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It suggests that readings of particular measures may sometimes lag being reported, and thus the API serves up the previous value. We also have the &lt;code&gt;period&lt;/code&gt; field in &lt;a href=&#34;https://environment.data.gov.uk/flood-monitoring/doc/reference#measures&#34;&gt;measure&lt;/a&gt; which could vary, and not be the same as‚Äînor in sync with‚Äîthe frequency with which we‚Äôre polling the API to get the data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So we need to change our &lt;code&gt;readings&lt;/code&gt; table. Just like &lt;code&gt;measures_with_pk&lt;/code&gt; needed defining correctly when it came to the changelog and retention, so the &lt;code&gt;readings&lt;/code&gt; table (and &lt;code&gt;stations_with_pk&lt;/code&gt; too, once we‚Äôre done here). Since we‚Äôre rebuilding it we‚Äôll add in the headers too whilst we‚Äôre at it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings01&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;
	&lt;span style=&#34;color: #008080&#34;&gt;`dateTime`&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LOCAL&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;TIME&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ZONE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;DOUBLE&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;headers&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;MAP&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #009999&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;STRING&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;METADATA&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`dateTime`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;ENFORCED&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;DISTRIBUTED&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;HASH&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`dateTime`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #009999&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;BUCKETS&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;changelog.mode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	     &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.retention.time&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings01&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt;  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
				  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;http://environment&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;gov&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;uk/flood-monitoring/id/measures/&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
				  &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
		   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;MAP&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;publisher&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;publisher&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;headers&lt;/span&gt;
	  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`flood-monitoring-readings`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;
		   &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;CROSS&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;UNNEST&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs check the new &lt;code&gt;readings01&lt;/code&gt; table for the same measure and time period as we were examining above:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings01&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;measure&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;F7070-flow--i-15_min-m3_s&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;BETWEEN&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;2025-03-01 10:00:00.000&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;2025-03-01 13:00:00.000&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;dateTime                measure                   value headers
2025-03-01 10:00:00.000 F7070-flow--i-15_min-m3_s 0.177 {version=0.9, publisher=Environment Agency}
2025-03-01 10:15:00.000 F7070-flow--i-15_min-m3_s 0.177 {version=0.9, publisher=Environment Agency}
2025-03-01 10:45:00.000 F7070-flow--i-15_min-m3_s 0.177 {version=0.9, publisher=Environment Agency}
2025-03-01 11:00:00.000 F7070-flow--i-15_min-m3_s 0.177 {version=0.9, publisher=Environment Agency}
2025-03-01 11:30:00.000 F7070-flow--i-15_min-m3_s 0.175 {version=0.9, publisher=Environment Agency}
2025-03-01 12:00:00.000 F7070-flow--i-15_min-m3_s 0.175 {version=0.9, publisher=Environment Agency}
2025-03-01 12:15:00.000 F7070-flow--i-15_min-m3_s 0.175 {version=0.9, publisher=Environment Agency}
2025-03-01 12:45:00.000 F7070-flow--i-15_min-m3_s 0.174 {version=0.9, publisher=Environment Agency}
2025-03-01 13:00:00.000 F7070-flow--i-15_min-m3_s 0.174 {version=0.9, publisher=Environment Agency}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;(I manually sorted the lines chronologically to make it easier to examine).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we have just one reading stored for &lt;code&gt;dateTime=2025-03-01 11:30:00.000&lt;/code&gt;. Looking at the changelog you can see the duplicate coming in and replacing what was there already for that time:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;Operation dateTime                measure                   value headers
[‚Ä¶]
+I        2025-03-01 11:30:00.000 F7070-flow--i-15_min-m3_s 0.175 {version=0.9, publisher=Environment Agency}
-U        2025-03-01 11:30:00.000 F7070-flow--i-15_min-m3_s 0.175 {version=0.9, publisher=Environment Agency}
+U        2025-03-01 11:30:00.000 F7070-flow--i-15_min-m3_s 0.175 {version=0.9, publisher=Environment Agency}
[‚Ä¶]&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_lets_try_the_join_again&#34;&gt;Let‚Äôs try the join again&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Phew. That was quite the detour. Now that we‚Äôve changed the types of the tables to &lt;code&gt;upsert&lt;/code&gt; and defined a primary key for each, we should &lt;em&gt;hopefully&lt;/em&gt; get no duplicates when we run this query against the new &lt;code&gt;readings01&lt;/code&gt; table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`dateTime`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`$rowtime`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r_rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`$rowtime`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m_rowtime&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`label`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	   &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`parameterName`&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings01&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures_with_pk`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;
 &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;F7070-flow--i-15_min-m3_s&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #0086B3&#34;&gt;dateTime&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;2025-02-26 10:00:00.000&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The results look good. We can directly check for duplicates too:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;SELECT dateTime, `measure`, COUNT(*) FROM readings01 WHERE `measure` = &amp;#39;F7070-flow--i-15_min-m3_s&amp;#39;
 GROUP BY dateTime, `measure` ;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/Pasted%20image%2020250307155847.webp&#34; alt=&#34;Pasted image 20250307155847&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Huzzah!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/a-bald-man-with-glasses-and-a-mustache-is-saying-huzzah.gif&#34; alt=&#34;a bald man with glasses and a mustache is saying huzzah&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_joining_the_data_to_stations&#34;&gt;Joining the data to &lt;code&gt;stations&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We‚Äôll learn from what we did above, and update &lt;code&gt;stations&lt;/code&gt; with the correct changelog and retention settings:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`stations_with_pk`&lt;/span&gt;
	&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;changelog.mode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;upsert&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	     &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;kafka.retention.time&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #d14&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we‚Äôll try a join across all three entities - for a given reading, enrich it with measure details and station details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/02/4a663670f62f9acd7d15158b64bfa417.excalidraw.svg&#34; alt=&#34;4a663670f62f9acd7d15158b64bfa417.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;background-color: #f8f8f8&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;SELECT&lt;/span&gt;  &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`dateTime`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`value`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`parameterName`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`unitName`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`label`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`town`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`riverName`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`catchmentName`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`label`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`period`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`qualifier`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`valueType`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`stationReference`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`dateOpened`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`easting`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`northing`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`lat`&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`long`&lt;/span&gt;
  &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;readings01&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`measures_with_pk`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #008080&#34;&gt;`measure`&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;notation&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color: #008080&#34;&gt;`stations_with_pk`&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;
       &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stationReference&lt;/span&gt; &lt;span style=&#34;color: #000000;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color: #f8f8f8&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;stationReference&lt;/span&gt;&lt;span style=&#34;background-color: #f8f8f8&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and‚Ä¶it works!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot%202025-03-07%20at%2017.12.32.gif&#34; alt=&#34;CleanShot%202025 03 07%20at%2017.12.32&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let‚Äôs take a look at a specific station:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/03/CleanShot%202025-03-07%20at%2017.29.32@2x.webp&#34; alt=&#34;CleanShot%202025 03 07%20at%2017.29.32@2x&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That was fun :) Stay tuned for more Flink-y fun and data wrangling!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üí° I built this blog using &lt;a href=&#34;https://www.confluent.io/en-gb/product/flink/&#34;&gt;Apache Flink for Confluent Cloud&lt;/a&gt; which is why you see things like the nice data visualisations and automatic table/topic mappings.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;AFAIK the principles should all be the same if you want to use Apache Flink too; the CLI is slightly different, and you‚Äôll have to figure out your own dataviz :)&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>