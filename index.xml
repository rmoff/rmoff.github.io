<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rmoff&#39;s random ramblings</title>
    <link>https://rmoff.net/</link>
    <description>Recent content on rmoff&#39;s random ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>2025-09-08</lastBuildDate>
    
        <atom:link href="https://rmoff.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Stumbling into AI: Part 2—Models</title>
      <link>https://rmoff.net/2025/09/08/stumbling-into-ai-part-2models/</link>
      <pubDate>2025-09-08</pubDate>
      
      <guid>https://rmoff.net/2025/09/08/stumbling-into-ai-part-2models/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/09/t_IMG_2446.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;A &lt;a href=&#34;https://rmoff.net/categories/stumbling-into-ai&#34;&gt;short series&lt;/a&gt; of notes for myself as I learn more about the AI ecosystem as of September 2025.&lt;/em&gt;
&lt;em&gt;The driver for all this is understanding more about Apache Flink’s &lt;a href=&#34;https://github.com/apache/flink-agents&#34;&gt;&lt;strong&gt;Flink Agents&lt;/strong&gt;&lt;/a&gt; project, and Confluent’s &lt;a href=&#34;https://www.confluent.io/product/streaming-agents/&#34;&gt;&lt;strong&gt;Streaming Agents&lt;/strong&gt;&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Having &lt;a href=&#34;https://rmoff.net/2025/09/04/stumbling-into-ai-part-1mcp/&#34;&gt;poked around MCP&lt;/a&gt; and got a broad idea of what it is, I want to next look at Models.
What used to be as simple as &amp;#34;&lt;em&gt;I used AI&lt;/em&gt;&amp;#34; actually boils down into several discrete areas, particularly when one starts looking at using LLMs beyond writing &lt;a href=&#34;https://rmoff.net/images/2025/09/13d0418e1ddd2f60eef260aa512cb2a27aed080a4702fd7f01e73ef7b8ba5c2b.webp&#34;&gt;a rap about Apache Kafka in the style of Monty Python&lt;/a&gt; and using it to build agents (like the Flink Agents that prompted this exploration in the first place).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/models.excalidraw.webp&#34; alt=&#34;models.excalidraw&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_models_large_language_ones_to_be_precise&#34;&gt;Models (Large Language ones, to be precise)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is the what it’s all about right here.
Large Language Models (LLMs) are what piqued the interest of nerds outside the academic community in 2023 and the broader public a year or so later.
What used to be a &amp;#34;&lt;em&gt;OMFG have you seen this&lt;/em&gt;&amp;#34; moment is now somewhat passé.
Of &lt;em&gt;course&lt;/em&gt; I can ask my computer to write my homework assignment for me.
Of &lt;em&gt;course&lt;/em&gt; I can use my phone to explain the nuances of the leg-before-wicket rule in Cricket.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/models1.excalidraw.webp&#34; alt=&#34;models1.excalidraw&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Without a model, the whole AI sandcastle collapses.
There are &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_large_language_models&#34;&gt;many dozens of LLMs&lt;/a&gt;.
The most well-known ones are grouped into families and include &lt;a href=&#34;https://platform.openai.com/docs/models&#34;&gt;GPT&lt;/a&gt;, &lt;a href=&#34;https://docs.anthropic.com/en/docs/about-claude/models/overview#model-names&#34;&gt;Claude&lt;/a&gt;, and &lt;a href=&#34;https://ai.google.dev/gemini-api/docs/models&#34;&gt;Gemini&lt;/a&gt;.
Within these there are different models, such as GPT-5, Claude 4.1, and so on.
Often these models themselves have variants, specific to certain tasks like writing software code, generating images, or understanding audio.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_companies&#34;&gt;Companies&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The big companies behind the models include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;OpenAI (GPT)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Anthropic (Claude)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google (Gemini)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Meta (Llama)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_how_does_it_work&#34;&gt;How does it work?&lt;/h3&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Any sufficiently advanced technology is indistinguishable from magic.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;— &lt;a href=&#34;https://en.wikipedia.org/wiki/Clarke%27s_three_laws#cite_note-:1-2&#34;&gt;Arthur C. Clarke&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Srsly tho, I’m not going to even pretend to try and understand how LLMs works.
Just as I couldn’t tell you how the CPU in my laptop works, but I know that it’s there and &lt;em&gt;waves hands&lt;/em&gt; does stuff, the same is true for LLMs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You give them text, they give you a response.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want a really good overview of LLMs, have a look at this excellent talk from one of the OGs in the LLM space, Andrej Karpathy:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/zjkBMFhNj_g&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_hallucinations&#34;&gt;Hallucinations&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One of my favourite descriptions of LLMs likened them to an &lt;strong&gt;over-eager, hungover, intern&lt;/strong&gt;.
They can do a lot, and know a lot of the words, but you’d never quite trust what they write.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As LLMs improve, it’s less likely you’ll get completely BS responses from them, but part of the risk is that they usually express themselves extremely confidently.
Here’s what an LLM told me about my home town:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ilkley:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Known for its stunning lakes (Lythwaite Lake) and the Dung scale viaduct, which provides a breathtaking view of the surrounding landscape.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Has a rich history, including being part of the Lancashire cotton industry in the 1800s.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Sounds plausible, right?
But &lt;code&gt;Lythwaite Lake&lt;/code&gt; and &lt;code&gt;Dung scale viaduct&lt;/code&gt; &lt;em&gt;do not exist&lt;/em&gt; (nor is there a lake or viaduct near the town).
And &lt;a href=&#34;https://en.wikipedia.org/wiki/Wars_of_the_Roses&#34;&gt;worse&lt;/a&gt;, Ilkley is very much in Yorkshire, not Lancashire!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Of course, it’s easy to cherry-pick these examples.
If I ask a better model about Ilkley, it is &lt;a href=&#34;https://en.wikipedia.org/wiki/Ilkley&#34;&gt;completely right&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ilkley:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Known for its dramatic moorland (Ilkley Moor) and the Cow and Calf rocks, offering sweeping views over Wharfedale and inspiring the song “On Ilkla Moor Baht ’at.”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Has a rich history, from its Roman fort (Olicana) and medieval origins to becoming a Victorian spa town famed for hydrotherapy and elegant architecture.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_tokens&#34;&gt;Tokens&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The input and output of LLMs is measured—and in many cases, charged—on the basis of &lt;em&gt;tokens&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just like the video above explaining how LLMs work, if you want to know about details of tokenisation check out this explainer:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/zduSFxRajkE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In some cases, the number of words is equivalent to the number of tokens:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;ttok never gonna give you up
5&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;but often not:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;ttok apache flink
3
&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;ttok supercalifragilisticexpialidocious
11&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Different LLMs may use different tokenisation too.
You can use the &lt;a href=&#34;https://github.com/simonw/ttok&#34;&gt;ttok&lt;/a&gt; tool (shown above) to explore tokenisation in more detail.
Some tools, such as Goose, will also show you how many tokens are used:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/441a2e716c8ec369ff81988cb0c369a67ffdfd10d292d87bd42d0c3bc65a770a.webp&#34; alt=&#34;441a2e716c8ec369ff81988cb0c369a67ffdfd10d292d87bd42d0c3bc65a770a&#34; width=&#34;600px&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You’ll notice that as well as the token count, there’s a dollar amount next to it.
Since I’m running the model locally (using &lt;a href=&#34;https://ollama.com/&#34;&gt;Ollama&lt;/a&gt;) there’s no direct cost for the invocation of it.
Where the token count matters is when you’re using remote models, like GPT or Claude.
These are &lt;a href=&#34;https://platform.openai.com/docs/pricing?latest-pricing=standard#text-tokens&#34;&gt;charged&lt;/a&gt; based on the number of tokens used, often listed as a cost per 1M tokens.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Nine tokens might seem like a drop in the ocean of a million, but look at this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/c4ad35ade6245a62812b3aa3026cd7e2765c76d781b2d08339bbbfa0923e8596.webp&#34; alt=&#34;c4ad35ade6245a62812b3aa3026cd7e2765c76d781b2d08339bbbfa0923e8596&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The same input prompt (&lt;code&gt;supercalifragilisticexpialidocious&lt;/code&gt;) but somehow I just used nearly 10k tokens!
If you read my &lt;a href=&#34;https://rmoff.net/2025/09/04/stumbling-into-ai-part-1mcp/&#34;&gt;blog post about MCP&lt;/a&gt; you’ll know that LLMs can make use of MCP servers (often generically referred to as &amp;#34;tools&amp;#34; or &amp;#34;extensions&amp;#34;).
They can be used to look up further information to support the user’s request (&amp;#34;&lt;em&gt;what films have they rated the highest&lt;/em&gt;&amp;#34;), or even invoke actions (&amp;#34;&lt;em&gt;book two tickets at the local cinema to see Top Gun on Monday at 8pm&lt;/em&gt;&amp;#34;).
So when I gave the agent the prompt &lt;code&gt;supercalifragilisticexpialidocious&lt;/code&gt;, what it actually did was include information about all of the tools configured, so that the LLM could choose to use them or not—and this took up a lot of tokens, because there were several tools configured.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So if I disable the tools/MCP servers, the token count should be back to just that of the input expression?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/1cb6fa8178df3c00a5e73f57459124f2afee02714fc43659881fd2baf3dde655.webp&#34; alt=&#34;1cb6fa8178df3c00a5e73f57459124f2afee02714fc43659881fd2baf3dde655&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Not so.
And that’s because most of the time you use an LLM you’re doing so with a particular purpose or framing, and so a &lt;em&gt;system prompt&lt;/em&gt; will help focus it on what you want it to do.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For example, here is the same input, but with two different system prompts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;Internet&amp;#34;&lt;/span&gt; | &lt;span style=&#34;color: #ae81ff&#34;&gt;\ &lt;/span&gt;                                        &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    llm &lt;span style=&#34;color: #f92672&#34;&gt;-m&lt;/span&gt; gpt-oss:latest &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;Define this word. Be concise.&amp;#34;&lt;/span&gt;                    &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;**&lt;/span&gt;Internet&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;**&lt;/span&gt; – a global network of interconnected computers that exchange data using standardized protocols, enabling communication, information sharing, and services across the world.

&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;Internet&amp;#34;&lt;/span&gt; | &lt;span style=&#34;color: #ae81ff&#34;&gt;\ &lt;/span&gt;                                        &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    llm &lt;span style=&#34;color: #f92672&#34;&gt;-m&lt;/span&gt; gpt-oss:latest &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
        &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;Define this word to a five year old. Be concise.&amp;#34;&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
The internet is like a giant invisible playground &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;for &lt;/span&gt;computers. It lets them share pictures, videos, games, and messages so you can learn, play, and talk to friends from anywhere.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;User input&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;System prompt&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ultimately the system prompt is just a bunch of tokens that get passed to the LLM; and that’s probably what we’re seeing in the screenshot above where the token count is higher than that of the input text alone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_why_does_this_matter&#34;&gt;Why does this matter?&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Because someone has to pay for all this fun, and how many tokens you use determines how much you’ll pay.
You might be using the LLM provider’s API directly and thus directly exposed to the token cost, or you might be using a tool whose authoring company pays the API bills and in turn will cap your invocation through the tool at a certain point.
You might think a million tokens sounds a lot, but this can easily get burnt through with things like:
* MCP usage, in which the output from an API call might be a long JSON document - and often multiple API calls will get strung together to satisfy a single user request
* Coding help, when the LLM will have to be given reams of code across potentially many files&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_context_window&#34;&gt;Context Window&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you interact with an LLM, it can &amp;#39;remember&amp;#39; what you’ve told it—and what it’s told you—before.
This is called the context window, and is measured in tokens.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Generally, the smaller the context window the faster a model will return, compared to a larger window.
Once the window is full you’ll see the model start to &amp;#34;forget&amp;#34; things, or just refuse to run.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some AI tools will expose the current context window size, like Goose:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/e40e0845d3e3e37bd2448014a136da8709c6ea48287465e4d65f24cb45d98b08.webp&#34; alt=&#34;e40e0845d3e3e37bd2448014a136da8709c6ea48287465e4d65f24cb45d98b08&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can also sometimes &amp;#39;compact&amp;#39; the context window, which will in effect summarise everything &amp;#34;discussed&amp;#34; so far with the LLM and start a new conversation.
Since the summary will be shorter than the dialogue from which it was created, the context window will be smaller.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_weights_parameters&#34;&gt;Weights &amp;amp; Parameters&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After many years working with open source software, I was puzzled by the new terminology that I started to hear in relation to LLMs: &amp;#34;Open Weight&amp;#34;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In terms of software alone, open source has &lt;a href=&#34;https://opensource.org/osd&#34;&gt;a strict set of definitions&lt;/a&gt;, but one of the key ones from an end-user point of view is that I can access all the source code and in theory could build the program from scratch myself.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When it comes to LLMs it’s not quite so straightforward.
Watching &lt;a href=&#34;https://www.youtube.com/watch?v=zjkBMFhNj_g&#34;&gt;Andrej Karpathy’s video&lt;/a&gt; I’ve picked up the basic understanding that you’ve got the mega-expensive pre-training in which vast swathes of the internet and beyond are boiled down into a model.
He &lt;a href=&#34;https://youtu.be/zjkBMFhNj_g?feature=shared&amp;amp;t=258&#34;&gt;gives the example&lt;/a&gt; of Llama 2 costing $2M and taking 12 days to train.
The size of the model is defined by the number of parameters.
Broadly, the greater the number of parameters, the greater the accuracy of the LLM.
Fewer parameters means less computing power needed and potentially less accurate results—but depending on what you’re asking the LLM to do can sometimes be a good tradeoff.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Out of this pre-training is then a core model which is then trained further in what’s known as fine-tuning.
This is cheaper, and faster, to do.
It can be used to specialise the model towards particular tasks or domains.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Companies approach the sharing of models in different ways.
Some keep absolutely everything to themselves, giving the end user simply an API endpoint or web page with which to interact with the model that they’ve built.
Others will perhaps share the pre-trained model (but not the source data or code that went into training it), giving people the opportunity to then train it further with their own fine-tuning.
This is the &amp;#34;Open Weight&amp;#34; approach.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can read more about &lt;a href=&#34;https://ai.meta.com/blog/llama-4-multimodal-intelligence/&#34;&gt;Llama 4&lt;/a&gt; and &lt;a href=&#34;https://ai.meta.com/research/publications/the-llama-3-herd-of-models/&#34;&gt;Llama 3&lt;/a&gt; on the Meta AI blog, as well as &lt;a href=&#34;https://openai.com/index/introducing-gpt-oss/&#34;&gt;GPT-OSS from OpenAI&lt;/a&gt;.
This post on Reddit is also interesting: &lt;a href=&#34;https://www.reddit.com/r/LocalLLaMA/comments/1iw1xn7/the_paradox_of_open_weights_but_closed_source/&#34;&gt;The Paradox of Open Weights, but Closed Source&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_clients&#34;&gt;Clients&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;OK, so we’ve got our models.
They come in different shapes and sizes, and some are better than others.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To use an LLM, one needs a client.
Clients take various forms:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Desktop and Web clients, specific to the AI company developing a family of LLMs.
These include &lt;a href=&#34;https://chatgpt.com/&#34;&gt;ChatGPT&lt;/a&gt; and &lt;a href=&#34;https://claude.ai/download&#34;&gt;Claude&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/claudeandchatgpt.webp&#34; alt=&#34;claudeandchatgpt&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tools built around AI functionality (e.g. Cursor) or with it bolted on whether you want it or not (&lt;em&gt;i.e. every bloody application out there these days&lt;/em&gt; 😜).
Some of these will give you access to a set of models, whilst others will mask the model itself and just call it &lt;del&gt;&amp;#34;magic&amp;#34;&lt;/del&gt;&amp;#34;AI&amp;#34;&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/79ab812d942ed692f1dc202e96075596a5578951d89e2f9c76123284b38b01e7.webp&#34; alt=&#34;79ab812d942ed692f1dc202e96075596a5578951d89e2f9c76123284b38b01e7&#34; width=&#34;600px&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/cursor00.webp&#34; alt=&#34;cursor00&#34; width=&#34;600px&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Model-agnostic interfaces, including:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://manual.raycast.com/ai&#34;&gt;Raycast&lt;/a&gt;, which as part of its application gives the user the option to interact with dozens of different LLMs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Simon Willison’s &lt;a href=&#34;https://llm.datasette.io/en/stable/&#34;&gt;&lt;code&gt;llm&lt;/code&gt; CLI&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;# Use GPT-OSS model&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;llm &lt;span style=&#34;color: #f92672&#34;&gt;-m&lt;/span&gt; gpt-oss:latest &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;What year was the world wide web invented? Be concise&amp;#39;&lt;/span&gt;
1989.

&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;# Use Llama 3.1 model&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;llm &lt;span style=&#34;color: #f92672&#34;&gt;-m&lt;/span&gt; llama3.1:latest &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;What year was the world wide web invented? Be concise&amp;#39;&lt;/span&gt;
The World Wide Web &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;(&lt;/span&gt;WWW&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;)&lt;/span&gt; was invented &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in &lt;/span&gt;1989 by Tim Berners-Lee.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://block.github.io/goose/&#34;&gt;Goose&lt;/a&gt;, which is an &lt;em&gt;an extensible open source AI agent&lt;/em&gt;.
I’ve not used it a ton yet but at first glance it at least gives you a UI and CLI for interacting with LLMs and MCPs:&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/bb72744c933acfc7a85a9127f70f8161872462e7f95648fa66d47119718de9c0.webp&#34; alt=&#34;bb72744c933acfc7a85a9127f70f8161872462e7f95648fa66d47119718de9c0&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_where_the_model_runs&#34;&gt;Where the model runs&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Running LLMs takes some grunt, which is why they’re particularly well suited to being provided as hosted services since someone else can absorb the cost of provisioning the expensive hardware necessary to run them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are 3 broad options for getting access to running a model (assuming you’re using a client that has pluggable models; if you’re using something like ChatGPT then you just access the models through that alone and they run the models for you):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;My cloud&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My laptop, my on-premises servers with some big fat GPUs, etc&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Their cloud&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Servers run by the model publishers themselves; &lt;a href=&#34;https://platform.openai.com/docs/overview&#34;&gt;OpenAI&lt;/a&gt;, &lt;a href=&#34;https://www.anthropic.com/api&#34;&gt;Anthropic&lt;/a&gt;, etc.
Usually they’ll only offer access to their own models.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Someone else’s cloud&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Models hosted by 3rd party providers, including &lt;a href=&#34;https://aws.amazon.com/bedrock/&#34;&gt;Amazon Bedrock&lt;/a&gt;, &lt;a href=&#34;https://ai.azure.com/&#34;&gt;Azure AI Foundry&lt;/a&gt;, &lt;a href=&#34;https://openrouter.ai/&#34;&gt;OpenRouter&lt;/a&gt;, etc.
The big providers like Azure and Amazon will usually have partnerships with some model companies and provide access to their models, whilst others may only offer access to publicly-available models (basically what you or I could run on our own locally, but with the necessary hardware behind it to perform well).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ve found &lt;a href=&#34;https://openrouter.ai/&#34;&gt;OpenRouter&lt;/a&gt; particularly useful as it gives you access to free models, and the ability to run the same prompt across different models:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/0371e711472c4996419299c514fe5027c8963e680292df55dc7aafb1815bb2be.webp&#34; alt=&#34;0371e711472c4996419299c514fe5027c8963e680292df55dc7aafb1815bb2be&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It also has a good catalog of models and details of which provider offers them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Finally, OpenRouter is a pragmatic way to make use of the free models; &lt;code&gt;gpt-oss:120b&lt;/code&gt; might sound nice and make claims about being as good as some of the closed-weights GPT models, but it’s irrelevant if it won’t run locally.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_routers&#34;&gt;Routers&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The final piece of the puzzle, for now, is &lt;strong&gt;routers&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Given that there are multiple models, and multiple places in which to run them, how do you decide which one to call?
Different models are better at different tasks; or put another way, the big expensive models are usually good at everything but you may get a faster or cheaper (or perhaps even just more accurate) response from a specialised model.
You could take the artisanal approach, and curate your model access based on your in-depth understanding of all models each time you want to call one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Alternatively, you use a router, which is a model itself and one that is specialised in understanding LLMs strengths, analysing the type of workload you want to run, and routing it to the most suitable one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some routers include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;OpenRouter’s &lt;a href=&#34;https://openrouter.ai/openrouter/auto&#34;&gt;AutoRouter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/SomeOddCodeGuy/WilmerAI&#34;&gt;WilmerAI&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.aurelio.ai/semantic-router&#34;&gt;Semantic Router&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
You don’t have to use a router, but you’ll possibly see mention of them which is why I’m mentioning them here.
Also, because I got confused by &lt;code&gt;OpenRouter&lt;/code&gt; also being a service provider, not just a router :)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Stumbling into AI: Part 1—MCP</title>
      <link>https://rmoff.net/2025/09/04/stumbling-into-ai-part-1mcp/</link>
      <pubDate>2025-09-04</pubDate>
      
      <guid>https://rmoff.net/2025/09/04/stumbling-into-ai-part-1mcp/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/09/2025-09-03T10-32-54-772Z.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;A &lt;a href=&#34;https://rmoff.net/categories/stumbling-into-ai&#34;&gt;short series&lt;/a&gt; of notes for myself as I learn more about the AI ecosystem as of September 2025.&lt;/em&gt;
&lt;em&gt;The driver for all this is understanding more about Apache Flink’s &lt;a href=&#34;https://github.com/apache/flink-agents&#34;&gt;&lt;strong&gt;Flink Agents&lt;/strong&gt;&lt;/a&gt; project, and Confluent’s &lt;a href=&#34;https://www.confluent.io/product/streaming-agents/&#34;&gt;&lt;strong&gt;Streaming Agents&lt;/strong&gt;&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first thing I want to understand better is MCP.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/2025-09-03T10-32-54-772Z.webp&#34; alt=&#34;2025 09 03T10 32 54 772Z&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For context, so far I’ve been a keen end-user of LLMs, for &lt;a href=&#34;https://rmoff.net/2023/12/07/productivity-tools-ai-image-generators/&#34;&gt;generating images&lt;/a&gt;, proof-reading my blog posts, and general lazyweb stuff like getting it to spit out the right syntax for a bash one-liner.
I use &lt;a href=&#34;https://rmoff.net/categories/raycast/&#34;&gt;Raycast&lt;/a&gt; with its &lt;a href=&#34;https://manual.raycast.com/ai&#34;&gt;Raycast AI&lt;/a&gt; capabilities to interact with different models, and I’ve used Cursor to &lt;em&gt;vibe-code&lt;/em&gt; some &lt;a href=&#34;https://github.com/rmoff/rmoff-blog/pull/153&#34;&gt;useful&lt;/a&gt; (and &lt;a href=&#34;https://github.com/rmoff/rmoff-blog/pull/154/commits/30f43034ddd1217df8ad7db0d57b3153bb745f9c&#34;&gt;less useful&lt;/a&gt;, fortunately never deployed) functionality for this blog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But what I’ve not done so far is dig any further into the ecosystem beyond.
Let’s fix that!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_mcp&#34;&gt;MCP&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, what is MCP?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Model Context Protocol&lt;/em&gt; sounds fancy and intimidating, but on first pass after a couple of hours poking around here’s my rough take:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;MCP exists as an open standard defining a way for LLMs to interact with APIs.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This makes a ton of sense, because the alternative is something awful like vibe coding some piece of boilerplate code to call the API to feedback to the LLM.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/mcp-01.excalidraw.webp&#34; alt=&#34;mcp 01.excalidraw&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://modelcontextprotocol.io/docs/learn/server-concepts#core-building-blocks&#34;&gt;MCP core concepts&lt;/a&gt; are &lt;strong&gt;tools&lt;/strong&gt; (the API calls I’m talking about above), &lt;strong&gt;resources&lt;/strong&gt;, and &lt;strong&gt;prompts&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The MCP website has a useful guide to &lt;a href=&#34;https://modelcontextprotocol.io/docs/learn/architecture#data-layer-2&#34;&gt;how MCP clients and servers interact&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You’ll find plenty of &lt;a href=&#34;https://mcpservers.org/&#34;&gt;lists&lt;/a&gt; &lt;a href=&#34;https://mseep.ai/&#34;&gt;of&lt;/a&gt; &lt;a href=&#34;https://github.com/modelcontextprotocol/servers&#34;&gt;MCP&lt;/a&gt; &lt;a href=&#34;https://github.com/jaw9c/awesome-remote-mcp-servers&#34;&gt;servers&lt;/a&gt; &lt;a href=&#34;https://glama.ai/mcp/servers&#34;&gt;online&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
This article is basically a journal of my journey figuring out MCP in my head, taking somewhat rambling twists and turns.
However, if you’d like to watch a clearly organised and crystal-clear explanation of MCP from one of the industry’s best, check out this video from Tim Berglund:

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/FLpS7OfD5-s&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_local_or_remote&#34;&gt;Local or Remote&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The APIs that the MCP server interacts with could be local (e.g. your filesystem, a database, etc), or remote (e.g. a SaaS platform like AWS or simply a website like AirBnb or Strava).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MCP servers can be run locally, which you’d do if you’re accessing local resources, or if you are developing the MCP server yourself (or want to run one that someone else has written and isn’t provided as a hosted service).
You can also host MCP servers remotely (there are a bunch &lt;a href=&#34;https://github.com/jaw9c/awesome-remote-mcp-servers&#34;&gt;listed here&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Where you want your MCP server also depends on where your LLM client is running.
There’s no point running your MCP locally if your LLM client is in the cloud somewhere.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_stdio_sse_wtf&#34;&gt;stdio, sse, wtf?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If your MCP server is running local to the client, it can communicate using &lt;code&gt;stdio&lt;/code&gt; (good ole&amp;#39; &lt;a href=&#34;https://tldp.org/LDP/lpg/node10.html&#34;&gt;Linux pipes&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MCP servers can also use &lt;code&gt;HTTP&lt;/code&gt; or &lt;code&gt;HTTP SSE&lt;/code&gt;, enabling clients to work with them over a network.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;See &lt;a href=&#34;https://docs.anthropic.com/en/docs/claude-code/mcp#installing-mcp-servers&#34;&gt;Anthropic’s guide&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_using_mcp&#34;&gt;Using MCP&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To use an MCP you’ll usually configure your AI tool with it, as an MCP client.
&lt;a href=&#34;https://platform.openai.com/docs/mcp&#34;&gt;ChatGPT&lt;/a&gt; and &lt;a href=&#34;https://docs.anthropic.com/en/docs/claude-code/mcp&#34;&gt;Claude&lt;/a&gt; are the biggies here.
I like using Raycast as it gives me access to a bunch of different LLMs, and also &lt;a href=&#34;https://manual.raycast.com/model-context-protocol&#34;&gt;supports MCPs&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
This is where Flink Agents enter the room, as they use MCPs too
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s a Raycast conversation using a &lt;a href=&#34;https://github.com/r-huijts/strava-mcp?tab=readme-ov-file&#34;&gt;Strava MCP&lt;/a&gt; running locally:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/2025-09-02T15-11-39-940Z.webp&#34; alt=&#34;2025 09 02T15 11 39 940Z&#34; width=&#34;600&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Looking at it, it’s quite clearly just a wrapper around the &lt;a href=&#34;https://developers.strava.com/docs/reference/#api-Activities-getActivityById&#34;&gt;Strava API&lt;/a&gt; (which is totally cool, it’s all it claims to be too).
It’s just giving the LLM clear parameters and on how to use the API—as well as, crucially, a description of what the API does.
For example, rather than just “get-recent-activities”, it tells the LLM “Fetches the most recent activities for the authenticated athlete.”.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When I ask my question, the LLM draws on the fact that it has Strava MCP available with the explanations of what each &amp;#34;tool&amp;#34; (API call) provides.
It uses this to work out what to tell the client (Raycast) to request from the MCP server:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/mcp-02.excalidraw.webp&#34; alt=&#34;mcp 02.excalidraw&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The response—a lump of JSON—is passed back to the LLM, which then does its LLM magic and uses the information to answer my question:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/mcp-03.excalidraw.webp&#34; alt=&#34;mcp 03.excalidraw&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
The text in red is the actual &amp;#34;&lt;em&gt;Thinking&lt;/em&gt;&amp;#34; that the LLM does; you can usually access this in your client, such as Raycast here:
&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/strava-mcp-local.webp&#34; alt=&#34;strava mcp local&#34;/&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_poking_around&#34;&gt;Poking around&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can use the &lt;a href=&#34;https://modelcontextprotocol.io/legacy/tools/inspector#feature-overview&#34;&gt;Inspector tool&lt;/a&gt; to look at MCP servers and understand more about how they interact with clients.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;npx @modelcontextprotocol/inspector node&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;(there’s also a &lt;a href=&#34;https://github.com/wong2/mcp-cli?tab=readme-ov-file&#34;&gt;CLI MCP inspector&lt;/a&gt;, if you prefer)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can specify both local or remote MCP servers.
Here’s the above local Strava MCP server.
It’s a &lt;code&gt;stdio&lt;/code&gt; server and so I just specify the command to launch it—&lt;code&gt;node&lt;/code&gt; plus the code file of the server:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/fa29490d2144779ec1176a9e1c36b136a80808501590524648faec44011cb56a.webp&#34; alt=&#34;fa29490d2144779ec1176a9e1c36b136a80808501590524648faec44011cb56a&#34; width=&#34;600&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once connected, &lt;code&gt;List Tools&lt;/code&gt; will show me the available tools (in this case, the API calls that the MCP server is a wrapper for), and you can invoke a tool to see the output:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/strava1.webp&#34; alt=&#34;strava1&#34; width=&#34;900&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The list of tools describes to the LLM what each does, the output it’ll get—and what input it can give to the command.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/strava2.webp&#34; alt=&#34;strava2&#34; width=&#34;800&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For example, I might use natural language to ask for some running recommendations, and the LLM will understand that it can use this particular tool (API call) to look up some routes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/2025-09-03T11-34-53-950Z.webp&#34; alt=&#34;2025 09 03T11 34 53 950Z&#34; width=&#34;600&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;By using the MCP Inspector you can look at the actual output from the tool (API call); the above image shows how the LLM then weaves this output into the conversation:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/2025-09-03T11-37-04-569Z.webp&#34; alt=&#34;2025 09 03T11 37 04 569Z&#34; width=&#34;400&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_sum_is_greater_than_the_parts&#34;&gt;The sum is greater than the parts&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In the example above I showed the LLM getting running routes from the Strava MCP.
If you look closer though, the LLM is using another MCP server (the &amp;#34;Location&amp;#34; one that Raycast provides) to find out the latitude and longitude of Ilkley.
That’s because the LLM itself doesn’t know where Ilkley actually &lt;em&gt;is&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is a nice example of where the natural language side of LLMs can benefit from all the data enrichment that MCP servers can provide.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/strava-mcp-local1.webp&#34; alt=&#34;strava mcp local1&#34; width=&#34;400&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_its_not_all_just_api_calls&#34;&gt;It’s not all just API calls&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So API calls == MCP Server &lt;a href=&#34;https://modelcontextprotocol.io/docs/learn/server-concepts#tools-ai-actions&#34;&gt;Tools&lt;/a&gt;.
There are also &lt;a href=&#34;https://modelcontextprotocol.io/docs/learn/server-concepts#resources-context-data&#34;&gt;Resources&lt;/a&gt;, and &lt;a href=&#34;https://modelcontextprotocol.io/docs/learn/server-concepts#prompts-interaction-templates&#34;&gt;Prompts&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s an example of a Prompt from an MCP server provided by Cloudflare:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/2025-09-03T13-37-18-832Z.webp&#34; alt=&#34;2025 09 03T13 37 18 832Z&#34; width=&#34;900&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Bringing all three together is the &lt;a href=&#34;https://github.com/github/github-mcp-server&#34;&gt;GitHub MCP Server&lt;/a&gt;.
First up are the &lt;strong&gt;tools&lt;/strong&gt;, which are similar to what we saw above - nice wrappers around an existing API:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/2025-09-03T14-22-35-415Z.webp&#34; alt=&#34;2025 09 03T14 22 35 415Z&#34; width=&#34;900&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Paired with an LLM they make it easy to &amp;#34;talk&amp;#34; to your repos:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/2025-09-03T14-21-38-119Z.webp&#34; alt=&#34;2025 09 03T14 21 38 119Z&#34; width=&#34;600&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Next are the &lt;strong&gt;prompts&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/2025-09-03T14-29-41-547Z.webp&#34; alt=&#34;2025 09 03T14 29 41 547Z&#34; width=&#34;500&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And then finally &lt;strong&gt;resources&lt;/strong&gt;.
These are accessed either directly (if provided by the MCP, which they’re not here) or via &lt;strong&gt;resource templates&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/2025-09-03T14-31-31-468Z.webp&#34; alt=&#34;2025 09 03T14 31 31 468Z&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A resource template explains to the LLM the fields to provide to identify a particular resource.
For example, if you wanted your LLM to access a particular file in the repository it would be able to find it.
Here’s an example of accessing &lt;a href=&#34;https://github.com/rmoff/rmoff-blog/blob/main/README.adoc&#34;&gt;my blog repository’s README&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://rmoff.net/images/2025/09/2025-09-03T14-35-32-057Z.webp&#34; alt=&#34;2025 09 03T14 35 32 057Z&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This means that an LLM can then (with the appropriate permissions) access files in GitHub, which is pretty handy.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_more_reading&#34;&gt;More reading&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://modelcontextprotocol.io/&#34;&gt;The MCP specification&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🎥 &lt;a href=&#34;https://www.youtube.com/watch?v=FLpS7OfD5-s&#34;&gt;Model Context Protocol with Tim Berglund&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/mcp/&#34;&gt;r/mcp&lt;/a&gt;: &lt;a href=&#34;https://www.reddit.com/r/mcp/comments/1mj0fxs/i_spent_3_weeks_building_my_dream_mcp_setup_and/&#34;&gt;&amp;#34;I spent 3 weeks building my &amp;#34;dream MCP setup&amp;#34; and honestly, most of it was useless&amp;#34;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.confluent.io/blog/ai-agents-using-anthropic-mcp/&#34;&gt;A good MCP explanation, plus examples using Confluent MCP server&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://seanfalconer.medium.com/is-mcp-the-new-rest-or-the-next-betamax-a9151ba8ccb3&#34;&gt;​​Is MCP the New REST or the Next Betamax? - Sean Falconer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Interesting links - August 2025</title>
      <link>https://rmoff.net/2025/08/21/interesting-links-august-2025/</link>
      <pubDate>2025-08-21</pubDate>
      
      <guid>https://rmoff.net/2025/08/21/interesting-links-august-2025/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/08/t_IMG_2177.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Not got time for all this? I’ve marked 🔥 for my top reads of the month&lt;/em&gt; :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
You can find previous editions of &lt;em&gt;Interesting Links&lt;/em&gt; &lt;a href=&#34;https://rmoff.net/categories/interesting-links/&#34;&gt;here&lt;/a&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_data_engineering&#34;&gt;Data Engineering&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;🔥 Ben Rogojan (a.k.a. SeattleDataGuy) has a great list of &lt;a href=&#34;https://seattledataguy.substack.com/p/5-things-in-data-engineering-that&#34;&gt;5 Things in Data Engineering That Still Hold True After 10 Years&lt;/a&gt; (&lt;em&gt;guess what: data modelling matters, if you start with crap data you’ll end with crap data, and so on…&lt;/em&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Veronika Durgin shares some &lt;a href=&#34;https://freedium.cfd/https://medium.com/@durginv/self-recovering-data-pipelines-c1e4e6b7fbce&#34;&gt;good tips for building resilient data pipelines&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some good pointers for why you might want to &lt;a href=&#34;https://freedium.cfd/https://blog.dataengineerthings.org/data-platform-modernization-how-to-pick-your-stack-in-2025-part-1-da9045b0b4ed&#34;&gt;modernise your data platform&lt;/a&gt;, and &lt;a href=&#34;https://freedium.cfd/https://blog.dataengineerthings.org/data-platform-modernization-how-to-pick-your-stack-in-2025-part-2-023308ffc276&#34;&gt;how to pick your stack if you do so&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 Aleksandr Klein has a thoughtful post about &lt;a href=&#34;https://freedium.cfd/https://medium.com/justeattakeaway-tech/the-mythic-journey-of-data-quality-maturity-df7b14524180&#34;&gt;The Mythic Journey of Data Quality Maturity&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A useful post from Fiore Mario Vitale showing the use of OpenLineage to &lt;a href=&#34;https://debezium.io/blog/2025/07/21/openlineage-debezium-flink/&#34;&gt;troubleshoot data pipelines&lt;/a&gt; in Debezium and Flink.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_data_in_action&#34;&gt;Data in Action&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Building your own data ingestion framework may be a siren song for many, but Cloudflare operate at the kind of scale where it’s perhaps worth it. Read about &lt;a href=&#34;https://blog.cloudflare.com/building-jetflow-a-framework-for-flexible-performant-data-pipelines-at-cloudflare/&#34;&gt;Jetflow&lt;/a&gt; here.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nubank have published a &lt;a href=&#34;https://building.nubank.com/scaling-fraud-defense-how-nubank-evolved-its-risk-analysis-platform/&#34;&gt;series&lt;/a&gt; of &lt;a href=&#34;https://building.nubank.com/mastering-streaming-data/&#34;&gt;interesting&lt;/a&gt; &lt;a href=&#34;https://building.nubank.com/avalanche-stack-and-real-time-streaming-applications-at-nu/&#34;&gt;blog posts&lt;/a&gt; about their use of stream processing, including with Kafka and Flink. There’s also a &lt;a href=&#34;https://www.youtube.com/watch?v=awhhBlg1SqY&#34;&gt;meetup recording&lt;/a&gt; (in Spanish) that looks like it has lots more details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Details from UK Bank Monzo on their Go-based &lt;a href=&#34;https://monzo.com/blog/build-a-reactive-fraud-prevention-platform&#34;&gt;fraud prevention platform&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 Excellent blog post from Anton Borisov at Fresha detailing why and how they &lt;a href=&#34;https://freedium.cfd/https://medium.com/fresha-data-engineering/how-we-accidentally-became-one-of-uks-first-starrocks-production-pioneers-7db249f10010&#34;&gt;adopted StarRocks&lt;/a&gt; after finding that Snowflake &amp;#34;&lt;em&gt;wasn’t cost-effective — or fast enough — for chatty, near-real-time product and operational analytics.&lt;/em&gt;&amp;#34;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Guidewire have published a couple of interesting blog posts looking at their &lt;a href=&#34;https://freedium.cfd/https://medium.com/guidewire-engineering-blog/how-to-test-data-ingestion-pipeline-performance-at-scale-in-the-cloud-2862a86e598d&#34;&gt;data platform design, testing&lt;/a&gt;, and &lt;a href=&#34;https://freedium.cfd/https://medium.com/guidewire-engineering-blog/how-we-cut-operating-costs-by-80-while-ensuring-data-integrity-at-scale-fc798ecc35fc&#34;&gt;optimisation&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_apache_kafka&#34;&gt;Apache Kafka&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Trendyol’s Ahmet Tortumlu walks through the process they follow when &lt;a href=&#34;https://freedium.cfd/https://medium.com/trendyol-tech/node-replacement-in-kafka-lessons-from-a-kraft-controller-08dc5badb018&#34;&gt;replacing KRaft controller nodes&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A look at how you could use Kafka to &lt;a href=&#34;https://freedium.cfd/https://medium.com/@denizhan.aras/coding-the-standards-i-real-time-baggage-tracking-system-with-iata-r753-spring-boot-kafka-b1f5e8c568c1&#34;&gt;implement the international baggage tracking system (&amp;#34;IATA R753&amp;#34;)&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 The &lt;a href=&#34;https://old.reddit.com/r/apachekafka&#34;&gt;&lt;code&gt;r/apachekafka&lt;/code&gt; subreddit&lt;/a&gt; recently hit 17k members. It’s a funny place, with a mix of shills, trolls, n00bs who won’t even help themselves—and some lovely community conversations that remind me why I continue to enjoy being part of it :) Here are a handful of threads that caught my eye if you want to sample the fare:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://old.reddit.com/r/apachekafka/comments/1mtnm1l/best_way_to_idenditfy_job_completion_when/&#34;&gt;Best way to identify job completion…&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://old.reddit.com/r/apachekafka/comments/1mjz2xk/did_we_forget_the_primary_use_case_for_kafka/&#34;&gt;Did we forget the primary use case for Kafka?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://old.reddit.com/r/apachekafka/comments/1mp2hjb/built_an_83000_rps_ticket_reservation_system_and/&#34;&gt;Built an 83,000+ RPS ticket reservation system…&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another month, another Kafka UI—this time a TUI (Text User Interface) with a name I’ll drink to: &lt;a href=&#34;https://github.com/jonas-grgt/ktea&#34;&gt;ktea&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;a href=&#34;https://freedium.cfd/https://medium.com/cloudnativepub/evolving-kafka-integration-strategy-choosing-the-right-tool-as-requirements-grow-d9f7aaf56d80&#34;&gt;practical guide on different techniques to use&lt;/a&gt; when using Kafka for integration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A well-written &lt;a href=&#34;https://freedium.cfd/https://newfrontcreative.medium.com/escaping-the-void-of-the-data-abyss-337770a39fbc&#34;&gt;two&lt;/a&gt; &lt;a href=&#34;https://freedium.cfd/https://newfrontcreative.medium.com/beyond-the-data-abyss-6bf2d1e6e34a&#34;&gt;part&lt;/a&gt; account of Nike’s journey from TSV (&lt;em&gt;shudder&lt;/em&gt;) to Protobuf for their data pipelines.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After talks about Northguard and Xinfra in April, LinkedIn’s Stream Processing meetup continued with its impressive content in July hosting three talks:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=J55KzysEPHk&amp;amp;t=35s&#34;&gt;Scaling Kafka for Netflix’s Record-Breaking Live Events&lt;/a&gt; (Harshit Mittal, Netflix)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=J55KzysEPHk&amp;amp;t=1920s&#34;&gt;Kafka-less, Cloud-Native Stream Processing with Apache Beam and Iceberg&lt;/a&gt; (Talat Uyarer, Google)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 &lt;a href=&#34;https://www.youtube.com/watch?v=J55KzysEPHk&amp;amp;t=4316s&#34;&gt;Scaling Real-Time Usage Billing to Billions of Events per Day&lt;/a&gt; (Nick Dellamaggiore, Metronome)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_open_table_formats_catalogs&#34;&gt;Open Table Formats &amp;amp; Catalogs&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Let’s be honest, it’s mostly just Apache Iceberg…&lt;/em&gt;😅&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;🔥 I spent some time looking into Flink vs Kafka Connect vs Tableflow for getting data into Iceberg, and wrote up some of the comparison points: &lt;a href=&#34;https://rmoff.net/2025/08/18/kafka-to-iceberg-exploring-the-options/&#34;&gt;Kafka to Iceberg - Exploring the Options&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Aiven published &lt;a href=&#34;https://github.com/Aiven-Open/tiered-storage-for-apache-kafka/blob/main/iceberg_whitepaper.md&#34;&gt;a whitepaper&lt;/a&gt; with details of their plans for writing to Iceberg directly from Kafka&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;David Reger published a &lt;a href=&#34;https://blog.msgdataplatform.com/from-kafka-topics-to-iceberg-with-confluent-tableflow-5708e02d0d0a&#34;&gt;detailed writeup&lt;/a&gt; of Tableflow (Confluent’s tool for getting data from Kafka to Iceberg).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A while back &lt;a href=&#34;https://lakefs.io/blog/data-engineering-patterns-write-audit-publish/&#34;&gt;I wrote about&lt;/a&gt; the Write-Audit-Publish pattern, and so enjoyed reading these two blog posts from Turóczy Attila about &lt;a href=&#34;https://freedium.cfd/https://medium.com/@aturoczy/elegant-etl-with-apache-iceberg-branching-489a3bb89a41&#34;&gt;branching&lt;/a&gt; and &lt;a href=&#34;https://freedium.cfd/https://medium.com/@aturoczy/tagging-in-apache-iceberg-fdb7a19c0bf2&#34;&gt;tagging&lt;/a&gt; in Apache Iceberg.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 Details of taking practical advantage of more Iceberg features including time travel and schema evolution are covered in this article about building &lt;a href=&#34;https://www.infoq.com/articles/reproducible-ml-iceberg/&#34;&gt;reproducible ML systems with Iceberg and SparkSQL&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A nice hands-on example of &lt;a href=&#34;https://freedium.cfd/https://medium.com/@aalopatin/from-kafka-to-iceberg-sinking-kafka-topics-into-iceberg-tables-e23edec2777b&#34;&gt;using the Kafka Connect Iceberg sink&lt;/a&gt; with Nessie and MinIO.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The columnar format &lt;a href=&#34;https://github.com/vortex-data/vortex&#34;&gt;Vortex&lt;/a&gt; has been &lt;a href=&#34;https://www.linuxfoundation.org/press/lf-ai-data-foundation-hosts-vortex-project-to-power-high-performance-data-access-for-ai-and-analytics&#34;&gt;donated&lt;/a&gt; to the Linux Foundation. Earlier this year there was a &lt;a href=&#34;https://spiraldb.com/post/vortex-on-ice&#34;&gt;PoC to show how it can speed up Iceberg queries&lt;/a&gt;, with an &lt;a href=&#34;https://www.youtube.com/watch?v=p6ZKY8JViCA&#34;&gt;interesting talk&lt;/a&gt; at Iceberg Summit on the same.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;a href=&#34;https://www.alibabacloud.com/blog/apache-paimon-real-time-lake-storage-with-iceberg-compatibility-2025_602485&#34;&gt;comprehensive introduction&lt;/a&gt; summarised from &lt;a href=&#34;https://www.youtube.com/watch?v=LEdz53_diW4&amp;amp;list=PLDX4T_cnKjD2qa7EwyxHb9H8pBACbGkkE&amp;amp;index=4&#34;&gt;a talk&lt;/a&gt; at this year’s Flink Forward Asia conference about &amp;#34;the other&amp;#34; open table format that people often forget—Apache Paimon. TIL it supports integration with Iceberg.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_stream_processing&#34;&gt;Stream Processing&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://flink.apache.org/2025/07/31/apache-flink-2.1.0-ushers-in-a-new-era-of-unified-real-time-data—​ai-with-comprehensive-upgrades/&#34;&gt;Apache Flink 2.1.0&lt;/a&gt; has been released&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ming Hung Tsai wrote a &lt;a href=&#34;https://itnext.io/scaling-to-1-million-ticket-reservations-part-1-dataflow-architecture-c6d0c792244a&#34;&gt;three&lt;/a&gt; &lt;a href=&#34;https://itnext.io/scaling-to-1-million-ticket-reservations-part-2-data-driven-optimizations-228c6a52e00a&#34;&gt;part&lt;/a&gt; &lt;a href=&#34;https://itnext.io/scaling-to-1-million-ticket-reservations-part-3-infra-observability-load-test-6bb55b850c72&#34;&gt;series&lt;/a&gt; showing how you could use Kafka Streams to implement a ticket reservation system (&lt;em&gt;also discussed in the Reddit thread linked above&lt;/em&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 Sometimes the old ones are the best—and this article from Tyler Akidau nine years ago is still just as important to read today if you’re thinking about stream processing: &lt;a href=&#34;https://www.oreilly.com/radar/the-world-beyond-batch-streaming-102/&#34;&gt;Streaming 102: The world beyond batch—The what, where, when, and how of unbounded data processing&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LinkedIn’s Jiangjie Qin, a PMC member for both Apache Flink and Apache Kafka, spoke at QCon SF about &lt;a href=&#34;https://www.infoq.com/presentations/stream-finch/&#34;&gt;Stream and Batch Processing Convergence in Flink&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Should you use a hammer to tighten a screw? Should you try and express &lt;em&gt;all&lt;/em&gt; your stream processing needs in SQL? &lt;a href=&#34;https://nussknacker.io/blog/why-streaming-sql-is-not-the-right-tool-for-authoring-event-driven-stream-based-algorithms/&#34;&gt;also no&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lists.apache.org/thread/x02d8klqxqst3nwzmg2g4vh17zpg53sz&#34;&gt;FLIP-541&lt;/a&gt; is a proposal to make PyFlink more Pythonic, and looks to have wide support in the community.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Databricks &lt;a href=&#34;https://www.databricks.com/blog/introducing-real-time-mode-apache-sparktm-structured-streaming&#34;&gt;announced&lt;/a&gt; the public preview of a real-time mode for Spark Structured Streaming. It will be donated to the Apache Spark project but is currently only available on Databricks.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_rdbms_cdc&#34;&gt;RDBMS + CDC&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Debezium &lt;a href=&#34;https://debezium.io/blog/2025/08/13/debezium-3-2-1-final-released/&#34;&gt;3.2.1.Final&lt;/a&gt; and &lt;a href=&#34;https://debezium.io/blog/2025/08/05/debezium-3-3-alpha1-released/&#34;&gt;3.3.0.Alpha1&lt;/a&gt; have been released&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Yingjun Wu has written a &lt;a href=&#34;https://freedium.cfd/https://medium.com/@yingjunwu/why-we-didnt-rewrite-debezium-in-rust-66c35ae9dce8&#34;&gt;good explanation&lt;/a&gt; about why RisingWave use the embedded &lt;a href=&#34;https://debezium.io/documentation//reference/stable/development/engine.html&#34;&gt;Debezium Engine&lt;/a&gt; in their product—and why they didn’t rewrite it in Rust to match the rest of their product code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A practical guide from Nick Tobey on &lt;a href=&#34;https://www.dolthub.com/blog/2024-06-25-polymorphic-associations/&#34;&gt;choosing a database schema for polymorphic data&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 Richard van der Hoff writes about something to strike fear into any DBA’s heart: corruption in the database. In this case, a &lt;a href=&#34;https://matrix.org/blog/2025/07/postgres-corruption-postmortem/&#34;&gt;corrupted Postgres index&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More Postgres goodness, this time from Gunnar Morling: &lt;a href=&#34;https://www.morling.dev/blog/postgres-replication-slots-confirmed-flush-lsn-vs-restart-lsn/&#34;&gt;Postgres Replication Slots: Confirmed Flush LSN vs. Restart LSN&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_general_data_stuff&#34;&gt;General Data Stuff&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;🔥🔥 Hot off the press is another banger from Jack Vanlightly, this time looking at &lt;a href=&#34;https://jack-vanlightly.com/blog/2025/8/21/a-conceptual-model-for-storage-unification&#34;&gt;A Conceptual Model for Storage Unification&lt;/a&gt;. If you’re interested in things like writing Kafka data to Iceberg, this is a vital foundation for understanding the design considerations and trade-offs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How Klaviyo use Ray for their &lt;a href=&#34;https://freedium.cfd/https://klaviyo.tech/ray-data-train-tune-at-klaviyo-bca9f14abf21&#34;&gt;scalable data processing, training, and optimization&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Prompted by &lt;a href=&#34;https://www.youtube.com/watch?v=z5t3b3EAc84&amp;amp;t=360s&#34;&gt;a talk that Tesla gave&lt;/a&gt; about ingesting metrics into ClickHouse, Javier Santana at TinyBird &lt;a href=&#34;https://www.tinybird.co/blog-posts/1b-rows-per-second-clickhouse&#34;&gt;set out to reproduce the feat using a 50-node ClickHouse cluster&lt;/a&gt;. In a sense these exercises are somewhat BSD and clickbait-y, but I do like the clear steps and detail that he showed in the blog post :).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 If anyone is going to need to build their own time-series database (TSDB), Datadog is going to be one of the top contenders. In &lt;a href=&#34;https://www.datadoghq.com/blog/engineering/rust-timeseries-engine/&#34;&gt;this blog post&lt;/a&gt; they write about how they built it using Rust and the benefits they saw (60x ingest, 5x query). Also interesting is &lt;a href=&#34;https://www.datadoghq.com/blog/engineering/rust-timeseries-engine/#how-we-built-the-6th-generation-of-our-real-time-metrics-storage&#34;&gt;the history&lt;/a&gt; of their previous TSDB platforms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/cwida/FastLanes&#34;&gt;FastLanes&lt;/a&gt; describes itself as a &lt;em&gt;Next-Gen Big Data File Format&lt;/em&gt;, aimed as a replacement to columnar formats such as the somewhat-ubiquitous Parquet. Beyond several &lt;a href=&#34;https://github.com/cwida/FastLanes?tab=readme-ov-file#publications&#34;&gt;conference papers&lt;/a&gt; it’s unclear if there’s any adoption of the format in the wild yet.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_and_finally&#34;&gt;And finally…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Nothing to do with data, but stuff that I’ve found interesting or has made me smile.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;🔥 Brad Stulberg’s article &lt;a href=&#34;https://freedium.cfd/https://bstulberg.medium.com/motivation-is-overrated-heres-what-works-instead-7c5744efd82f&#34;&gt;Motivation is Overrated: Here’s What Works Instead&lt;/a&gt; is down to earth and well worth a read.&lt;/p&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;you cannot replace negative thinking with positive thinking. But you can replace negative thinking with positive action.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I’m not going to even pretend to understand the first thing in these organic simulation algorithms, but gosh, &lt;a href=&#34;https://bleuje.com/physarum-explanation/&#34;&gt;don’t they make pretty pictures&lt;/a&gt;!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.al3rez.com/todo-txt-journey&#34;&gt;I Tried Every Todo App and Ended Up With a &lt;code&gt;.txt&lt;/code&gt; File&lt;/a&gt; — This one hit a bit close to home…&lt;/p&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’d devour blog posts about getting things done or spot a cool app and think “this is it, this will finally organize me.” I’d burn hours building the perfect system, creating categories, tags, projects, labels. Setting it up felt like work.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A healthy dose of nostalgia from &lt;a href=&#34;https://blog.decryption.net.au/posts/macpaint.html&#34;&gt;MacPaint Art From The Mid-80s Still Looks Great Today&lt;/a&gt; (&lt;em&gt;although cards on the table, I was on the BBC Micro/Acorn Archimedes side of things&lt;/em&gt; 😅)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It may seem odd to compile a list of &amp;#34;Why I want to leave&amp;#34; the day that you start a new job, but &lt;a href=&#34;https://blog.incrementalforgetting.tech/p/the-why-i-want-to-leave-list&#34;&gt;this article makes a compelling case&lt;/a&gt; for starting, and maintaining, such a list.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you like these kind of links you might like to read about &lt;a href=&#34;https://rmoff.net/2024/05/22/how-i-try-to-keep-up-with-the-data-tech-world-a-list-of-data-blogs/&#34;&gt;How I Try To Keep Up With The Data Tech World (A List of Data Blogs)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I’m linking out to &lt;a href=&#34;https://freedium.cfd/&#34;&gt;Freedium&lt;/a&gt; versions of Medium posts, because Medium seems to be pay-walling a bunch of otherwise-freely accessible content.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Kafka to Iceberg - Exploring the Options</title>
      <link>https://rmoff.net/2025/08/18/kafka-to-iceberg-exploring-the-options/</link>
      <pubDate>2025-08-18</pubDate>
      
      <guid>https://rmoff.net/2025/08/18/kafka-to-iceberg-exploring-the-options/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/08/t_IMG_1923.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You’ve got data in &lt;a href=&#34;https://www.youtube.com/watch?v=9CrlA0Wasvk&#34;&gt;Apache Kafka&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You want to get that data into &lt;a href=&#34;https://www.youtube.com/watch?v=TsmhRZElPvM&#34;&gt;Apache Iceberg&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What’s the best way to do it?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/08/kafka-to-iceberg.png&#34; alt=&#34;kafka to iceberg&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Perhaps invariably, the answer is: &lt;strong&gt;IT DEPENDS&lt;/strong&gt;.
But fear not: here is a guide to help you navigate your way to choosing the best solution &lt;em&gt;for you&lt;/em&gt; 🫵.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_candidates&#34;&gt;The Candidates&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’m considering three technologies in this blog post:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://nightlies.apache.org/flink/flink-docs-master/docs/dev/table/sql/gettingstarted/#hello-world&#34;&gt;Apache Flink SQL&lt;/a&gt; (open source)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kafka.apache.org/documentation.html#connect&#34;&gt;Kafka Connect&lt;/a&gt; (open source)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.confluent.io/product/tableflow/&#34;&gt;Confluent Tableflow&lt;/a&gt; ($)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are others, and I’ll mention those &lt;a href=&#34;#_but_what_about_this_other_tool&#34;&gt;at the end&lt;/a&gt;.
The one that I’ve really not looked at, and is perhaps conspicuous by its absence, is Apache Spark.
If you’re interested in Spark, check out &lt;a href=&#34;https://www.youtube.com/watch?v=5pXfznKniGg&#34;&gt;this video from Danica Fine&lt;/a&gt; in which she covers it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;em&gt;Disclaimer: I work for Confluent, but will do my best to remain impartial in this article.&lt;/em&gt; 😀
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_the_approach&#34;&gt;The Approach&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ve framed this blog post around the key areas that you can use as the basis for making your decision.
Some of these will be show-stoppers and rule a particular option out, whilst others are simply gentle nudges that one tool might be preferred over another.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’m going to break the areas of consideration down into two (and a bit) areas:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Your data&lt;/strong&gt;: including where it’s from, what you’re doing with it, how it’s structured, and how many topics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Living with it&lt;/strong&gt;: important factors such as what’s your existing deployment (if any), preference for self-managed vs SaaS, and table maintenance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Other&lt;/strong&gt;: licensing, support for other formats, other bits and pieces&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_tool_overview&#34;&gt;Tool overview&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Before we get into it, let’s take a quick look at what the three tools are and how they integrate with Iceberg.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_apache_flink_sql&#34;&gt;Apache Flink SQL&lt;/h3&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Read more: &lt;a href=&#34;https://rmoff.net/2025/06/24/writing-to-apache-iceberg-on-s3-using-flink-sql-with-glue-catalog/&#34;&gt;Writing to Apache Iceberg using Flink SQL&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Flink SQL jobs run on a Flink cluster.
They do not require Kafka (unless you are specifically reading or writing to it—such as in this article).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Source and targets are defined as tables using DDL, with the integration (such as Kafka or Iceberg) specified as a connector type.
Target tables are loaded as a stream using either &lt;code&gt;CREATE TABLE … AS SELECT&lt;/code&gt; or a standalone &lt;code&gt;INSERT INTO&lt;/code&gt; after defining the target table first.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are some &lt;a href=&#34;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/table/overview/#supported-connectors&#34;&gt;connectors available within Flink&lt;/a&gt;, along with notable standalone connectors including &lt;a href=&#34;https://nightlies.apache.org/flink/flink-cdc-docs-master/docs/connectors/flink-sources/overview/&#34;&gt;Flink CDC&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_kafka_connect&#34;&gt;Kafka Connect&lt;/h3&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Read more: &lt;a href=&#34;https://rmoff.net/2025/07/04/writing-to-apache-iceberg-on-s3-using-kafka-connect-with-glue-catalog/&#34;&gt;Writing to Apache Iceberg using Kafka Connect&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Kafka Connect runs on a Kafka Connect worker cluster.
It is a pluggable ecosystem, providing an integration runtime that handles common tasks whilst individual connectors handle the technology-specific requirements.
It uses a Kafka broker to track configuration and processing status.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You define &lt;em&gt;connector&lt;/em&gt; jobs using JSON configuration, submitted using a REST API.
There are &lt;a href=&#34;https://hub.confluent.io&#34;&gt;hundreds of connectors&lt;/a&gt; available for Kafka Connect.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_tableflow&#34;&gt;Tableflow&lt;/h3&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
Read more: &lt;a href=&#34;https://www.confluent.io/blog/building-streaming-data-pipelines-part-1/#exposing-apache-kafka-topics-as-apache-icebergtm%EF%B8%8F-tables-with-tableflow&#34;&gt;Exposing Kafka Topics as Iceberg Tables With Tableflow&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Tableflow is a managed service as part of Confluent Cloud for streaming data from Apache Kafka topics into Apache Iceberg tables.
You can use it with any topic in Confluent Cloud that has a schema.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Confluent Cloud also provides &lt;a href=&#34;https://docs.confluent.io/cloud/current/connectors/overview.html&#34;&gt;managed connectors&lt;/a&gt; (giving you access to a &lt;a href=&#34;https://hub.confluent.io&#34;&gt;huge ecosystem of source connectors&lt;/a&gt;) and &lt;a href=&#34;https://docs.confluent.io/cloud/current/flink/overview.html&#34;&gt;managed Flink SQL&lt;/a&gt; (for doing any processing on the data before sending it to Iceberg).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_your_data&#34;&gt;Your Data&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Let’s start off the comparison by thinking about the data that we’ve got in Kafka and want to get into Iceberg.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_where_is_the_data_coming_from&#34;&gt;Where is the data coming from?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This article is focussed on data &lt;strong&gt;in&lt;/strong&gt; Kafka, but that data came from somewhere.
Perhaps it’s applications writing directly to it, in which case it has no bearing on your technology of choice.
However, if your data is coming into Kafka from other systems, you’ll find that &lt;strong&gt;Kafka Connect&lt;/strong&gt; and Confluent Cloud (for &lt;strong&gt;Tableflow&lt;/strong&gt;) have a richer set of connectors than &lt;strong&gt;Flink&lt;/strong&gt;.
Flink does have several, including Flink CDC (which is built on Debezium).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Under this consideration also think about whether you want the data in Kafka for other purposes.
Flink can take data directly from a source (e.g. RDBMS) directly into Iceberg and not write it in Kafka.
This might simplify your pipeline, but it also means the same source data isn’t then available for use by other integrations or applications.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_how_many_topics_do_you_have&#34;&gt;How many topics do you have?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are two variants of this.
The first is where you have multiple topics for &lt;em&gt;different entities&lt;/em&gt;.
For example, you’ve got &lt;code&gt;orders&lt;/code&gt;, &lt;code&gt;customers&lt;/code&gt;, &lt;code&gt;products&lt;/code&gt;, &lt;code&gt;inventory&lt;/code&gt;…they’re all different, and they’re all going to their own respective Iceberg table.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/08/different-topics.excalidraw.png&#34; alt=&#34;different topics.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The second is where it’s multiple instances of &lt;em&gt;the same entity&lt;/em&gt;.
This is very common in multi-tenant architectures.
Maybe each customer has their own &lt;code&gt;transactions&lt;/code&gt; topic, and you’re wanting to populate a single consolidated Iceberg table from them.
Another example of this would be where topics are geographically isolated (perhaps across Kafka different clusters, and then replicated into a central one), from where they’re all to be written to a single Iceberg table.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/08/same-topics.excalidraw.png&#34; alt=&#34;same topics.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, if either of these scenarios apply to your data, how does it impact your tool choice?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In &lt;strong&gt;Flink SQL&lt;/strong&gt; every unique source schema must be explicitly defined.
There’s no automagic population from a schema registry.
This means that if you have four different topics you need to declare ten Flink SQL tables.
Bear in mind with Flink SQL it’s not only the table name but its schema too that needs specifying.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orderID&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customerID&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;product&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;quantity&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orderTS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;kafka&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;orders&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]);&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customerID&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;firstName&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;lastName&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;email&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;createdTS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;kafka&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;customers&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]);&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;products&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;productID&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;sku&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;unitPrice&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DECIMAL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;updatedTS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;kafka&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;products&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]);&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;inventory&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;productID&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;locationID&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;onHand&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;reserved&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;invTS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;kafka&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;inventory&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now if you want to write these to Iceberg tables, you need to declare an Iceberg table for each:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dest&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;iceberg&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;])&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dest&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;iceberg&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;])&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dest&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;products&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;iceberg&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;])&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;products&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dest&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;inventory&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;iceberg&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;])&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;inventory&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;However, if you’ve got multiple topics &lt;em&gt;with the same schema&lt;/em&gt; then things are a bit easier since &lt;a href=&#34;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/table/kafka/#connector-options&#34;&gt;the Kafka connector in Flink SQL&lt;/a&gt; does support wildcards (&lt;code&gt;topic-pattern&lt;/code&gt;) or a list of topics (&lt;code&gt;topic&lt;/code&gt; with semi-colon separated topics).
You can also add &lt;code&gt;topic&lt;/code&gt; as a &lt;em&gt;metadata&lt;/em&gt; column to your source table so that it is exposed for writing to Iceberg—important if you want to retain the lineage information of your data.
Here’s an example of fan-in (N:1) in Flink SQL.
First, create the source table reading from multiple topics:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;kafka_transactions_all&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;transaction_id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;user_id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;amount&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DECIMAL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;currency&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;merchant&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;transaction_time&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src_topic&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;METADATA&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;kafka&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.bootstrap.servers&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;broker:9092&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;format&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;scan.startup.mode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;earliest-offset&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;topic-pattern&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;transactions&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;.*&amp;#39;&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Topic metadata column included in the table definition&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Wildcard pattern for source Kafka topics&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now let’s write that to a single Iceberg table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_iceberg_catalog&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_glue_db&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;transactions_all&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;kafka_transactions_all&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can also do fan-in (N:1) in Flink SQL using the &lt;code&gt;UNION ALL&lt;/code&gt; operator.
For example, if the above Kafka topics were defined as individual Flink SQL tables (perhaps with slightly different schemas that need unifying), you could do something like this to write them all to a single Iceberg table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_iceberg_catalog&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_glue_db&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;transactions_all&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt;  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;uk&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src_topic&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;transaction_id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;amount&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;currency&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;merchant&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;transaction_time&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;kafka_transactions_uk&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;UNION&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;ALL&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt;  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;eu&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src_topic&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;transaction_id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;amount&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;currency&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;merchant&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;transaction_time&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;kafka_transactions_eu&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Further more to Flink SQL’s flexibility is the &lt;a href=&#34;https://nightlies.apache.org/flink/flink-docs-master/docs/dev/table/sql/insert/#insert-into-multiple-tables&#34;&gt;&lt;em&gt;statement sets&lt;/em&gt;&lt;/a&gt; feature, which you can use for fan-out (1:N)—routing data from the same source table to different target tables.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Moving onto &lt;strong&gt;Kafka Connect&lt;/strong&gt;, it supports wildcards and can do &lt;a href=&#34;https://rmoff.net/2025/07/04/writing-to-apache-iceberg-on-s3-using-kafka-connect-with-glue-catalog/#_n1_fan_in_writing_many_topics_to_one_table&#34;&gt;fan-in (N:1)&lt;/a&gt; using the &lt;code&gt;topics.regex&lt;/code&gt; parameter:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;topics.regex&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;src.*&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It can also do fan-out (1:N) using the &lt;code&gt;iceberg.tables.route-field&lt;/code&gt; parameter for the Iceberg sink connector, described &lt;a href=&#34;https://rmoff.net/2025/07/04/writing-to-apache-iceberg-on-s3-using-kafka-connect-with-glue-catalog/#_1n_fan_out_writing_one_topic_to_many_tables&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Tableflow&lt;/strong&gt; has a 1:1 relationship between Kafka topics and Iceberg tables.
It can be enabled for multiple topics easily either through the UI, or from the CLI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;# Write topics `my_topic[1-5]` to an Iceberg table&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent tableflow topic create my_topic1
&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent tableflow topic create my_topic2
&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent tableflow topic create my_topic3
&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent tableflow topic create my_topic4
&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent tableflow topic create my_topic5&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can achieve fan-in either by using Kafka Connect on Confluent Cloud to ingest to a single topic from multiple sources&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/08/kc-tf-flink-fan-in.excalidraw.png&#34; alt=&#34;kc tf flink fan in.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;or using Confluent Cloud for Apache Flink to &lt;code&gt;UNION&lt;/code&gt; multiple topics into one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/08/tf-flink-fan-in.excalidraw.png&#34; alt=&#34;tf flink fan in.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Similarly, fan-out can be done using Flink to route the source topics into multiple destination ones, each of which is then enabled for Tableflow.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/08/tf-flink-fan-out.excalidraw.png&#34; alt=&#34;tf flink fan out.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_whither_schema&#34;&gt;Whither Schema?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Sure, your data has a schema.
But does it have a &lt;em&gt;schema&lt;/em&gt;?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If your data is just a lump of JSON like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;click_ts&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;2023-02-01T14:30:25Z&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ad_cost&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1.50&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;is_conversion&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;001234567890&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What should the target Iceberg table look like?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One option is that you manually created it first.
Doing this you can at least make sure that the data types are set correctly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you’re &lt;a href=&#34;https://rmoff.net/2025/06/24/writing-to-apache-iceberg-on-s3-using-flink-sql-with-glue-catalog/#_define_the_kafka_source&#34;&gt;using &lt;strong&gt;Flink SQL&lt;/strong&gt; to write to Iceberg&lt;/a&gt; you have to declare the datatypes as part of the source Flink table DDL.
For &lt;strong&gt;every. single. table&lt;/strong&gt;.
But at least they’ll be correct (so long as you didn’t make a mistake in typing out all that DDL!).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/07/04/writing-to-apache-iceberg-on-s3-using-kafka-connect-with-glue-catalog/#_schemas&#34;&gt;&lt;strong&gt;Kafka Connect&lt;/strong&gt;&lt;/a&gt; will give you the option to play fast-and-loose with your schema if you want, and YOLO it by guessing.
It might work, but you might also get this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;+----------------+----------+
|      Name      |  Type    |
+----------------+----------+
|  click_ts      |  string  | &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
|  ad_cost       |  string  | &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
|  user_id       |  string  |
|  is_conversion |  string  | &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
+----------------+----------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Storing a boolean as a string? not ideal.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Storing a currency as a string? not good.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Storing a timestamp as a string? gross.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A better way all round to do this if you’re using &lt;strong&gt;Kafka Connect&lt;/strong&gt; or &lt;strong&gt;Tableflow&lt;/strong&gt; is to have your topics&amp;#39; schemas in the &lt;a href=&#34;https://docs.confluent.io/platform/current/schema-registry/index.html&#34;&gt;Schema Registry&lt;/a&gt;.
This way the target Iceberg table can be defined correctly based on the actual schema of the data—not a guess at it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;+----------------+-----------------+
|      Name      |  Type           |
+----------------+-----------------+
|  click_ts      |  timestamp      |
|  ad_cost       |  decimal(38,2)  |
|  user_id       |  string         |
|  is_conversion |  boolean        |
+----------------+-----------------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_schema_evolution&#34;&gt;Schema Evolution&lt;/h3&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Nothing is stable, even what is close to us in time&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Another consideration to bear in mind is what happens when your schema changes.
And at some point, your schema &lt;strong&gt;will&lt;/strong&gt; change.
So how do you make sure that the target Iceberg reflects those changes?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In &lt;strong&gt;Flink SQL&lt;/strong&gt; there is no way to do this without duplicating records.
You’d need to make sure that you’re using &lt;code&gt;scan.startup.mode=group-offsets&lt;/code&gt; and have set &lt;code&gt;properties.group.id&lt;/code&gt; in your original DDL, then cancel the job, amend the table DDL to reflect the new schema, and then restart the job (with an &lt;code&gt;INSERT INTO&lt;/code&gt; if you were using a &lt;code&gt;CREATE TABLE…AS SELECT&lt;/code&gt; originally).
Even then, you’re going to duplicate the records that were written before Flink checkpointed and saved the Kafka topic offset that it had got to.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;Kafka Connect&lt;/strong&gt; Iceberg sink supports &lt;a href=&#34;https://rmoff.net/2025/07/04/writing-to-apache-iceberg-on-s3-using-kafka-connect-with-glue-catalog/#_schema_evolution&#34;&gt;schema evolution&lt;/a&gt;, just make sure you’ve set &lt;code&gt;iceberg.tables.evolve-schema-enabled=true&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.confluent.io/cloud/current/topics/tableflow/overview.html#schematization-and-schema-evolution&#34;&gt;&lt;strong&gt;Tableflow&lt;/strong&gt; supports schema evolution&lt;/a&gt; out of the box.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_do_you_want_some_processing_to_go_with_that&#34;&gt;Do you want some processing to go with that?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Perhaps you’re just wanting a big &amp;#39;ole dumb pipe through which to dump your data into Iceberg.
Perhaps, however, you’ve decided that it would be useful to mask a few columns or filter some rows.
Maybe, even, you’ve decided to &lt;a href=&#34;https://www.youtube.com/watch?v=FiZmyl1Npg0&#34;&gt;shift left&lt;/a&gt; and move a bunch of your batch workload out of the datalake and closer to the point at which the data’s created (per &lt;a href=&#34;https://ssbipolar.com/2021/05/31/roches-maxim/&#34;&gt;Roche’s maxim&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This can contribute a significant amount of weighting to your tool choice.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An added dimension to consider is &lt;em&gt;what kind of processing&lt;/em&gt; you’re doing (or plausibly would want to do in the future without needing to change your architecture).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Stateless&lt;/em&gt; means literally what it says; there is no state.
If you can process each record as it arrives without needing to build up state (like a counter, for example, or a lookup table), it’s stateless.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Stateful&lt;/em&gt;, on the other hand, is where you &lt;em&gt;do&lt;/em&gt; use state.
Common examples would be an aggregation (&lt;code&gt;COUNT&lt;/code&gt;, &lt;code&gt;SUM&lt;/code&gt;, etc), a join to enrich the data, and so on.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If integration is Kafka Connect’s &lt;em&gt;raison d’être&lt;/em&gt;, processing is Flink’s.
It’s where &lt;strong&gt;Flink SQL&lt;/strong&gt; really comes into its own, particularly for state&lt;em&gt;ful&lt;/em&gt; transformations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you can express it in SQL, you can probably do it in Flink.
Joining to other data (whether in Kafka, or other systems), time-based aggregations (orders per hour, for example), sessionising and pattern matching—all of this is Flink’s bread and butter.
Flink SQL can also do stateless processing (filtering, schema projection, etc) too, and compared to Kafka Connect’s Single Message Transforms (see below) definitely easier to configure (it’s just SQL) and also richer in functionality.
You’ll sometimes find with Single Message Transforms that there’s a particular transformation that you need and it just doesn’t exist yet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Kafka Connect&lt;/strong&gt; can do &lt;em&gt;stateless&lt;/em&gt; processing using Single Message Transforms.
These are configured through bits of JSON configuration, and whilst not the most intuitive way to express a transformation, they are remarkably powerful.
For example, to drop named fields from the source table so that they aren’t included in the Iceberg table schema, you’d add this to your connector configuration:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;connector.class&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;org.apache.iceberg.connect.IcebergSinkConnector&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;                 &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;dropCC&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms.dropCC.type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;org.apache.kafka.connect.transforms.ReplaceField$Value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms.dropCC.exclude&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;col1, col4&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are lots of other transformations available, many part of Apache Kafka itself, others provided by the community.
I wrote a blog series about these previously: &lt;a href=&#34;https://rmoff.net/categories/twelvedaysofsmt/&#34;&gt;Twelve Days of SMT&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Tableflow&lt;/strong&gt; is part of Confluent Cloud which means you already have access to Confluent Cloud for Apache Flink for your processing—the best of both worlds!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/08/tf-flink.excalidraw.png&#34; alt=&#34;tf flink.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If your Kafka data is coming from Kafka Connect upstream using a managed connector in Confluent Cloud you can also use Single Message Transforms at ingest.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_insert_overwrite_and_upsert&#34;&gt;&lt;code&gt;INSERT OVERWRITE&lt;/code&gt; and &lt;code&gt;UPSERT&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just as schemas may change, so may the data itself.
This could be an aggregate (such as a &lt;code&gt;COUNT&lt;/code&gt;) for which more records have been received and so needs updating, or late-arriving data or data that’s been restated and needs to replace what’s there.
For whatever reason, you’ll need to plan how you’re going to handle this in your Iceberg table.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One option is using &lt;code&gt;UPSERT&lt;/code&gt; or &lt;code&gt;INSERT OVERWRITE&lt;/code&gt; semantics:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;UPSERT&lt;/code&gt; is a portmanteau of the operation that it describes: attempt to &lt;strong&gt;&lt;code&gt;UP&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;DATE&lt;/code&gt; a key’s value, and if the key doesn’t exist then &lt;code&gt;IN&lt;/code&gt;&lt;strong&gt;&lt;code&gt;SERT&lt;/code&gt;&lt;/strong&gt; it instead.
This is a common pattern used in data engineering when loading data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;INSERT OVERWRITE&lt;/code&gt; takes a more extreme approach, and does what it says on the tin: insert values, and overwrite what’s there currently.
This would more likely be used for data housekeeping (e.g. replacing the contents of a day’s partition with a restatement of the data once late data has arrived), or dimension table repopulation (replace the entire contents of the table with the latest version of the dimension).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Flink SQL&lt;/strong&gt; supports both &lt;a href=&#34;https://rmoff.net/2025/06/24/writing-to-apache-iceberg-on-s3-using-flink-sql-with-glue-catalog/#_upsert&#34;&gt;&lt;code&gt;UPSERT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://rmoff.net/2025/06/24/writing-to-apache-iceberg-on-s3-using-flink-sql-with-glue-catalog/#_insert_overwrite&#34;&gt;&lt;code&gt;INSERT OVERWRITE&lt;/code&gt;&lt;/a&gt; (the latter in batch mode only, understandably).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Kafka Connect&lt;/strong&gt; does not support either of these operations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The current (v1.10) version of the Apache Iceberg connector for Kafka Connect does not support &lt;code&gt;UPSERT&lt;/code&gt;.
However, an earlier incarnation of the connector—authored by Tabular, before being donated to the Apache Iceberg project—&lt;em&gt;did&lt;/em&gt; support it including for CDC-sourced data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This means that you may see mention of the functionality, including configuration options such as &lt;code&gt;iceberg.tables.iceberg.tables.upsert-mode-enabled&lt;/code&gt; and &lt;code&gt;iceberg.tables.cdc-field&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For more information and latest status, see &lt;a href=&#34;https://github.com/apache/iceberg/pull/12070&#34;&gt;the PR to add the functionality&lt;/a&gt;, &lt;a href=&#34;https://github.com/apache/iceberg/issues/10842&#34;&gt;the GitHub issue&lt;/a&gt;, and a &lt;a href=&#34;https://lists.apache.org/thread/96dhf3sj5pc4ql0l8yk8sxgtr78bchrd&#34;&gt;mailing list discussion&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Tableflow&lt;/strong&gt; will support &lt;code&gt;UPSERT&lt;/code&gt; soon.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_delivery_semantics&#34;&gt;Delivery Semantics&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Flink SQL&lt;/strong&gt; reading from Kafka and writing to Iceberg will have exactly-once semantics so long as you enable checkpointing:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;execution.checkpointing.interval&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;30s&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://iceberg.apache.org/docs/nightly/kafka-connect/#requirements&#34;&gt;&lt;strong&gt;Kafka Connect&lt;/strong&gt;&lt;/a&gt; and &lt;strong&gt;Tableflow&lt;/strong&gt; both have out-of-the-box support for exactly-once semantics for writing to Iceberg.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_living_with_it&#34;&gt;Living with it&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So far I’ve looked at the areas to think about with regards to the data that you’re sending to Iceberg.
That’s only part of the puzzle though.
It might be a fun science experiment to put together random technologies based on their feature-support alone, but in the real world we have to live with the design choices we make too.
Let’s look at some more factors to include in our weighing up of options.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_existing_ecosystem&#34;&gt;Existing Ecosystem&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you already run &lt;strong&gt;Apache Flink&lt;/strong&gt; or &lt;strong&gt;Kafka Connect&lt;/strong&gt; (or are already a &lt;strong&gt;Confluent Cloud&lt;/strong&gt; user) then that should be your assumed default.
From that default position you can then weigh in the other factors described in this article and decide if any warrant deploying new technology.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_iceberg_housekeeping&#34;&gt;Iceberg Housekeeping&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Iceberg does some things—but not all.
One of the things that it doesn’t do out of the box is its own housekeeping.
Particularly with streaming ingest into Iceberg, you can very quickly end up with lots of small data and metadata files, which will become a problem over time for performance.
I wrote more about this &lt;a href=&#34;https://rmoff.net/2025/07/14/keeping-your-data-lakehouse-in-order-table-maintenance-in-apache-iceberg/#_combining_data_files_into_fewer_data_files&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you’re using &lt;strong&gt;Apache Flink&lt;/strong&gt; or &lt;strong&gt;Kafka Connect&lt;/strong&gt; to get your data into Iceberg, you’ll need to do the housekeeping yourself.
This could be a custom job using something like Trino or Apache Spark, or a tool such as &lt;a href=&#34;https://amoro.apache.org/quick-start/#check-self-optimizing&#34;&gt;Apache Amoro&lt;/a&gt; or &lt;a href=&#34;https://github.com/nimtable/nimtable&#34;&gt;Nimtable&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Tableflow&lt;/strong&gt; includes &lt;a href=&#34;https://docs.confluent.io/cloud/current/topics/tableflow/overview.html#table-maintenance-and-optimizations&#34;&gt;built-in table maintenance&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_ease_of_use&#34;&gt;Ease of Use&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There’s a reason I gave a conference talk called &lt;a href=&#34;https://talks.rmoff.net/9GpIYA/the-joy-of-jars-and-other-flink-sql-troubleshooting-tales&#34;&gt;&lt;em&gt;The Joy of JARs&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/08/my-god-it-is-full-of-java.webp&#34; alt=&#34;My God&#34; width=&#34;It&amp;#39;s full of Java&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Flink SQL&lt;/strong&gt; is SQL on the surface, but &lt;a href=&#34;https://rmoff.net/2025/06/24/writing-to-apache-iceberg-on-s3-using-flink-sql-with-glue-catalog/#_random_jiggling_hadoop_jars&#34;&gt;a morass of Java underneath&lt;/a&gt;, which matters for users and operators alike.
If you’re already using Flink SQL then you’ll know what I’m talking about.
If you’re not and you’re looking for a warm fuzzy SQL-embrace, forget it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Kafka Connect&lt;/strong&gt; is built on Java too, but generally isolates the user from it.
You can use &lt;a href=&#34;https://hub.confluent.io&#34;&gt;Confluent Hub&lt;/a&gt; to install the Iceberg connector (or build it yourself, if that’s what you like doing).
Configuration isn’t &lt;em&gt;pretty&lt;/em&gt;, but it is &amp;#34;just&amp;#34; JSON.
Use &lt;a href=&#34;https://github.com/kcctl/kcctl&#34;&gt;kcctl&lt;/a&gt; to make your life easier.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Tableflow&lt;/strong&gt; is ridiculously simple to use.
Click &amp;#34;Enable Tableflow&amp;#34;, and that’s it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/08/tableflow.webp&#34; alt=&#34;tableflow&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can use the Confluent CLI instead if you’d rather:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent tableflow topic create my_topic1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_self_managed_vs_fully_managed&#34;&gt;Self-Managed vs Fully-Managed&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Tableflow&lt;/strong&gt; is available on Confluent Cloud, which is a fully-managed option and includes Kafka brokers and Flink SQL (plus Kafka Connect if you want it for ingest).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to self-manage then both &lt;strong&gt;Flink SQL&lt;/strong&gt; and &lt;strong&gt;Kafka Connect&lt;/strong&gt; (plus the necessary Apache Kafka) can be hosted yourself either on-premises or on a cloud provider.
Plenty of people do this so you’ll not have a shortage of content online to help you set this up and keep it running.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_cost&#34;&gt;Cost&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Apache Flink&lt;/strong&gt;, Apache Kafka (of which &lt;strong&gt;Kafka Connect&lt;/strong&gt; is part), and the Apache Iceberg connector for Kafka Connect are all Apache 2.0 open source, owned by the Apache Software Foundation.
You’re free to run them and modify them as you want (and you’re also then reliant on the community for any support requirements).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Tableflow&lt;/strong&gt; is a proprietary component of Confluent Cloud and usage of it is &lt;a href=&#34;https://docs.confluent.io/cloud/current/topics/tableflow/concepts/tableflow-billing.html&#34;&gt;billed&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_i_used_to_be_indecisivenow_im_not_so_sure&#34;&gt;I used to be indecisive…now I’m not so sure…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Can’t decide between Apache Iceberg and &lt;a href=&#34;https://delta.io/&#34;&gt;Delta Lake&lt;/a&gt; as your open table format of choice?
Want to leave options open for the future, or other teams in your organisation?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Flink SQL&lt;/strong&gt; has a &lt;a href=&#34;https://github.com/delta-io/delta/tree/master/connectors/flink/&#34;&gt;Delta Lake connector&lt;/a&gt; (open source).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There is a &lt;a href=&#34;https://docs.confluent.io/kafka-connectors/databricks-delta-lake-sink/current/overview.html&#34;&gt;Delta Lake connector for &lt;strong&gt;Kafka Connect&lt;/strong&gt;&lt;/a&gt; but it is not open source and requires a paid Confluent subscription.
The &lt;a href=&#34;https://github.com/delta-io/kafka-delta-ingest&#34;&gt;&lt;code&gt;kafka-delta-ingest&lt;/code&gt;&lt;/a&gt; project is part of the Delta project and open source, but does not use the Kafka Connect framework.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Tableflow&lt;/strong&gt; &lt;a href=&#34;https://docs.confluent.io/cloud/current/topics/tableflow/overview.html#tableflow-and-delta-lake-tables&#34;&gt;has support&lt;/a&gt; for both Apache Iceberg and Delta Lake.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_but_what_about_this_other_tool&#34;&gt;bUt wHaT aBoUt tHiS oThEr tOoL?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The aim of this blog post is not to give a comprehensive listing of all the ways of getting data into Iceberg from Kafka, but to look in more detail at the most common options that I see in use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As well as Flink SQL, Kafka Connect, and Tableflow, other options include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://iceberg.apache.org/docs/nightly/spark-getting-started/&#34;&gt;Apache Spark&lt;/a&gt; (Danica Fine covers this in her video &lt;a href=&#34;https://www.youtube.com/watch?v=5pXfznKniGg&#34;&gt;here&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flink CDC added a &lt;a href=&#34;https://nightlies.apache.org/flink/flink-cdc-docs-master/docs/connectors/pipeline-connectors/iceberg/&#34;&gt;pipeline connector for Iceberg&lt;/a&gt; in the 3.5 release.
There’s no source connector for Kafka, but if your data is coming from &lt;a href=&#34;https://nightlies.apache.org/flink/flink-cdc-docs-master/docs/connectors/pipeline-connectors/postgres/&#34;&gt;Postgres&lt;/a&gt; or &lt;a href=&#34;https://nightlies.apache.org/flink/flink-cdc-docs-master/docs/connectors/pipeline-connectors/mysql/&#34;&gt;MySQL&lt;/a&gt; this might be an interesting option to look into.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&#34;https://memiiso.github.io/debezium-server-iceberg/&#34;&gt;Debezium Iceberg Consumer&lt;/a&gt; is a community project that integrates with Debezium Server as a sink to Iceberg.
Similar to Flink CDC Pipelines, you’d not use it for reading from Kafka but if you’ve got a Debezium-supported RDBMS as source and you’re not already running Kafka, this could be worth a look.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Aiven recently published &lt;a href=&#34;https://github.com/Aiven-Open/tiered-storage-for-apache-kafka/blob/main/iceberg_whitepaper.md#upcoming-work&#34;&gt;a whitepaper&lt;/a&gt; describing &lt;code&gt;Iceberg Topics for Apache Kafka&lt;/code&gt;.
It’s very early days and it has yet to be proven in production, and has significant gaps including lack of schema evolution.
It’ll be interesting to see how the project develops and the traction that it’ll get.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_tldr&#34;&gt;tl;dr&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Flink SQL&lt;/strong&gt; is fantastic if you want to process data before sending it to Iceberg, typically as part of an analytics pipeline.
If you just need a &amp;#34;dumb pipe&amp;#34; it’s less easy to justify.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kafka Connect&lt;/strong&gt; excels as a &amp;#34;dumb pipe&amp;#34;, and also has support for stateless transformations.
If you want to do stateful processing you’ll want to pair it with a stream processor (hey, such as Flink SQL!).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tableflow&lt;/strong&gt; is a fully-managed tool for getting data from Kafka into Iceberg.
It’s part of Confluent Cloud so you also have access to Flink SQL through Confluent Cloud for Apache Flink if you want to pre-process any of the data before sending it to Iceberg.
Tableflow includes table maintenance, which you’d have to do yourself if using Flink SQL or Kafka Connect to send the data to Iceberg.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_references&#34;&gt;References&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/07/14/keeping-your-data-lakehouse-in-order-table-maintenance-in-apache-iceberg/&#34;&gt;Keeping your Data Lakehouse in Order: Table Maintenance in Apache Iceberg&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/06/24/writing-to-apache-iceberg-on-s3-using-flink-sql-with-glue-catalog/&#34;&gt;Writing to Apache Iceberg on S3 using Flink SQL with Glue catalog&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/07/04/writing-to-apache-iceberg-on-s3-using-kafka-connect-with-glue-catalog/&#34;&gt;Writing to Apache Iceberg on S3 using Kafka Connect with Glue catalog&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🎥 &lt;a href=&#34;https://current.confluent.io/post-conference-videos-2025/tableflow-not-just-another-kafka-to-iceberg-connector-lnd25&#34;&gt;Tableflow: Not Just Another Kafka-to-Iceberg Connector!&lt;/a&gt; (Alex Sorokoumov)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;📑 &lt;a href=&#34;https://microsites.databricks.com/sites/default/files/dais/2025/D25B3065_v2-Adi_Polak_DAIS_2025_kafka2iceberg.pdf&#34;&gt;No More Fragile Pipelines: Kafka and Iceberg the Declarative Way - Adi Polak&lt;/a&gt; (&lt;a href=&#34;https://www.youtube.com/watch?v=zDVaYolMoJg&#34;&gt;🎥 Video&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🎥 &lt;a href=&#34;https://www.youtube.com/watch?v=5pXfznKniGg&#34;&gt;Iced Kaf-fee: Chilling Kafka Data into Iceberg Tables by Danica Fine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Connecting Apache Flink SQL to Confluent Cloud Kafka broker</title>
      <link>https://rmoff.net/2025/07/22/connecting-apache-flink-sql-to-confluent-cloud-kafka-broker/</link>
      <pubDate>2025-07-22</pubDate>
      
      <guid>https://rmoff.net/2025/07/22/connecting-apache-flink-sql-to-confluent-cloud-kafka-broker/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/07/t_IMG_1221.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is a quick blog post to remind me how to connect Apache Flink to a Kafka topic on Confluent Cloud.
You may wonder &lt;strong&gt;why&lt;/strong&gt; you’d want to do this, given that &lt;a href=&#34;https://www.confluent.io/en-gb/product/flink/&#34;&gt;&lt;strong&gt;Confluent Cloud for Apache Flink&lt;/strong&gt;&lt;/a&gt; is a much easier way to run Flink SQL.
But, for whatever reason, you’re here and you want to understand the necessary incantations to get this connectivity to work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are two versions of this connectivity - with, and without, using the Schema Registry for Avro.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_mvp_just_connect_to_a_kafka_topic_no_avro&#34;&gt;MVP: Just connect to a Kafka topic; no Avro.&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/af-cc.excalidraw.png&#34; alt=&#34;af cc.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_get_the_broker_endpoint_and_api_key&#34;&gt;Get the broker endpoint and API key&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First off, you need to get two things:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;The address of your Confluent Cloud broker&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An API key pair with authorisation to access the topic that you want to read/write&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’m going to use the &lt;a href=&#34;https://docs.confluent.io/confluent-cli/current/overview.html&#34;&gt;Confluent CLI&lt;/a&gt; to do this, but you can also use the web interface if you’d prefer (head to the Cluster Overview page).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Get a list of your Kafka clusters on Confluent Cloud:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent kafka cluster list
  Current |     ID     |   Name    |   Type    | Cloud |  Region   | Availability &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
&lt;span style=&#34;color: #f92672&#34;&gt;----------&lt;/span&gt;+------------+-----------+-----------+-------+-----------+--------------[…]
  &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;*&lt;/span&gt;       | lkc-qnygo6 | cluster00 | STANDARD  | aws   | us-west-2 | single-zone  &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
          | lkc-v2p3j0 | dev       | DEDICATED | aws   | us-west-2 | single-zone  &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then &lt;code&gt;describe&lt;/code&gt; the cluster on which your topic is, to get the &lt;strong&gt;Endpoint&lt;/strong&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent kafka cluster describe lkc-qnygo6
+----------------------+---------------------------------------------------------+
| Current              | &lt;span style=&#34;color: #f8f8f2&#34;&gt;true&lt;/span&gt;                                                    |
| ID                   | lkc-qnygo6                                              |
| Name                 | cluster00                                               |
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
| Endpoint             | SASL_SSL://pkc-rgm37.us-west-2.aws.confluent.cloud:9092 |&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we’ll create an API key for accessing this broker.
Specify the ID of the cluster (e.g. &lt;code&gt;lkc-qnygo6&lt;/code&gt;) as the resource to which the API key is to have access.
If you have one already then you can skip this step.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent api-key create &lt;span style=&#34;color: #f92672&#34;&gt;--resource&lt;/span&gt; lkc-qnygo6  &lt;span style=&#34;color: #f92672&#34;&gt;--description&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;Flink SQL (Kafka)&amp;#34;&lt;/span&gt;
It may take a couple of minutes &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;for &lt;/span&gt;the API key to be ready.
Save the API key and secret. The secret is not retrievable later.
+------------+------------------------------------------------------------------+
| API Key    | KAFKA_CLUSTER_API_KEY                                            |
| API Secret | KAFKA_CLUSTER_API_SECRET                                         |
+------------+------------------------------------------------------------------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this blog post I’m obviuosly not going to show my real API key details :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Wherever you see &lt;code&gt;KAFKA_CLUSTER_API_KEY&lt;/code&gt; (and the same for secrets, and Schema Registry) you can literally replace it with the actual value.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So in this line:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.sasl.jaas.config&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;org.apache.flink.kafka.shaded.org.apache.kafka.common.security.plain.PlainLoginModule required username=&amp;#34;KAFKA_CLUSTER_API_KEY&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If your API key value is &lt;code&gt;bmV2ZXJnb25uYWdpdmV5b3V1cA==&lt;/code&gt;, you’d put it in like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.sasl.jaas.config&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;org.apache.flink.kafka.shaded.org.apache.kafka.common.security.plain.PlainLoginModule required username=&amp;#34;bmV2ZXJnb25uYWdpdmV5b3V1cA==&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_create_the_flink_table&#34;&gt;Create the Flink table&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you’re writing to a topic that doesn’t exist yet you’ll need to create it first:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent kafka topic create test_table &lt;span style=&#34;color: #f92672&#34;&gt;--cluster&lt;/span&gt; lkc-qnygo6
Created topic &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;test_table&amp;#34;&lt;/span&gt;.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then you can define a table over the topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;test_table&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;col1&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;test_table&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;kafka&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;scan.bounded.mode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;unbounded&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;scan.startup.mode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;earliest-offset&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.bootstrap.servers&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;pkc-rgm37.us-west-2.aws.confluent.cloud:9092&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.security.protocol&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;SASL_SSL&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.sasl.mechanism&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;PLAIN&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.sasl.jaas.config&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;org.apache.flink.kafka.shaded.org.apache.kafka.common.security.plain.PlainLoginModule required username=&amp;#34;KAFKA_CLUSTER_API_KEY&amp;#34; password=&amp;#34;KAFKA_CLUSTER_API_SECRET&amp;#34;;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;format&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The endpoint of your Kafka cluster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The API key and secret for accessing your Kafka cluster&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;…write data to it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;test_table&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;…and query it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;test_table&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;+----+-------------+--------------------------------+
| op |          id |                           col1 |
+----+-------------+--------------------------------+
| +I |           1 |                              a |&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can check the topic itself by consuming from it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent api-key use KAFKA_CLUSTER_API_KEY
Using API Key &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;KAFKA_CLUSTER_API_KEY&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent kafka topic consume test_table &lt;span style=&#34;color: #f92672&#34;&gt;--from-beginning&lt;/span&gt;
Starting Kafka Consumer. Use Ctrl-C to exit.
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;:1,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;col1&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_using_schema_registry_and_avro&#34;&gt;Using Schema Registry and Avro&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/af-cc-sr.excalidraw.png&#34; alt=&#34;af cc sr.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to use the Schema Registry you’ll need to do a few more steps as well as the above.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Get the Schema Registry endpoint and API key details&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the necessary JAR file to your Flink cluster&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For the Schema Registry endpoint and API key pair it’s similar to what we did above for the Kafka cluster.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Get the Schema Registry endpoint:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent schema-registry cluster describe
+--------------------------------+----------------------------------------------------+
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
| Cluster                        | lsrc-g70zm3                                        |
| Endpoint URL                   | https://psrc-13go8y7.us-west-2.aws.confluent.cloud |&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create an API key pair for accessing the Schema Registry, using the Cluster ID of the Schema Registry (&lt;em&gt;not&lt;/em&gt; your Kafka cluster ID) as the resource:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent api-key create &lt;span style=&#34;color: #f92672&#34;&gt;--resource&lt;/span&gt; lsrc-g70zm3 &lt;span style=&#34;color: #f92672&#34;&gt;--description&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;Flink SQL (SR)&amp;#34;&lt;/span&gt;
It may take a couple of minutes &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;for &lt;/span&gt;the API key to be ready.
Save the API key and secret. The secret is not retrievable later.
+------------+------------------------------------------------------------------+
| API Key    | SCHEMA_REGISTRY_API_KEY                                          |
| API Secret | SCHEMA_REGISTRY_API_SECRET                                       |
+------------+------------------------------------------------------------------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Apache Flink doesn’t ship with support for Schema Registry Avro, but it is &lt;a href=&#34;https://nightlies.apache.org/flink/flink-docs-release-1.20/docs/connectors/table/formats/avro-confluent/&#34;&gt;supported as a separate component&lt;/a&gt;.
If you’re using SQL Client (as I am here) you need to add the &lt;a href=&#34;https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-avro-confluent-registry/1.20.2/flink-sql-avro-confluent-registry-1.20.2.jar&#34;&gt;&lt;code&gt;flink-sql-avro-confluent-registry&lt;/code&gt; JAR file&lt;/a&gt; to your deployment (e.g. by putting it in the &lt;code&gt;/lib&lt;/code&gt; folder of your Flink cluster nodes).
Make sure that you use the correct version of the file for the version of Flink that you’re running!
The one linked to here is for 1.20.2.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the JAR installed and your cluster rebooted, you’re ready to create a table on a topic serialised using Schema Registry Avro:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders00&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;`order_id`&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2147483647&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;`customer_id`&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;`product_id`&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2147483647&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;`price`&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DOUBLE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;orders00&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;kafka&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;scan.bounded.mode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;unbounded&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;scan.startup.mode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;earliest-offset&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.bootstrap.servers&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;pkc-rgm37.us-west-2.aws.confluent.cloud:9092&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.security.protocol&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;SASL_SSL&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.sasl.mechanism&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;PLAIN&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.sasl.jaas.config&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;org.apache.flink.kafka.shaded.org.apache.kafka.common.security.plain.PlainLoginModule required username=&amp;#34;KAFKA_CLUSTER_API_KEY&amp;#34; password=&amp;#34;KAFKA_CLUSTER_API_SECRET&amp;#34;;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;format&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;avro-confluent&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;avro-confluent.url&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;https://psrc-13go8y7.us-west-2.aws.confluent.cloud&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;avro-confluent.basic-auth.credentials-source&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;USER_INFO&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;avro-confluent.basic-auth.user-info&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;SCHEMA_REGISTRY_API_KEY:SCHEMA_REGISTRY_API_SECRET&amp;#39;&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The endpoint of your Kafka cluster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The API key and secret for accessing your Kafka cluster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The endpoint of your Schema Registry&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The API key and secret for accessing your Schema Registry&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Query the table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders00&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;+----+--------------------------------+-------------+-------------+---------+
| op |                       order_id | customer_id |  product_id |   price |
+----+--------------------------------+-------------+-------------+---------+
| +I | 8581b9ab-6c6c-42c0-8d69-252... |        3049 |        1349 |   29.32 |
| +I | 91b69bd2-8c23-4380-b6b4-dc0... |        3160 |        1477 |   43.59 |
| +I | e0f3d4af-a626-47a3-b8a1-c09... |        3245 |        1113 |   37.72 |
| +I | 3eec7aea-ff5a-4852-a357-1ce... |        3220 |        1401 |   92.44 |
| +I | 3fe99471-6ea8-4add-86f8-16e... |        3006 |        1195 |   68.66 |&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_validating_your_cluster_and_api_details_using_kcat&#34;&gt;Validating your cluster and API details using kcat&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As well as the Confluent CLI, you can also use &lt;code&gt;kcat&lt;/code&gt; to check that the cluster details you’re specifying in your Flink SQL DDL are correct.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s an example of querying the same &lt;code&gt;orders00&lt;/code&gt; topic as above, using kcat:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;docker run &lt;span style=&#34;color: #f92672&#34;&gt;--rm&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;--tty&lt;/span&gt; edenhill/kcat:1.7.1 &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;-b&lt;/span&gt; pkc-rgm37.us-west-2.aws.confluent.cloud:9092 &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;-X&lt;/span&gt; security.protocol&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;sasl_ssl &lt;span style=&#34;color: #f92672&#34;&gt;-X&lt;/span&gt; sasl.mechanisms&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;PLAIN &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;-X&lt;/span&gt; sasl.username&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;KAFKA_CLUSTER_API_KEY &lt;span style=&#34;color: #f92672&#34;&gt;-X&lt;/span&gt; sasl.password&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;KAFKA_CLUSTER_API_SECRET &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; avro &lt;span style=&#34;color: #f92672&#34;&gt;-r&lt;/span&gt; https://SCHEMA_REGISTRY_API_KEY:SCHEMA_REGISTRY_API_SECRET@psrc-13go8y7.us-west-2.aws.confluent.cloud &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-t&lt;/span&gt; orders00 &lt;span style=&#34;color: #f92672&#34;&gt;-c5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;order_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;670214e7-65e9-4d71-aabe-6b67a83c6a94&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;customer_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3053&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;product_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1269&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;price&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;38.409999999999997&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;order_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;4785a9f2-2529-4315-8f85-acd01ccf01de&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;customer_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3205&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;product_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1268&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;price&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;34.149999999999999&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;order_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;6126f74f-b72a-469e-b4f2-03961950e1aa&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;customer_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3086&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;product_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1260&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;price&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;77.280000000000001&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;order_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;f308e7cb-1be3-47bc-8fdc-42b6e8b7035e&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;customer_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3196&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;product_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1166&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;price&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;79.950000000000003&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;order_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;9908d516-441f-4db1-8378-f61713118c34&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;customer_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3139&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;product_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1429&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;price&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;48.0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Interesting links - July 2025</title>
      <link>https://rmoff.net/2025/07/18/interesting-links-july-2025/</link>
      <pubDate>2025-07-18</pubDate>
      
      <guid>https://rmoff.net/2025/07/18/interesting-links-july-2025/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/07/t_IMG_1131.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Not got time for all this? I’ve marked 🔥 for my top reads of the month&lt;/em&gt; :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First up, allow me a shameless plug for my blog posts this month:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/07/04/writing-to-apache-iceberg-on-s3-using-kafka-connect-with-glue-catalog/&#34;&gt;Writing to &lt;strong&gt;Apache Iceberg on S3 using Kafka Connect&lt;/strong&gt; with Glue catalog&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmoff.net/2025/07/14/keeping-your-data-lakehouse-in-order-table-maintenance-in-apache-iceberg/&#34;&gt;Keeping your Data Lakehouse in Order: &lt;strong&gt;Table Maintenance in Apache Iceberg&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 &lt;a href=&#34;https://www.confluent.io/blog/streaming-etl-flink-tableflow/&#34;&gt;Building Streaming Data Pipelines, Part 2: &lt;strong&gt;Data Processing and Enrichment with Flink SQL&lt;/strong&gt;&lt;/a&gt; (see also &lt;a href=&#34;https://www.confluent.io/blog/building-streaming-data-pipelines-part-1/&#34;&gt;Part 1&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And with that, on to this month’s set of &lt;a href=&#34;https://rmoff.net/categories/interesting-links/&#34;&gt;Interesting Links&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
I’m linking out to &lt;a href=&#34;https://freedium.cfd/&#34;&gt;Freedium&lt;/a&gt; versions of Medium posts this month, because Medium seems to be pay-walling a bunch of otherwise-freely accessible content.
Yay for the open internet 🙄.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_data_engineering&#34;&gt;Data Engineering&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A nice hands-on example of Sanchit Vijay showing how to use Spark to &lt;a href=&#34;https://freedium.cfd/https://blog.dataengineerthings.org/dare-2-cross-cloud-storage-adventure-s3-r2-d68ed61faece&#34;&gt;move data from AWS S3 to Cloudflare R2&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interesting details on the Apache DataFusion blog about &lt;a href=&#34;https://datafusion.apache.org/blog/2025/07/14/user-defined-parquet-indexes/&#34;&gt;embedding User-Defined Indexes in Apache Parquet Files&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 My colleague Gilles Philippart wrote up a good guide on getting &lt;a href=&#34;https://freedium.cfd/https://medium.com/@gilles.philippart/build-a-data-lakehouse-with-apache-iceberg-polaris-trino-minio-349c534ecd98&#34;&gt;Apache Iceberg, Polaris, Trino, and MinIO&lt;/a&gt; running together locally.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In &lt;em&gt;Lakehouse 2.0: The Open System That Lakehouse 1.0 Was Meant to Be&lt;/em&gt;, Animesh Kumar &amp;amp; Travis Thompson discuss the history of the lakehouse and its evolution from closed formats and ecosystems to open formats and interchangable engines &lt;a href=&#34;https://freedium.cfd/https://medium.com/@community_md101/lakehouse-2-0-the-open-system-that-lakehouse-1-0-was-meant-to-be-part-1-743efc645ea6&#34;&gt;Part 1&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://freedium.cfd/https://medium.com/@community_md101/introducing-lakehouse-2-0-what-changes-769a1c6a758e&#34;&gt;Part 2&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data contracts are a good idea, as is standardising them—of which the &lt;a href=&#34;https://github.com/bitol-io/open-data-contract-standard&#34;&gt;Open Data Contract Standard (ODCS)&lt;/a&gt; is an example.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jaehyeon Kim looks at &lt;a href=&#34;https://jaehyeon.me/blog/2025-07-17-self-service-data-platform-via-sql-gateway/&#34;&gt;how Apache Kyuubi provides a gateway&lt;/a&gt; between end users and applications, and multiple database engines including Flink, Spark, and Trino.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_open_table_formats_catalogs&#34;&gt;Open Table Formats &amp;amp; Catalogs&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Daniel Beach shows how you can use &lt;a href=&#34;https://dataengineeringcentral.substack.com/p/apache-iceberg-on-databricks&#34;&gt;Apache Iceberg on Databricks&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amazon S3 now supports &lt;a href=&#34;https://aws.amazon.com/blogs/big-data/compaction-support-for-avro-and-orc-file-formats-in-apache-iceberg-tables-in-amazon-s3/&#34;&gt;compaction for Avro and ORC file formats in Apache Iceberg tables&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 Thomas Kejser a.k.a. The Database Doctor gives us his spicy take on &lt;strong&gt;Iceberg, The Right Idea - The Wrong Spec&lt;/strong&gt; - &lt;a href=&#34;https://database-doctor.com/posts/iceberg-is-wrong-1.html&#34;&gt;Part 1: History&lt;/a&gt; / &lt;a href=&#34;https://database-doctor.com/posts/iceberg-is-wrong-2.html&#34;&gt;Part 2: The Spec&lt;/a&gt;.
Some will argue that at times veracity takes the back seat to telling a rollicking good story—but it’s a fun read regardless of which side of the debate you sit.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rahul Joshi explains &lt;a href=&#34;https://medium.com/capital-one-tech/delta-lake-transaction-logs-explained-6b5f036e64e2&#34;&gt;Delta Lake transaction logs&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Badal Prasad Singh tells us all about &lt;a href=&#34;https://olake.io/iceberg/iceberg-partitioning-and-writing-strategies&#34;&gt;Iceberg Partitioning and Partitioning Writing Strategies&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apache Polaris hit the big one-oh release (&lt;a href=&#34;https://polaris.apache.org/downloads/#100-release&#34;&gt;1.00&lt;/a&gt;), and Apache Iceberg got a dot release (&lt;a href=&#34;https://iceberg.apache.org/releases/#192-release&#34;&gt;1.9.2&lt;/a&gt;) with a release candidate (RC) for 1.10 in the works.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_cdc&#34;&gt;CDC&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;🔥 Debezium is widely used these days, making Vojtěch Juránek’s article about &lt;a href=&#34;https://debezium.io/blog/2025/07/07/quick-perf-check/&#34;&gt;improving Debezium performance&lt;/a&gt; a useful reference.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Abhishek Vishnoi has a hands-on guide that shows &lt;a href=&#34;https://freedium.cfd/https://medium.com/@vishnoiabhishek1/how-to-implement-a-debezium-custom-converter-d203e3b9fb65&#34;&gt;how to implement a custom converter in Debezium&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An excellent blog post as always from Gunnar Morling, this time looking at &lt;a href=&#34;https://www.morling.dev/blog/mastering-postgres-replication-slots/&#34;&gt;Postgres Replication Slots: Preventing WAL Bloat and Other Production Issues&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Debezium &lt;a href=&#34;https://debezium.io/blog/2025/07/09/debezium-3-2-final-released/&#34;&gt;3.2.0.Final Released&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_kafka_and_event_streaming&#34;&gt;Kafka and Event Streaming&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Is it even an edition of Interesting Links if there’s not a new Kafka clone, either in a different language or deployed using a different architecture?&lt;/em&gt;
This month, Ravi Atluri writes about &lt;a href=&#34;https://freedium.cfd/https://medium.com/gojekengineering/introducing-xkafka-kafka-but-simpler-for-go-91f4ce3edade&#34;&gt;xkafka — Kafka, but Simpler (for Go)&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 Mark Teehan has built &lt;a href=&#34;https://freedium.cfd/https://medium.com/@streamsend/a-fancy-way-to-send-a-file-streaming-files-through-kafka-topics-4278fed4bf12&#34;&gt;a fancy way to send a file: Streaming Files Through Kafka topics&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_stream_processing&#34;&gt;Stream Processing&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;André Santos writes about &lt;a href=&#34;https://www.datanutshell.com/posts/flink_http_full_cache_connector&#34;&gt;a new connector for Flink that does HTTP lookups and supports caching&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are several interesting papers that have been published recently:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.vldb.org/pvldb/volumes/18/paper/Streaming%20Time%20Series%20Subsequence%20Anomaly%20Detection%3A%20A%20Glance%20and%20Focus%20Approach&#34;&gt;Streaming Time Series Subsequence Anomaly Detection: A Glance and Focus Approach&lt;/a&gt; (&lt;em&gt;VLDB Volume 18, No. 6&lt;/em&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dl.acm.org/doi/pdf/10.1145/3722212.3724445&#34;&gt;Oceanus: Enable SLO-Aware Vertical Autoscaling for Cloud-Native Streaming Services in Tencent&lt;/a&gt; (&lt;em&gt;SIGMOD/PODS June 2025&lt;/em&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://arxiv.org/pdf/2504.10438&#34;&gt;Streaming Democratized: Ease Across the Latency Spectrum with Delayed View Semantics and Snowflake Dynamic Tables&lt;/a&gt; (&lt;em&gt;SIGMOD/PODS June 2025&lt;/em&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_rdbms_and_general_data_stuff&#34;&gt;RDBMS and General Data Stuff&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Some people read manuals to learn, but if you’re like me and like learning through doing the &lt;a href=&#34;https://www.sqlnoir.com/&#34;&gt;SQL Noir&lt;/a&gt; online game is a thriller in which you solve puzzles using SQL skills that you develop.
If this is your kind of thing you’ll also like this &lt;a href=&#34;https://www.sqlnoir.com/blog/games-to-learn-sql&#34;&gt;list of SQL games&lt;/a&gt; that SQL Noir also published.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Are data warehouses a good idea? Definitely. Does everyone need one on day one? Nope. Aleksei Aleinikov has some wise words on &lt;a href=&#34;https://freedium.cfd/https://medium.com/data-engineer-things/five-signs-you-can-skip-the-dwh-in-2025-2078e000faec&#34;&gt;when the right time is—and isn’t—to build one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 Despite the &amp;#34;listicle&amp;#34; title—&lt;em&gt;which would normally have me clicking away faster than &lt;a href=&#34;https://www.reddit.com/r/interestingasfuck/s/HZz0CsC1ye&#34;&gt;Andy Byron can hide from a camera&lt;/a&gt;&lt;/em&gt;—this article from Bernd Wessely has some excellent points in it: &lt;a href=&#34;https://freedium.cfd/https://medium.com/data-engineer-things/unlearning-data-architecture-10-myths-worth-killing-946e728f1acf&#34;&gt;Unlearning Data Architecture: 10 Myths Worth Killing&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ben Dicken explains &lt;a href=&#34;https://planetscale.com/blog/caching&#34;&gt;caching&lt;/a&gt; in this article with nice animations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dominik Tornow has a good &lt;a href=&#34;https://dtornow.substack.com/p/jepsen-and-tigerbeetle&#34;&gt;analysis and commentary&lt;/a&gt; on the findings of the recent &lt;a href=&#34;https://jepsen.io/analyses/tigerbeetle-0.16.11&#34;&gt;Jepsen testing of TigerBeetle&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interesting papers:&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.vldb.org/pvldb/volumes/18/paper/Anarchy%20in%20the%20Database%3A%20A%20Survey%20and%20Evaluation%20of%20Database%20Management%20System%20Extensibility&#34;&gt;Anarchy in the Database: A Survey and Evaluation of Database Management System Extensibility&lt;/a&gt; (&lt;em&gt;VLDB Volume 18, No. 6&lt;/em&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dl.acm.org/doi/pdf/10.1145/3709675&#34;&gt;CRDV: Conflict-free Replicated Data Views&lt;/a&gt; (&lt;em&gt;Proc. ACM Manag. Data, Vol. 3, No. 1&lt;/em&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www2.cs.sfu.ca/~tzwang/preemptdb.pdf&#34;&gt;Low-Latency Transaction Scheduling via Userspace Interrupts: Why Wait or Yield When You Can Preempt?&lt;/a&gt; (&lt;em&gt;Proc. ACM Manag. Data, Vol. 3, No. 3&lt;/em&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_data_in_action&#34;&gt;Data in Action&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare&lt;/strong&gt; - &lt;a href=&#34;https://blog.cloudflare.com/timescaledb-art/&#34;&gt;How TimescaleDB helped us scale analytics and reporting&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Klaviyo&lt;/strong&gt; - &lt;a href=&#34;https://klaviyo.tech/our-experience-with-amazon-aurora-blue-green-deployments-cb867d2d640e&#34;&gt;Our Experience with Amazon Aurora Blue/Green Deployments&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Netflix&lt;/strong&gt; - &lt;a href=&#34;https://netflixtechblog.com/netflix-tudum-architecture-from-cqrs-with-kafka-to-cqrs-with-raw-hollow-86d141b72e52&#34;&gt;Netflix Tudum Architecture: from CQRS with Kafka to CQRS with RAW Hollow&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Atlassian&lt;/strong&gt; - &lt;a href=&#34;https://www.atlassian.com/blog/atlassian-engineering/migrating-jira-database-platform-to-aws-aurora&#34;&gt;Migrating the Jira Database Platform to AWS Aurora&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Peloton&lt;/strong&gt; - &lt;a href=&#34;https://hudi.apache.org/blog/2025/07/15/modernizing-datainfra-peloton-hudi/&#34;&gt;Modernizing Data Infrastructure&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Stifel&lt;/strong&gt; - &lt;a href=&#34;https://aws.amazon.com/blogs/big-data/how-stifel-built-a-modern-data-platform-using-aws-glue-and-an-event-driven-domain-architecture/&#34;&gt;Building a modern data platform using AWS Glue and an event-driven domain architecture&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pinterest&lt;/strong&gt; - &lt;a href=&#34;https://medium.com/pinterest-engineering/next-gen-data-processing-at-massive-scale-at-pinterest-with-moka-part-1-of-2-39a36d5e82c4&#34;&gt;Next Gen Data Processing at Massive Scale (Part 1 of 2)&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 &lt;strong&gt;Datadog&lt;/strong&gt; - &lt;a href=&#34;https://www.datadoghq.com/blog/engineering/reliable-log-delivery/&#34;&gt;How we built reliable log delivery to thousands of unpredictable endpoints&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Lion&lt;/strong&gt; - &lt;a href=&#34;https://freedium.cfd/https://medium.com/data-engineer-things/how-we-built-the-aws-data-analytics-platform-part-1-b4c798d17094&#34;&gt;How We Built the AWS Data &amp;amp; Analytics Platform (Part 1)&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_and_finally&#34;&gt;And finally…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Nothing to do with data, but stuff that I’ve found interesting or has made me smile.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Elena Verna writes up &lt;a href=&#34;https://www.elenaverna.com/p/here-is-how-i-approach-starting-a&#34;&gt;her playbook for the first 30, 60, 90 days of a new job&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 Charity Majors is one of my favourite writers, and &lt;a href=&#34;https://charity.wtf/2025/07/09/thoughts-on-motivation-and-my-40-year-career/&#34;&gt;her recent blog post&lt;/a&gt; is a great example.
It’s genuine, it’s articulate (and it reminds me of &lt;em&gt;real blogging&lt;/em&gt; that used to be the norm and is getting swamped these days in AI slop and SEO-chasing bullshit).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you’re as old as me you’ll enjoy this blast of nostalgia courtesy of the Internet Archive’s &lt;a href=&#34;https://blog.archive.org/2025/06/09/keep-on-gifin-a-new-version-of-gifcities-internet-archives-geocities-animated-gif-search-engine/&#34;&gt;GeoCities GIF search engine&lt;/a&gt; (&lt;em&gt;and FTR, it’s &lt;strong&gt;always&lt;/strong&gt; &lt;code&gt;/ɡɪf/&lt;/code&gt;, never &lt;code&gt;/dʒɪf/&lt;/code&gt; 😜&lt;/em&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
If you like these kind of links you might like to read about &lt;a href=&#34;https://rmoff.net/2024/05/22/how-i-try-to-keep-up-with-the-data-tech-world-a-list-of-data-blogs/&#34;&gt;How I Try To Keep Up With The Data Tech World (A List of Data Blogs)&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Keeping your Data Lakehouse in Order: Table Maintenance in Apache Iceberg</title>
      <link>https://rmoff.net/2025/07/14/keeping-your-data-lakehouse-in-order-table-maintenance-in-apache-iceberg/</link>
      <pubDate>2025-07-14</pubDate>
      
      <guid>https://rmoff.net/2025/07/14/keeping-your-data-lakehouse-in-order-table-maintenance-in-apache-iceberg/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/07/t_IMG_0863.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Iceberg nicely decouples storage from ingest and query (yay!).
When we say &amp;#34;decouples&amp;#34; it’s a fancy way of saying &amp;#34;doesn’t do&amp;#34;.
Which, in the case of ingest and query, is really powerful.
It means that we can store data in an open format, populated by one or more tools, and queried by the same, or other tools.
Iceberg gets to be very opinionated and optimised around what it was built for (storing tabular data in a flexible way that can be efficiently queried).
This is amazing!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But, what Iceberg doesn’t do is any housekeeping on its data and metadata.
This means that getting data in and out of Apache Iceberg isn’t where the story stops.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can provision your object storage, choose a metadata catalog, and chuck an engine on it all (like Flink, Trino, or Spark).
But you still need to think about the files that Iceberg is writing.
Because under the covers of your Iceberg table is this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/iceberg-metadata.webp&#34; alt=&#34;iceberg metadata&#34; width=&#34;500&#34;/&gt;
&lt;/div&gt;
&lt;div class=&#34;title&#34;&gt;Figure 1. Credit: &lt;a href=&#34;https://iceberg.apache.org/spec/#overview&#34;&gt;Apache Iceberg docs&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s take a step back and look at what happens when you write some data to Iceberg.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_do_try_this_at_home&#34;&gt;Do try this at home!&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to try this at home and follow along as you read the blog post, you can use &lt;a href=&#34;https://github.com/rmoff/examples/tree/main/iceberg/trino-polaris-minio&#34;&gt;this Docker Compose&lt;/a&gt; to bring up a local stack of:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://polaris.apache.org/&#34;&gt;Polaris&lt;/a&gt; (catalog)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://min.io/&#34;&gt;MinIO&lt;/a&gt; (object store)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://trino.io&#34;&gt;Trino&lt;/a&gt; (engine) &amp;amp; &lt;a href=&#34;https://spark.apache.org&#34;&gt;Spark&lt;/a&gt; (engine) and &lt;a href=&#34;https://jupyter.org/&#34;&gt;Jupyter&lt;/a&gt; (notebook)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/nimtable/nimtable&#34;&gt;Nimtable&lt;/a&gt; (catalog UI &amp;amp; maintenance)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_what_happens_when_you_write_data_to_iceberg&#34;&gt;What happens when you write data to Iceberg?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;ℹ️ &lt;em&gt;For more in-depth notes on this subject, check out Alex Merced’s &lt;a href=&#34;https://www.dremio.com/blog/the-life-of-a-write-query-for-apache-iceberg-tables/&#34;&gt;article&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you first create a table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;EXISTS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customer_id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;BIGINT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;first_name&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;255&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;last_name&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;255&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;email&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;255&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Iceberg writes a single &lt;strong&gt;metadata file&lt;/strong&gt; holding details including the table’s location and its schema:&lt;/p&gt;
&lt;/div&gt;
&lt;details&gt;
&lt;summary class=&#34;title&#34;&gt;&lt;code&gt;metadata/00000-69666f0f-2902-49ae-a717-0d8eb81c4825.metadata.json&lt;/code&gt; &lt;em&gt;(click to expand)&lt;/em&gt;&lt;/summary&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;format-version&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;table-uuid&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ee794fd1-2144-42ce-a9f3-e3807ec4c054&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;location&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;s3://warehouse/rmoff/customers&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;last-sequence-number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;last-updated-ms&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1752247098598&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;last-column-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;current-schema-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;schemas&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;struct&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;schema-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;customer_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;required&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;long&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;first_name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;required&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;last_name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;required&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;email&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;required&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;default-spec-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;partition-specs&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;spec-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[]&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;last-partition-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;999&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;default-sort-order-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;sort-orders&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;order-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[]&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;properties&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;owner&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;created-at&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;2025-07-11T15:18:18.570926252Z&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;write.parquet.compression-codec&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;zstd&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;current-snapshot-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;refs&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{},&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;snapshots&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[],&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;statistics&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[],&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;partition-statistics&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[],&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;snapshot-log&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[],&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;metadata-log&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[]&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Other than that, there’s nothing else written at this point.
Now let’s write one row of data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customer_id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;first_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;last_name&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;email&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Rey&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Skywalker&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;rey@rebelscum.org&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This causes several more files to be written by Iceberg, both &lt;code&gt;/data&lt;/code&gt; and &lt;code&gt;/metadata&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;$ mc ls -r minio/warehouse/rmoff/customers/
[…] data/00000-0-e3b7a202-2481-4d9f-9b7c-9830908a425a-0-00001.parquet &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
[…] metadata/00000-69666f0f-2902-49ae-a717-0d8eb81c4825.metadata.json &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
[…] metadata/00001-d35fd98b-8761-4998-bd74-9677c9929e63.metadata.json &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
[…] metadata/ab613eb0-2f90-4273-869e-ee6d1425ab9a-m0.avro &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
[…] metadata/snap-653583197990088094-1-ab613eb0-2f90-4273-869e-ee6d1425ab9a.avro &lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;(5)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The row of data that I just wrote&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Metadata (v00000, original, as shown above)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Metadata (v00001, new)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Manifest list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;5&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Manifest file&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The v00001 &lt;strong&gt;metadata file&lt;/strong&gt; is similar to the first, except that it now includes snapshot details:&lt;/p&gt;
&lt;/div&gt;
&lt;details&gt;
&lt;summary class=&#34;title&#34;&gt;Extract from &lt;code&gt;metadata/00001-d35fd98b-8761-4998-bd74-9677c9929e63.metadata.json&lt;/code&gt;&lt;/summary&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;current-snapshot-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;653583197990088094&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;refs&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;snapshot-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;653583197990088094&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;branch&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;snapshots&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;sequence-number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;snapshot-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;653583197990088094&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;timestamp-ms&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1752247268656&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;summary&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;operation&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;append&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;spark.app.id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;local-1752247081867&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;added-data-files&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;added-records&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;added-files-size&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1367&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;changed-partition-count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;total-records&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;total-files-size&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1367&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;total-data-files&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;total-delete-files&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;total-position-deletes&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;total-equality-deletes&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;engine-version&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;3.5.5&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;app-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;local-1752247081867&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;engine-name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;spark&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;iceberg-version&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Apache Iceberg 1.8.1 (commit 9ce0fcf0af7becf25ad9fc996c3bad2afdcfd33d)&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;manifest-list&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;s3://warehouse/rmoff/customers/metadata/snap-653583197990088094-1-ab613eb0-2f90-4273-869e-ee6d1425ab9a.avro&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;schema-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;statistics&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[],&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;partition-statistics&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[],&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;snapshot-log&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;timestamp-ms&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1752247268656&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;snapshot-id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;653583197990088094&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;],&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;metadata-log&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;timestamp-ms&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1752247098598&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;metadata-file&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;s3://warehouse/rmoff/customers/metadata/00000-69666f0f-2902-49ae-a717-0d8eb81c4825.metadata.json&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In the snapshot data is referenced a &lt;strong&gt;manifest list&lt;/strong&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;details&gt;
&lt;summary class=&#34;title&#34;&gt;&lt;code&gt;metadata/snap-653583197990088094-1-ab613eb0-2f90-4273-869e-ee6d1425ab9a.avro&lt;/code&gt; (&lt;em&gt;converted to JSON&lt;/em&gt;)&lt;/summary&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;manifest_path&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;s3://warehouse/rmoff/customers/metadata/ab613eb0-2f90-4273-869e-ee6d1425ab9a-m0.avro&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;manifest_length&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;7192&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;partition_spec_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;sequence_number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;min_sequence_number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;added_snapshot_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;653583197990088094&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;added_files_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;existing_files_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;deleted_files_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;added_rows_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;existing_rows_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;deleted_rows_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;partitions&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[]&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key_metadata&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This in turn references a &lt;strong&gt;Manifest file&lt;/strong&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;details&gt;
&lt;summary class=&#34;title&#34;&gt;&lt;code&gt;metadata/ab613eb0-2f90-4273-869e-ee6d1425ab9a-m0.avro&lt;/code&gt;&lt;/summary&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;status&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;snapshot_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;long&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;653583197990088094&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;sequence_number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;file_sequence_number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;data_file&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;file_path&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;s3://warehouse/rmoff/customers/data/00000-0-e3b7a202-2481-4d9f-9b7c-9830908a425a-0-00001.parquet&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;file_format&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;PARQUET&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;partition&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{},&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;record_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;file_size_in_bytes&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1367&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;column_sizes&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;43&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;48&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;56&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value_counts&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;null_value_counts&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;nan_value_counts&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[]&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;lower_bounds&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0001&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Rey&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Skywalker&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;rey@rebelscum.or&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;upper_bounds&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0001&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;u0000&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Rey&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Skywalker&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;rey@rebelscum.os&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key_metadata&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;split_offsets&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
                &lt;span style=&#34;color: #ae81ff&#34;&gt;4&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;equality_ids&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;sort_order_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;referenced_data_file&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As you can see from the Manifest file, this points to the data file that was written, and holds some basic statistics about the data such as upper and lower bound values of each column.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_data_about_the_metadata&#34;&gt;Data about the metadata&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/metadata.webp&#34; alt=&#34;yo dawg&#34; width=&#34;i heard you like metadata - so I got you some data about the metadata&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Instead of poking around in object store buckets, we can get a good view of what’s happening beneath the surface of an Iceberg table using the system tables that expose this metadata.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;How you access these tables depends on your query engine for Iceberg.
&lt;a href=&#34;https://trino.io/docs/current/connector/iceberg.html#metadata-tables&#34;&gt;Trino uses a &lt;code&gt;$&lt;/code&gt; separator&lt;/a&gt; (&lt;code&gt;mytable$snapshots&lt;/code&gt;) whilst &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/spark-queries/#inspecting-tables&#34;&gt;Spark uses qualifier suffix&lt;/a&gt; (&lt;code&gt;catalog.db.table.snapshots&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here is the above metadata, seen through the &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/spark-queries/#inspecting-tables&#34;&gt;tables in Spark&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;metadata_log_entries&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;polaris&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;metadata_log_entries&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 20%;&#34;/&gt;
&lt;col style=&#34;width: 20%;&#34;/&gt;
&lt;col style=&#34;width: 20%;&#34;/&gt;
&lt;col style=&#34;width: 20%;&#34;/&gt;
&lt;col style=&#34;width: 20%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;timestamp&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;file&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;latest_snapshot_id&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;latest_schema_id&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;latest_sequence_number&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;2025-07-11 15:18:18.598000&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;s3://warehouse/rmoff/customers/metadata/00000-69666f0f-2902-49ae-a717-0d8eb81c4825.metadata.json&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;None&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;None&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;None&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;2025-07-11 15:21:08.656000&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;s3://warehouse/rmoff/customers/metadata/00001-d35fd98b-8761-4998-bd74-9677c9929e63.metadata.json&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;653583197990088094&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;0&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;1&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;manifests&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;polaris&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;manifests&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 8.3333%;&#34;/&gt;
&lt;col style=&#34;width: 8.3333%;&#34;/&gt;
&lt;col style=&#34;width: 8.3333%;&#34;/&gt;
&lt;col style=&#34;width: 8.3333%;&#34;/&gt;
&lt;col style=&#34;width: 8.3333%;&#34;/&gt;
&lt;col style=&#34;width: 8.3333%;&#34;/&gt;
&lt;col style=&#34;width: 8.3333%;&#34;/&gt;
&lt;col style=&#34;width: 8.3333%;&#34;/&gt;
&lt;col style=&#34;width: 8.3333%;&#34;/&gt;
&lt;col style=&#34;width: 8.3333%;&#34;/&gt;
&lt;col style=&#34;width: 8.3333%;&#34;/&gt;
&lt;col style=&#34;width: 8.3337%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;content&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;path&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;length&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;partition_spec_id&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;added_snapshot_id&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;added_data_files_count&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;existing_data_files_count&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;deleted_data_files_count&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;added_delete_files_count&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;existing_delete_files_count&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;deleted_delete_files_count&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;partition_summaries&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;0&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;s3://warehouse/rmoff/customers/metadata/ab613eb0-2f90-4273-869e-ee6d1425ab9a-m0.avro&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;7192&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;0&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;653583197990088094&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;1&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;0&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;0&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;0&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;0&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;0&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;[]&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;snapshots&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;polaris&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;snapshots&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 16.6666%;&#34;/&gt;
&lt;col style=&#34;width: 16.6666%;&#34;/&gt;
&lt;col style=&#34;width: 16.6666%;&#34;/&gt;
&lt;col style=&#34;width: 16.6666%;&#34;/&gt;
&lt;col style=&#34;width: 16.6666%;&#34;/&gt;
&lt;col style=&#34;width: 16.667%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;committed_at&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;snapshot_id&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;parent_id&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;operation&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;manifest_list&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;summary&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;2025-07-11 15:21:08.656000&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;653583197990088094&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;None&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;append&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;s3://warehouse/rmoff/customers/metadata/snap-653583197990088094-1-ab613eb0-2f90-4273-869e-ee6d1425ab9a.avro&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;\{&amp;#39;engine-version&amp;#39;: &amp;#39;3.5.5&amp;#39;, &amp;#39;added-data-files&amp;#39;: &amp;#39;1&amp;#39;,
&amp;#39;total-equality-deletes&amp;#39;: &amp;#39;0&amp;#39;, &amp;#39;app-id&amp;#39;: &amp;#39;local-1752247081867&amp;#39;,
&amp;#39;added-records&amp;#39;: &amp;#39;1&amp;#39;, &amp;#39;total-records&amp;#39;: &amp;#39;1&amp;#39;, &amp;#39;spark.app.id&amp;#39;:
&amp;#39;local-1752247081867&amp;#39;, &amp;#39;changed-partition-count&amp;#39;: &amp;#39;1&amp;#39;, &amp;#39;engine-name&amp;#39;:
&amp;#39;spark&amp;#39;, &amp;#39;total-position-deletes&amp;#39;: &amp;#39;0&amp;#39;, &amp;#39;added-files-size&amp;#39;: &amp;#39;1367&amp;#39;,
&amp;#39;total-delete-files&amp;#39;: &amp;#39;0&amp;#39;, &amp;#39;iceberg-version&amp;#39;: &amp;#39;Apache Iceberg 1.8.1
(commit 9ce0fcf0af7becf25ad9fc996c3bad2afdcfd33d)&amp;#39;, &amp;#39;total-files-size&amp;#39;:
&amp;#39;1367&amp;#39;, &amp;#39;total-data-files&amp;#39;: &amp;#39;1&amp;#39;}&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Plus the data file itself for a table, in &lt;code&gt;files&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;file_path&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_count&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;file_size_in_bytes&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;polaris&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;files&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 33.3333%;&#34;/&gt;
&lt;col style=&#34;width: 33.3333%;&#34;/&gt;
&lt;col style=&#34;width: 33.3334%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;file_path&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;record_count&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;file_size_in_bytes&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;s3://warehouse/rmoff/customers/data/00000-0-e3b7a202-2481-4d9f-9b7c-9830908a425a-0-00001.parquet&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;1&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;1367&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_why_all_these_files&#34;&gt;Why all these files?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After a few more changes to the data on the table, what started off as five files in the bucket is now ten times that:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;docker compose &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec &lt;/span&gt;minio-client mc &lt;span style=&#34;color: #f8f8f2&#34;&gt;ls&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-r&lt;/span&gt; minio/warehouse/rmoff/customers
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] data/00000-0-e3b7a202-2481-4d9f-9b7c-9830908a425a-0-00001.parquet
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] data/00000-10-e314c682-0973-4851-a1d3-02ec2ff474d3-0-00001.parquet
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] data/00000-11-9cc47f12-f4f9-4db0-a942-2dd67cd3b1ba-0-00001.parquet
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] data/00000-12-1d30b129-68e1-4860-a4f5-f996916125d4-0-00001.parquet
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] data/00000-13-fa0ef50e-e976-41dc-8335-dd67568ed81e-0-00001.parquet
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] data/00000-14-3b349ccd-1cb1-467b-b0cd-68d98d081c62-0-00001.parquet
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] data/00000-22-613312a3-36fa-4714-8088-217bfce711b5-0-00001.parquet
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] data/00000-24-e0fd0048-a3c1-4acc-bac5-cbe1df00d5a0-0-00001.parquet
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] data/00000-8-b2dad931-1680-499f-894f-2d853aa523f9-0-00001.parquet
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] data/00000-9-8527fa9b-5d74-4edc-8620-d9a4cf73f6f4-0-00001.parquet
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/00000-69666f0f-2902-49ae-a717-0d8eb81c4825.metadata.json
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/00001-d35fd98b-8761-4998-bd74-9677c9929e63.metadata.json
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/00002-9b2338d4-020e-4a9f-83cc-214c567a04e4.metadata.json
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/00003-4dab419f-a92a-448c-b594-4c41a150c16a.metadata.json
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/00004-dc4755fc-aecd-468c-bc1a-5475ad56b376.metadata.json
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/00005-2e94a329-5463-44b0-bfc5-d7a70932ca54.metadata.json
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/00006-743f8acd-b533-4f15-868a-8c8cb6531e98.metadata.json
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/00007-f4e31526-9a63-4709-833c-2aeee0b070a3.metadata.json
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/00008-5e69c6e7-afd0-4c76-86ef-502b6e684d5f.metadata.json
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/00009-475e53be-14d1-4692-ba63-b736ee3289e7.metadata.json
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/00010-99acda0d-dd1d-429e-b1a1-2d61f9ad5e0d.metadata.json
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/00011-99c4c0cc-3454-433f-a5a2-7c3ae496e7d5.metadata.json
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/00012-1a421573-e57e-4d12-b112-b4b226cdc939.metadata.json
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/228ccff5-47ff-4253-94e9-eca15e40fac3-m0.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/44a08557-5c09-45af-979c-a3f6bd20f73f-m0.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/4a03f20d-a439-4f31-a903-7f3c6460918c-m0.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/7d48f2bc-3284-406d-ade6-a4acb3a449bf-m0.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/822c7500-d614-4362-9771-5a4d85fc8637-m0.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/ab613eb0-2f90-4273-869e-ee6d1425ab9a-m0.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/adaa1024-c57f-4d40-a77c-f90ae7657691-m0.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/adaa1024-c57f-4d40-a77c-f90ae7657691-m1.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/adaa1024-c57f-4d40-a77c-f90ae7657691-m2.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/adaa1024-c57f-4d40-a77c-f90ae7657691-m3.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/adaa1024-c57f-4d40-a77c-f90ae7657691-m4.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/adaa1024-c57f-4d40-a77c-f90ae7657691-m5.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/adaa1024-c57f-4d40-a77c-f90ae7657691-m6.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/adaa1024-c57f-4d40-a77c-f90ae7657691-m7.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/bed8d569-0d51-49b8-ab45-90506fa8e225-m0.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/c7835d36-f795-4972-b596-47207e01c4b3-m0.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/d4c87db9-87f4-4a0c-86be-22b280415213-m0.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/e06e486c-1679-4b8c-807e-f97771d2098e-m0.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/snap-3955300550128988035-1-adaa1024-c57f-4d40-a77c-f90ae7657691.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/snap-4323972595265181943-1-d4c87db9-87f4-4a0c-86be-22b280415213.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/snap-6183377644092012057-1-c7835d36-f795-4972-b596-47207e01c4b3.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/snap-653583197990088094-1-ab613eb0-2f90-4273-869e-ee6d1425ab9a.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/snap-6908561599456501560-1-4a03f20d-a439-4f31-a903-7f3c6460918c.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/snap-707189909035517389-1-e06e486c-1679-4b8c-807e-f97771d2098e.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/snap-7224052145290180020-1-228ccff5-47ff-4253-94e9-eca15e40fac3.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/snap-7609541883410176846-1-44a08557-5c09-45af-979c-a3f6bd20f73f.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/snap-8234548320069527226-1-bed8d569-0d51-49b8-ab45-90506fa8e225.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/snap-8447691896096706468-1-822c7500-d614-4362-9771-5a4d85fc8637.avro
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…] metadata/snap-8687338518067749463-1-7d48f2bc-3284-406d-ade6-a4acb3a449bf.avro&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is a by-product of how Iceberg provides its rich functionality.
Iceberg has been designed and built so that it supports features such as &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/branching/&#34;&gt;branching&lt;/a&gt;, &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/evolution/&#34;&gt;schema evolution&lt;/a&gt;, &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/partitioning/#icebergs-hidden-partitioning&#34;&gt;partitioning&lt;/a&gt;, and &lt;a href=&#34;https://trino.io/docs/current/connector/iceberg.html#time-travel-queries&#34;&gt;time travel&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_time_travel_in_iceberg&#34;&gt;Time travel in Iceberg&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For example, I can query the table’s state as it was half an hour ago.
In this case, Iceberg uses these files to reconstruct the data and schema of a table at a given time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;OF&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;NOW&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;INTERVAL&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;MINUTES&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 25%;&#34;/&gt;
&lt;col style=&#34;width: 25%;&#34;/&gt;
&lt;col style=&#34;width: 25%;&#34;/&gt;
&lt;col style=&#34;width: 25%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;customer_id&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;first_name&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;last_name&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;email&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;2&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Hermione&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Granger&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;mailto:leviosaaaaa@hogwarts.edu&#34;&gt;leviosaaaaa@hogwarts.edu&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;1&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Rey&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Skywalker&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;mailto:rey@rebelscum.org&#34;&gt;rey@rebelscum.org&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Time travel in Iceberg is based around the concept of snapshots.
We can look up the snapshot that was current at the point in time we’re querying (30 minutes ago, in this example):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;manifest_list&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;snapshot_id&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;polaris&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;snapshots&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;committed_at&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;NOW&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;INTERVAL&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;MINUTES&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;committed_at&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;ASC&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;LIMIT&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 50%;&#34;/&gt;
&lt;col style=&#34;width: 50%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;manifest_list&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;snapshot_id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;s3://warehouse/rmoff/customers/metadata/snap-707189909035517389-1-e06e486c-1679-4b8c-807e-f97771d2098e.avro&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;707189909035517389&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;strong&gt;manifest list&lt;/strong&gt; for this snapshot holds the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;manifest_path&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;s3://warehouse/rmoff/customers/metadata/e06e486c-1679-4b8c-807e-f97771d2098e-m0.avro&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;manifest_length&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;7194&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;partition_spec_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;sequence_number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;min_sequence_number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;added_snapshot_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;707189909035517389&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;added_files_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;existing_files_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;deleted_files_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;added_rows_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;existing_rows_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;deleted_rows_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;partitions&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[]&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key_metadata&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;manifest_path&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;s3://warehouse/rmoff/customers/metadata/ab613eb0-2f90-4273-869e-ee6d1425ab9a-m0.avro&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;manifest_length&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;7192&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;partition_spec_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;sequence_number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;min_sequence_number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;added_snapshot_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;653583197990088094&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;added_files_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;existing_files_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;deleted_files_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;added_rows_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;existing_rows_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;deleted_rows_count&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;partitions&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[]&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;key_metadata&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The two referenced manifest files contain pointers to the data files:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;&lt;code&gt;e06e486c-1679-4b8c-807e-f97771d2098e-m0.avro&lt;/code&gt;&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;status&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;snapshot_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;long&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;707189909035517389&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;sequence_number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;file_sequence_number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;data_file&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;file_path&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;s3://warehouse/rmoff/customers/data/00000-8-b2dad931-1680-499f-894f-2d853aa523f9-0-00001.parquet&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;&lt;code&gt;ab613eb0-2f90-4273-869e-ee6d1425ab9a-m0.avro&lt;/code&gt;&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;status&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;snapshot_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;long&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;653583197990088094&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;sequence_number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;file_sequence_number&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;data_file&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;file_path&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;s3://warehouse/rmoff/customers/data/00000-0-e3b7a202-2481-4d9f-9b7c-9830908a425a-0-00001.parquet&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and then the data files:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;&lt;code&gt;00000-0-e3b7a202-2481-4d9f-9b7c-9830908a425a-0-00001.parquet&lt;/code&gt;&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;┌─────────────┬────────────┬───────────┬───────────────────┐
│ customer_id │ first_name │ last_name │       email       │
│    int64    │  varchar   │  varchar  │      varchar      │
├─────────────┼────────────┼───────────┼───────────────────┤
│      1      │ Rey        │ Skywalker │ rey@rebelscum.org │
└─────────────┴────────────┴───────────┴───────────────────┘&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;&lt;code&gt;00000-8-b2dad931-1680-499f-894f-2d853aa523f9-0-00001.parquet&lt;/code&gt;&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;┌─────────────┬────────────┬───────────┬──────────────────────────┐
│ customer_id │ first_name │ last_name │          email           │
│    int64    │  varchar   │  varchar  │         varchar          │
├─────────────┼────────────┼───────────┼──────────────────────────┤
│      2      │ Hermione   │ Granger   │ leviosaaaaa@hogwarts.edu │
└─────────────┴────────────┴───────────┴──────────────────────────┘&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These two rows of data match what is shown in the &lt;code&gt;TIMESTAMP AS OF&lt;/code&gt; time travel query above.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_ctrl_z_for_your_data_lakehouse&#34;&gt;Ctrl-Z for your data lakehouse&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since Iceberg builds these layers of data and metadata for a table over time, it means that you can also rollback the table to one of its former states.
To do this Iceberg simply changes the pointer of the current snapshot to a previous one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Both &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/spark-procedures/#rollback_to_snapshot&#34;&gt;Spark&lt;/a&gt; and &lt;a href=&#34;https://trino.io/docs/current/connector/iceberg.html#rolling-back-to-a-previous-snapshot&#34;&gt;Trino&lt;/a&gt; provide &lt;code&gt;rollback_to_snapshot&lt;/code&gt;.
The joy of open standards is that even if you’re using an engine for your Iceberg work that has not implemented this feature, you can just use one that has for this operation alone, and then go back to your other one as normal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;-- uh oh, someone forgot a predicate&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CALL&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;polaris&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;system&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rollback_to_snapshot&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;rmoff.customers&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;707189909035517389&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt; customer_id | first_name | last_name |          email           | phone
-------------+------------+-----------+--------------------------+-------
           1 | Rey        | Skywalker | rey@rebelscum.org        | NULL
           2 | Hermione   | Granger   | leviosaaaaa@hogwarts.edu | NULL&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_sodoesnt_this_get_messy&#34;&gt;So…doesn’t this get messy?&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Well, yes.
Particularly if you think that typically for every commit to Iceberg, a new data file is written.
That data file could be thousands of records; it could also be one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If the source of your data coming into Iceberg is a streaming platform (such as Kafka Connect) then it’s more likely you could end up with smaller files if the volume of ingest is much lower than the rate.
That is to say, if you want to be able to read the data sooner, you’ll set the commit period shorter.
But the tradeoff of a shorter commit time is that you’re going to end up with lots of smaller data files, unless you have large volumes of data coming in during that period.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can look at the metadata about the files and compare the number of data files to the &lt;code&gt;record_count&lt;/code&gt; across them all:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;trino&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;data_file_ct&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_count&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_ct&lt;/span&gt;
                &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;&amp;#34;customers$files&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;data_file_ct&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_ct&lt;/span&gt;
&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;--------------+-----------&lt;/span&gt;
           &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;row&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This means that the table has one data file, holding three records.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If I run five separate &lt;code&gt;INSERT&lt;/code&gt; s, each of one row, we’ll find we end up adding five data files, for just five records&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;trino&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;data_file_ct&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_count&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_ct&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;&amp;#34;customers$files&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;data_file_ct&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_ct&lt;/span&gt;
&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;--------------+-----------&lt;/span&gt;
           &lt;span style=&#34;color: #ae81ff&#34;&gt;6&lt;/span&gt;  &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;8&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;row&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;These small files can cause challenges in several aspects, including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Performance overhead of metadata management&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Object store access request costs (more files == more requests)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To address these problems Iceberg has several housekeeping functions.
As with the rollback procedure above, not all engines provide them.
In Iceberg, Spark usually has the &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/spark-procedures/&#34;&gt;best support&lt;/a&gt;, and that’s the case here.
Trino provides &lt;a href=&#34;https://trino.io/docs/current/connector/iceberg.html#optimize&#34;&gt;capabilities&lt;/a&gt; in this area too.
Flink has a &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/flink-actions/#rewrite-files-action&#34;&gt;&lt;code&gt;RewriteDataFilesAction&lt;/code&gt;&lt;/a&gt; but this isn’t exposed in Flink SQL.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_combining_data_files_into_fewer_data_files&#34;&gt;Combining data files into fewer data files&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Trino provides &lt;a href=&#34;https://trino.io/docs/current/connector/iceberg.html#optimize&#34;&gt;&lt;code&gt;ALTER TABLE…EXECUTE optimize&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;trino&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;EXECUTE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;optimize&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;trino&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;data_file_ct&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_count&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_ct&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;&amp;#34;customers$files&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;data_file_ct&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_ct&lt;/span&gt;
&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;--------------+-----------&lt;/span&gt;
            &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;         &lt;span style=&#34;color: #ae81ff&#34;&gt;8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that the data file count is now one, whilst the record count is still eight.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ll add a few more small files:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;trino&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;data_file_ct&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_count&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_ct&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;&amp;#34;customers$files&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
 &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;data_file_ct&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_ct&lt;/span&gt;
&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;--------------+-----------&lt;/span&gt;
            &lt;span style=&#34;color: #ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;13&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and then use Spark’s &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/spark-procedures/#rewrite_data_files&#34;&gt;&lt;code&gt;rewrite_data_files&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CALL&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;polaris&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;system&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rewrite_data_files&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;rmoff.customers&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;options&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;map&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;rewrite-all&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 25%;&#34;/&gt;
&lt;col style=&#34;width: 25%;&#34;/&gt;
&lt;col style=&#34;width: 25%;&#34;/&gt;
&lt;col style=&#34;width: 25%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;rewritten_data_files_count&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;added_data_files_count&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;rewritten_bytes_count&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;failed_data_files_count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;6&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;1&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;7757&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;0&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;data_file_ct&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_count&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;record_ct&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;polaris&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;files&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all stretch&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 50%;&#34;/&gt;
&lt;col style=&#34;width: 50%;&#34;/&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;data_file_ct&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;record_ct&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;1&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;13&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_expiring_snapshots&#34;&gt;Expiring snapshots&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Being able to roll back a table’s state, or query it at a particular point in time, is rather useful—but do you need &lt;em&gt;all&lt;/em&gt; of those snapshots?
A snapshot is created for each change to the table meaning that you can end up with rather a lot of them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To clean up snapshots you can use &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/spark-procedures/#expire_snapshots&#34;&gt;&lt;code&gt;expire_snapshots&lt;/code&gt;&lt;/a&gt; (Spark) or &lt;a href=&#34;https://trino.io/docs/current/connector/iceberg.html#expire-snapshots&#34;&gt;&lt;code&gt;ALTER TABLE … EXECUTE expire_snapshots&lt;/code&gt;&lt;/a&gt; (Trino):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;trino&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;&amp;#34;customers$snapshots&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;committed_at&lt;/span&gt;         &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;snapshot_id&lt;/span&gt;     &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;parent_id&lt;/span&gt;      &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;operation&lt;/span&gt;
&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;-----------------------------+---------------------+---------------------+-----------&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;531&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2403840741999442414&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;                &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;append&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;926&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3830932525036690208&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2403840741999442414&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;append&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;916&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;6409867327989167022&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;3830932525036690208&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;append&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;921&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;325546929694535411&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;6409867327989167022&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;append&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;41&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;808&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;269825382665437490&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;325546929694535411&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;append&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;757&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;129306070246549703&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;269825382665437490&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;append&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;290&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;8861050211953882166&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;129306070246549703&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;replace&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;828&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2371922233042001406&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;8861050211953882166&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;append&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;08&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;031&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;5882833294520864762&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2371922233042001406&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;append&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;08&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;230&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2961764211154500616&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;5882833294520864762&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;append&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;08&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;407&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;6373025590410861521&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2961764211154500616&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;append&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;08&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;600&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2039216781855207414&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;6373025590410861521&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;append&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;232&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;4056286565502898119&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2039216781855207414&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;replace&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;trino&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SESSION&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;iceberg&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;expire_snapshots_min_retention&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;30s&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;trino&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;EXECUTE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;expire_snapshots&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;retention_threshold&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;60 s&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;trino&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;&amp;#34;customers$snapshots&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;committed_at&lt;/span&gt;         &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;snapshot_id&lt;/span&gt;     &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;parent_id&lt;/span&gt;      &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;operation&lt;/span&gt;
&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;-----------------------------+---------------------+---------------------+-----------&lt;/span&gt;
 &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;232&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;UTC&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;4056286565502898119&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2039216781855207414&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;replace&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_other_table_maintenance_options&#34;&gt;Other table maintenance options&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_apache_amoro&#34;&gt;Apache Amoro&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://amoro.apache.org/&#34;&gt;Apache Amoro&lt;/a&gt; (incubating) is a new project that offers an Iceberg catalog with &lt;a href=&#34;https://amoro.apache.org//quick-start/#check-self-optimizing&#34;&gt;built-in optimisation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_aws&#34;&gt;AWS&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables.html&#34;&gt;S3 Tables&lt;/a&gt; supports &lt;a href=&#34;https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-maintenance.html&#34;&gt;built-in table maintenance&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/glue/latest/dg/populate-otf.html&#34;&gt;AWS Glue Data Catalog&lt;/a&gt; provides &lt;a href=&#34;https://docs.aws.amazon.com/glue/latest/dg/enable-compaction.html&#34;&gt;compaction&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_nimtable&#34;&gt;Nimtable&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/nimtable/nimtable&#34;&gt;Nimtable&lt;/a&gt; is an Apache 2.0 licensed project that was released around June this year.
It offers table compaction as part of its offering as a &amp;#34;Control Plane for Apache Iceberg&amp;#34;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once you’ve connected it to an existing catalog (such as Polaris) it shows you the contents of the catalog:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/2025-07-15T14-13-38-360Z.png&#34; alt=&#34;2025 07 15T14 13 38 360Z&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It analyses the tables (presumably using similar heuristics as described above) to identify if they need optimising, and provides details of its analysis too:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/2025-07-15T14-15-56-975Z.png&#34; alt=&#34;2025 07 15T14 15 56 975Z&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There’s also the obligatory &lt;del&gt;magic fairy dust&lt;/del&gt; AI sprinkled onto it which puts the analysis into words.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As well as the textual analysis there’s a nice visualisation showing the rate of growth over time, broken down by type of change (insert/update/delete)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/2025-07-15T14-18-23-597Z.png&#34; alt=&#34;2025 07 15T14 18 23 597Z&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For tables that do need optimising you can run a one-off job, or set it to run on a schedule&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/2025-07-15T14-18-47-488Z.png&#34; alt=&#34;2025 07 15T14 18 47 488Z&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Finally, it also includes a SQL editor which is a nice touch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/2025-07-15T14-24-19-915Z.png&#34; alt=&#34;2025 07 15T14 24 19 915Z&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ve only had a quick poke around, but the UI is nice and the analysis definitely useful to have.
And whilst I’ve not tried it, if it behaves as claimed, the automatic optimisation could be a really nice tool if you’re self-managing your Iceberg files.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_further_reading&#34;&gt;Further reading&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tabular.io/apache-iceberg-cookbook/data-operations-compaction/&#34;&gt;File compaction - Tabular&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.to/thedanicafine/the-apache-iceberg-small-file-problem-1k2m&#34;&gt;The Apache Iceberg™ Small File Problem - Danica Fine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.dremio.com/blog/compaction-in-apache-iceberg-fine-tuning-your-iceberg-tables-data-files/&#34;&gt;Compaction in Apache Iceberg: Fine-Tuning Your Iceberg Table’s Data Files - Alex Merced&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/ancestry-product-and-technology/solving-the-small-file-problem-in-iceberg-tables-6c31a295f724&#34;&gt;Solving the Small File Problem in Iceberg Tables - Thomas Cardenas&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.oreilly.com/library/view/apache-iceberg-the/9781098148614/ch04.html&#34;&gt;Apache Iceberg: The Definitive Guide - Chapter 4. Optimizing the Performance of Iceberg Tables&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.starburst.io/blog/apache-iceberg-files/&#34;&gt;The file explosion problem in Apache Iceberg and what to do when it happens to you - Daniel Abadi&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Writing to Apache Iceberg on S3 using Kafka Connect with Glue catalog</title>
      <link>https://rmoff.net/2025/07/04/writing-to-apache-iceberg-on-s3-using-kafka-connect-with-glue-catalog/</link>
      <pubDate>2025-07-04</pubDate>
      
      <guid>https://rmoff.net/2025/07/04/writing-to-apache-iceberg-on-s3-using-kafka-connect-with-glue-catalog/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/07/t_IMG_0587.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Without wanting to mix my temperature metaphors, Iceberg is the new hawtness, and getting data into it from other places is a common task.
I &lt;a href=&#34;https://rmoff.net/2025/06/24/writing-to-apache-iceberg-on-s3-using-flink-sql-with-glue-catalog/&#34;&gt;wrote previously about using Flink SQL to do this&lt;/a&gt;, and today I’m going to look at doing the same using Kafka Connect.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Kafka Connect can send data to Iceberg from any Kafka topic.
The source Kafka topic(s) can be populated by a Kafka Connect source connector (such as Debezium), or a regular application producing directly to it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/kc.excalidraw.png&#34; alt=&#34;kc.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’m going to use AWS’s Glue Data Catalog, but the sink also works with other Iceberg catalogs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
You can find the Docker Compose for this article &lt;a href=&#34;https://github.com/rmoff/examples/tree/main/iceberg/kafka-kafkaconnect-aws&#34;&gt;here&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_kafka_connect_and_the_iceberg_sink_connector&#34;&gt;Kafka Connect and the Iceberg Sink Connector&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Kafka Connect is a framework for data integration, and is part of Apache Kafka.
There is a rich ecosystem of connectors for getting data in and out of Kafka, and Kafka Connect itself provides a set of features that you’d expect for a resilient data integration platform, including scaling, schema handling, restarts, serialisation, and more.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The Apache Iceberg connector for Kafka Connect was &lt;a href=&#34;https://www.tabular.io/blog/intro-kafka-connect/&#34;&gt;originally created by folk at Tabular&lt;/a&gt; and has subsequently been &lt;a href=&#34;https://github.com/apache/iceberg/pull/8701#issue-1922301136&#34;&gt;contributed to&lt;/a&gt; &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/kafka-connect/&#34;&gt;the Apache Iceberg project&lt;/a&gt; (via a brief stint on &lt;a href=&#34;https://github.com/databricks/iceberg-kafka-connect&#34;&gt;a Databricks repo&lt;/a&gt; following the Tabular acquisition).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For the purposes of this blog I’m still using the Tabular version since it has a pre-built binary available on &lt;a href=&#34;https://www.confluent.io/hub/tabular/iceberg-kafka-connect&#34;&gt;Confluent Hub&lt;/a&gt; which makes it easier to install.
If you want to use the Apache Iceberg version you currently &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/kafka-connect/#installation&#34;&gt;need to build the connector yourself&lt;/a&gt;.
There is &lt;a href=&#34;https://github.com/apache/iceberg/issues/10745&#34;&gt;work underway&lt;/a&gt; to make it available on Confluent Hub.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’m running a &lt;a href=&#34;https://hub.docker.com/r/confluentinc/cp-kafka-connect&#34;&gt;Kafka Connect Docker image&lt;/a&gt; provided by Confluent because it provides the &lt;a href=&#34;https://docs.confluent.io/platform/7.5/connect/confluent-hub/client.html#install-components-with-c-hub-client&#34;&gt;&lt;code&gt;confluent-hub&lt;/code&gt; CLI tool&lt;/a&gt; which is a handy way for installing pre-built connectors and saves me having to do it myself.
It’s worth noting that the &lt;code&gt;confluent-hub&lt;/code&gt; CLI is being deprecated in favour of the broader &lt;code&gt;confluent&lt;/code&gt; CLI tool and &lt;code&gt;confluent connect plugin install&lt;/code&gt; to install connectors.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;confluent-hub &lt;span style=&#34;color: #f8f8f2&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;--no-prompt&lt;/span&gt; tabular/iceberg-kafka-connect:0.6.19&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you’re using Docker you can bake this in at runtime &lt;a href=&#34;https://github.com/confluentinc/demo-scene/blob/master/connect-cluster/docker-compose-scenario02.yml#L97-L107&#34;&gt;like this&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s check that the connector is installed.
We can use the Kafka Connect REST API for this and the &lt;code&gt;/connector-plugins&lt;/code&gt; endpoint:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;curl &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; localhost:8083/connector-plugins|jq &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;.[].class&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;org.apache.kafka.connect.mirror.MirrorCheckpointConnector&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;org.apache.kafka.connect.mirror.MirrorHeartbeatConnector&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;org.apache.kafka.connect.mirror.MirrorSourceConnector&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;(Note that it’s &lt;code&gt;io.tabular&lt;/code&gt; and not &lt;code&gt;org.apache&lt;/code&gt;, since we’re using the Tabular version of the connector for now).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_kcctl&#34;&gt;kcctl 🧸&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;REST APIs are all very well, but a nicer way of managing Kafka Connect is &lt;a href=&#34;https://github.com/kcctl/kcctl&#34;&gt;&lt;strong&gt;kcctl&lt;/strong&gt;&lt;/a&gt;.
This is a CLI client built for Kafka Connect.
On the Mac it’s a simple install from Brew: &lt;code&gt;brew install kcctl/tap/kcctl&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once you’ve installed kcctl, configure it to point to the Kafka Connect worker cluster:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl config set-context &lt;span style=&#34;color: #f8f8f2&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;--cluster&lt;/span&gt; http://localhost:8083&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we can easily inspect the cluster:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl info
URL:               http://localhost:8083
Version:           8.0.0-ccs
Commit:            42dc8a94fe8a158bfc3241b5a93a1adde9973507
Kafka Cluster ID:  5L6g3nShT-eMCtK--X86sw&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can also look at the sink connectors installed (which is a subset of those shown above):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl get plugins &lt;span style=&#34;color: #f92672&#34;&gt;--types&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;sink

 TYPE   CLASS                                             VERSION
 sink   io.tabular.iceberg.connect.IcebergSinkConnector   1.5.2-kc-0.6.19&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_11_sending_data_from_one_kafka_topic_to_an_iceberg_table&#34;&gt;1:1 (Sending data from one Kafka topic to an Iceberg table)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/kc11.excalidraw.png&#34; alt=&#34;kc11.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We’ll start by looking at the most simple example, sending data from a Kafka topic to a table in Iceberg.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’m going to populate a Kafka topic with some dummy data.
I’m using JSON to serialise it; bear in mind that an explicitly-declared schema stored in a Schema Registry and the data serialised with something like Avro is often a better approach.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;{&amp;#34;order_id&amp;#34;: &amp;#34;001&amp;#34;, &amp;#34;customer_id&amp;#34;: &amp;#34;cust_123&amp;#34;, &amp;#34;product&amp;#34;: &amp;#34;laptop&amp;#34;, &amp;#34;quantity&amp;#34;: 1, &amp;#34;price&amp;#34;: 999.99}
{&amp;#34;order_id&amp;#34;: &amp;#34;002&amp;#34;, &amp;#34;customer_id&amp;#34;: &amp;#34;cust_456&amp;#34;, &amp;#34;product&amp;#34;: &amp;#34;mouse&amp;#34;, &amp;#34;quantity&amp;#34;: 2, &amp;#34;price&amp;#34;: 25.50}
{&amp;#34;order_id&amp;#34;: &amp;#34;003&amp;#34;, &amp;#34;customer_id&amp;#34;: &amp;#34;cust_789&amp;#34;, &amp;#34;product&amp;#34;: &amp;#34;keyboard&amp;#34;, &amp;#34;quantity&amp;#34;: 1, &amp;#34;price&amp;#34;: 75.00}
{&amp;#34;order_id&amp;#34;: &amp;#34;004&amp;#34;, &amp;#34;customer_id&amp;#34;: &amp;#34;cust_321&amp;#34;, &amp;#34;product&amp;#34;: &amp;#34;monitor&amp;#34;, &amp;#34;quantity&amp;#34;: 1, &amp;#34;price&amp;#34;: 299.99}
{&amp;#34;order_id&amp;#34;: &amp;#34;005&amp;#34;, &amp;#34;customer_id&amp;#34;: &amp;#34;cust_654&amp;#34;, &amp;#34;product&amp;#34;: &amp;#34;headphones&amp;#34;, &amp;#34;quantity&amp;#34;: 1, &amp;#34;price&amp;#34;: 149.99}&amp;#39;&lt;/span&gt; | docker compose &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-T&lt;/span&gt; kcat kcat &lt;span style=&#34;color: #f92672&#34;&gt;-P&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-b&lt;/span&gt; broker:9092 &lt;span style=&#34;color: #f92672&#34;&gt;-t&lt;/span&gt; orders&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_configuring_the_apache_iceberg_kafka_connect_sink&#34;&gt;Configuring the Apache Iceberg Kafka Connect sink&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now let’s instantiate our Iceberg sink.
The &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/kafka-connect/#initial-setup&#34;&gt;docs&lt;/a&gt; are pretty good, and include details of how to use different catalogs.
I’m going to configure the sink thus:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Read messages from the &lt;code&gt;orders&lt;/code&gt; topic&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Write them to the Iceberg table &lt;code&gt;foo.kc.orders&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the AWS Glue Data Catalog to store metadata&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I’ve passed my local AWS credentials as environment variables to the Kafka Connect docker container.
This is not a secure way of doing things, but suffices plenty for these sandbox testing purposes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Store the Iceberg files on S3 in the &lt;code&gt;rmoff-lakehouse&lt;/code&gt; bucket under the &lt;code&gt;/01&lt;/code&gt; path&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using kcctl it looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-kc_orders&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics&amp;#34;: &amp;#34;orders&amp;#34;,
    &amp;#34;iceberg.tables&amp;#34;: &amp;#34;foo.kc.orders&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/01/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Check if it worked:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl get connectors

 NAME                     TYPE   STATE     TASKS
 iceberg-sink-kc_orders   sink   RUNNING   0: FAILED

&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl describe connector iceberg-sink-kc_orders
Name:       iceberg-sink-kc_orders
Type:       sink
State:      RUNNING
Worker ID:  kafka-connect:8083
Config:
  connector.class:               io.tabular.iceberg.connect.IcebergSinkConnector
  iceberg.catalog.catalog-impl:  org.apache.iceberg.aws.glue.GlueCatalog
  iceberg.catalog.io-impl:       org.apache.iceberg.aws.s3.S3FileIO
  iceberg.catalog.warehouse:     s3://rmoff-lakehouse/00/
  iceberg.tables:                foo.kc.orders
  name:                          iceberg-sink-kc_orders
  topics:                        orders
Tasks:
  0:
    State:      FAILED
    Worker ID:  kafka-connect:8083
    Trace:      org.apache.kafka.connect.errors.ConnectException: Tolerance exceeded &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in &lt;/span&gt;error handler
        at
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
      Caused by: org.apache.kafka.connect.errors.DataException: JsonConverter with schemas.enable requires &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;schema&amp;#34;&lt;/span&gt; and &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;payload&amp;#34;&lt;/span&gt; fields and may not contain additional fields. If you are trying to deserialize plain JSON data, &lt;span style=&#34;color: #f8f8f2&#34;&gt;set &lt;/span&gt;schemas.enable&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;false &lt;/span&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in &lt;/span&gt;your converter configuration.
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, no dice on the first attempt.
(Note also the confusing fact that the &lt;em&gt;connector&lt;/em&gt; has a state of &lt;code&gt;RUNNING&lt;/code&gt; whilst the &lt;em&gt;task&lt;/em&gt; is &lt;code&gt;FAILED&lt;/code&gt;—this is just &lt;em&gt;one of those things&lt;/em&gt; about how Kafka Connect works 🙃).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The error is to do with how Kafka Connect handles deserialising messages from Kafka topics.
It’s reading JSON, but expecting to find &lt;code&gt;schema&lt;/code&gt; and &lt;code&gt;payload&lt;/code&gt; elements within it—and these aren’t there.
&lt;a href=&#34;https://www.confluent.io/blog/kafka-connect-deep-dive-converters-serialization-explained/#json-message-without-expected-schema-payload-structure&#34;&gt;This blog post&lt;/a&gt; explains the issue in more detail.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To fix it we’ll change the connector configuration, which we can do easily with kcctl’s &lt;code&gt;patch&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl patch connector iceberg-sink-kc_orders &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; key.converter&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;org.apache.kafka.connect.json.JsonConverter &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; key.converter.schemas.enable&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;false&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; value.converter&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;org.apache.kafka.connect.json.JsonConverter &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; value.converter.schemas.enable&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Check the connector state again:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl describe connector iceberg-sink-kc_orders
Name:       iceberg-sink-kc_orders
Type:       sink
State:      RUNNING
Worker ID:  kafka-connect:8083
Config:
  connector.class:                 io.tabular.iceberg.connect.IcebergSinkConnector
  iceberg.catalog.catalog-impl:    org.apache.iceberg.aws.glue.GlueCatalog
  iceberg.catalog.io-impl:         org.apache.iceberg.aws.s3.S3FileIO
  iceberg.catalog.warehouse:       s3://rmoff-lakehouse/01/
  iceberg.tables:                  foo.kc.orders
  key.converter:                   org.apache.kafka.connect.json.JsonConverter
  key.converter.schemas.enable:    &lt;span style=&#34;color: #f8f8f2&#34;&gt;false
  &lt;/span&gt;name:                            iceberg-sink-kc_orders
  topics:                          orders
  value.converter:                 org.apache.kafka.connect.json.JsonConverter
  value.converter.schemas.enable:  &lt;span style=&#34;color: #f8f8f2&#34;&gt;false
&lt;/span&gt;Tasks:
  0:
    State:      FAILED
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
      Caused by: org.apache.iceberg.exceptions.NoSuchTableException: Invalid table identifier: foo.kc.orders&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This time the error is entirely self-inflicted.
Hot off my blog post about &lt;a href=&#34;https://rmoff.net/2025/06/24/writing-to-apache-iceberg-on-s3-using-flink-sql-with-glue-catalog/&#34;&gt;doing this in Flink SQL&lt;/a&gt;, I had in my mind that the table needed a three-part qualification; &lt;code&gt;catalog.database.table&lt;/code&gt;.
In fact, we only need to specify &lt;code&gt;database.table&lt;/code&gt;.
In addition I’ve realised that the table doesn’t exist already, and by default the connector won’t automagically create it—so let’s fix that too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl patch connector iceberg-sink-kc_orders &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; iceberg.tables&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;kc.orders &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; iceberg.tables.auto-create-enabled&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We’re getting closer, but not quite there yet:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
    Caused by: software.amazon.awssdk.services.glue.model.EntityNotFoundException: Database kc not found. &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;(&lt;/span&gt;Service: Glue, Status Code: 400, Request ID: 16a25fcf-01be-44e9-ba67-cc71431f3945&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s see what databases we &lt;em&gt;do&lt;/em&gt; have:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;aws glue get-databases &lt;span style=&#34;color: #f92672&#34;&gt;--region&lt;/span&gt; us-east-1 &lt;span style=&#34;color: #f92672&#34;&gt;--query&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;DatabaseList[].Name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;--output&lt;/span&gt; table

+--------------------+
|    GetDatabases    |
+--------------------+
|  default_database  |
|  my_glue_db        |
|  new_glue_db       |
|  rmoff_db          |
+--------------------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, let’s use a database that does exist (&lt;code&gt;rmoff_db&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl patch connector iceberg-sink-kc_orders &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; iceberg.tables&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;rmoff_db.orders&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we’re up and running :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl describe connector iceberg-sink-kc_orders
Name:       iceberg-sink-kc_orders
Type:       sink
State:      RUNNING
Worker ID:  kafka-connect:8083
Config:
  connector.class:                     io.tabular.iceberg.connect.IcebergSinkConnector
  iceberg.catalog.catalog-impl:        org.apache.iceberg.aws.glue.GlueCatalog
  iceberg.catalog.io-impl:             org.apache.iceberg.aws.s3.S3FileIO
  iceberg.catalog.warehouse:           s3://rmoff-lakehouse/01/
  iceberg.tables:                      rmoff_db.orders
  iceberg.tables.auto-create-enabled:  &lt;span style=&#34;color: #f8f8f2&#34;&gt;true
  &lt;/span&gt;key.converter:                       org.apache.kafka.connect.json.JsonConverter
  key.converter.schemas.enable:        &lt;span style=&#34;color: #f8f8f2&#34;&gt;false
  &lt;/span&gt;name:                                iceberg-sink-kc_orders
  topics:                              orders
  value.converter:                     org.apache.kafka.connect.json.JsonConverter
  value.converter.schemas.enable:      &lt;span style=&#34;color: #f8f8f2&#34;&gt;false
&lt;/span&gt;Tasks:
  0:
    State:      RUNNING
    Worker ID:  kafka-connect:8083
Topics:
  orders&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_examining_the_iceberg_table&#34;&gt;Examining the Iceberg table&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we’ll have a look at the Iceberg table.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The table has been registered in the Glue Data Catalog:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;aws glue get-tables &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;--region&lt;/span&gt; us-east-1 &lt;span style=&#34;color: #f92672&#34;&gt;--database-name&lt;/span&gt; rmoff_db &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;--query&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;TableList[].Name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;--output&lt;/span&gt; table

+----------------+
|    GetTables   |
+----------------+
|  orders        |
+----------------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And there’s something in the S3 bucket:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;aws s3 &lt;span style=&#34;color: #f92672&#34;&gt;--recursive&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;ls &lt;/span&gt;s3://rmoff-lakehouse/01
2025-06-30 16:44:39       1320 01/rmoff_db.db/orders/metadata/00000-bcbeeafa-4556-4a52-92ee-5dbc34d35d6b.metadata.json&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;However, this is just the table’s Iceberg metadata—but nothing else.
That’s because Kafka Connect won’t flush the data to storage straight away; by default it’s every 5 minutes.
The configuration that controls this is &lt;code&gt;iceberg.control.commit.interval-ms&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, if we wait long enough, we’ll see some data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;aws s3 &lt;span style=&#34;color: #f92672&#34;&gt;--recursive&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;ls &lt;/span&gt;s3://rmoff-lakehouse/01
2025-06-30 16:51:35       1635 01/rmoff_db.db/orders/data/00001-1751298279338-409ff5c8-244f-4104-8b81-dfe47fcbb2b3-00001.parquet
2025-06-30 16:44:39       1320 01/rmoff_db.db/orders/metadata/00000-bcbeeafa-4556-4a52-92ee-5dbc34d35d6b.metadata.json
2025-06-30 16:55:09       2524 01/rmoff_db.db/orders/metadata/00001-e8341cee-cf17-4255-bcf1-6e87cf41bbf3.metadata.json
2025-06-30 16:55:08       6950 01/rmoff_db.db/orders/metadata/cbe2651d-7c83-4465-a2e1-d92bb3e0b61d-m0.avro
2025-06-30 16:55:09       4233 01/rmoff_db.db/orders/metadata/snap-6069858821353147927-1-cbe2651d-7c83-4465-a2e1-d92bb3e0b61d.avro&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Alternatively we can be impatient (&lt;em&gt;and inefficient, if we were to use this for real as you’d get a ton of small files as a result&lt;/em&gt;) and override it to commit every second:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl patch connector iceberg-sink-kc_orders &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; iceberg.control.commit.interval-ms&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;1000&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now let’s have a look at this data that we’ve written.
The absolute joy of Iceberg is the freedom that it gives you by decoupling storage from engine.
This means that we can write the data with one engine (here, Kafka Connect), and read it from another.
Let’s use DuckDB.
Because, quack.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;DuckDB &lt;a href=&#34;https://duckdb.org/docs/stable/core_extensions/iceberg/amazon_sagemaker_lakehouse.html#connecting-to-amazon-sagemaker-lakehouse&#34;&gt;supports&lt;/a&gt; AWS Glue Data Catalog for Iceberg metadata.
I had &lt;a href=&#34;https://github.com/duckdb/duckdb-iceberg/issues/265#issuecomment-3009061597&#34;&gt;some trouble&lt;/a&gt; with it, but found a &lt;a href=&#34;https://github.com/duckdb/duckdb-iceberg/issues/265#issuecomment-2959813611&#34;&gt;useful workaround&lt;/a&gt; (yay open source).
There’s also a comprehensive &lt;a href=&#34;https://tobilg.com/using-amazon-sagemaker-lakehouse-with-duckdb&#34;&gt;blog post&lt;/a&gt; from Tobias Müller
on how to get it to work with a ton of IAM, ARN, and WTF (I think I made the last one up)—probably useful if you need to get this to work with any semblance of security.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, first we create an &lt;code&gt;S3&lt;/code&gt; secret in DuckDB to provide our AWS credentials, which I’m doing via &lt;a href=&#34;https://duckdb.org/docs/stable/core_extensions/httpfs/s3api.html#credential_chain-provider&#34;&gt;&lt;code&gt;credential_chain&lt;/code&gt;&lt;/a&gt; which will read them from my local environment variables.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;🟡◗&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;SECRET&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;iceberg_secret&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TYPE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;S3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;PROVIDER&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;credential_chain&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then we attach the Glue data catalog as a new database to the DuckDB session.
Here, &lt;code&gt;1234&lt;/code&gt; is my AWS account id (which you can get with &lt;code&gt;aws sts get-caller-identity --query Account&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;🟡◗&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ATTACH&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;1234&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;glue_catalog&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TYPE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;iceberg&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ENDPOINT_TYPE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;glue&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once you’ve done this you should be able to list the table(s) in your Glue Data Catalog:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;-- These are DuckDB databases
🟡◗ SHOW DATABASES;
┌───────────────┐
│ database_name │
│    varchar    │
├───────────────┤
│ glue_catalog  │
│ memory        │
└───────────────┘

🟡◗ SELECT * FROM information_schema.tables
    WHERE table_catalog = &amp;#39;glue_catalog&amp;#39;
      AND table_schema=&amp;#39;rmoff_db&amp;#39;;
┌───────────────┬──────────────┬──────────────────┬────────────┬
│ table_catalog │ table_schema │    table_name    │ table_type │
│    varchar    │   varchar    │     varchar      │  varchar   │
├───────────────┼──────────────┼──────────────────┼────────────┼
│ glue_catalog  │ rmoff_db     │ orders           │ BASE TABLE │
└───────────────┴──────────────┴──────────────────┴────────────┴&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Terminology-wise, a &lt;em&gt;catalog&lt;/em&gt; in AWS Glue Data Catalog is a &lt;em&gt;database&lt;/em&gt; in DuckDB (&lt;code&gt;SHOW DATABASES&lt;/code&gt;), and also a &lt;em&gt;catalog&lt;/em&gt; (&lt;code&gt;table_catalog&lt;/code&gt;).
A Glue &lt;em&gt;database&lt;/em&gt; is a DuckDB &lt;em&gt;schema&lt;/em&gt;.
And a table is a table in both :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s finish this section by checking that the data we wrote to Kafka is indeed in Iceberg.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s the source data read from the Kafka topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;docker compose &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-it&lt;/span&gt; kcat kcat &lt;span style=&#34;color: #f92672&#34;&gt;-b&lt;/span&gt; broker:9092 &lt;span style=&#34;color: #f92672&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-t&lt;/span&gt; orders
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;order_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;001&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;customer_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;cust_123&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;product&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;laptop&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;quantity&amp;#34;&lt;/span&gt;: 1, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: 999.99&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;order_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;002&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;customer_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;cust_456&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;product&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;mouse&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;quantity&amp;#34;&lt;/span&gt;: 2, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: 25.50&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;order_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;003&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;customer_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;cust_789&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;product&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;keyboard&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;quantity&amp;#34;&lt;/span&gt;: 1, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: 75.00&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;order_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;004&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;customer_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;cust_321&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;product&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;monitor&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;quantity&amp;#34;&lt;/span&gt;: 1, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: 299.99&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;order_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;005&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;customer_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;cust_654&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;product&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;headphones&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;quantity&amp;#34;&lt;/span&gt;: 1, &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: 149.99&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and now the Iceberg table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ USE glue_catalog.rmoff_db;
🟡◗ SELECT * FROM orders;
┌────────────┬──────────┬────────┬─────────────┬──────────┐
│  product   │ quantity │ price  │ customer_id │ order_id │
│  varchar   │  int64   │ double │   varchar   │ varchar  │
├────────────┼──────────┼────────┼─────────────┼──────────┤
│ laptop     │        1 │ 999.99 │ cust_123    │ 001      │
│ mouse      │        2 │   25.5 │ cust_456    │ 002      │
│ keyboard   │        1 │   75.0 │ cust_789    │ 003      │
│ monitor    │        1 │ 299.99 │ cust_321    │ 004      │
│ headphones │        1 │ 149.99 │ cust_654    │ 005      │
└────────────┴──────────┴────────┴─────────────┴──────────┘&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Write another row of data to the Kafka topic (&lt;code&gt;order_id&lt;/code&gt;: &lt;code&gt;006&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;{&amp;#34;order_id&amp;#34;: &amp;#34;006&amp;#34;, &amp;#34;customer_id&amp;#34;: &amp;#34;cust_987&amp;#34;, &amp;#34;product&amp;#34;: &amp;#34;webcam&amp;#34;, &amp;#34;quantity&amp;#34;: 1, &amp;#34;price&amp;#34;: 89.99}&amp;#39;&lt;/span&gt; | docker compose &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-T&lt;/span&gt; kcat kcat &lt;span style=&#34;color: #f92672&#34;&gt;-P&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-b&lt;/span&gt; broker:9092 &lt;span style=&#34;color: #f92672&#34;&gt;-t&lt;/span&gt; orders&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now wait a second (or whatever &lt;code&gt;iceberg.control.commit.interval-ms&lt;/code&gt; is set to), and check the Iceberg table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ SELECT * FROM orders;
┌────────────┬──────────┬────────┬─────────────┬──────────┐
│  product   │ quantity │ price  │ customer_id │ order_id │
│  varchar   │  int64   │ double │   varchar   │ varchar  │
├────────────┼──────────┼────────┼─────────────┼──────────┤
│ webcam     │        1 │  89.99 │ cust_987    │ 006      │ &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
│ laptop     │        1 │ 999.99 │ cust_123    │ 001      │
│ mouse      │        2 │   25.5 │ cust_456    │ 002      │
│ keyboard   │        1 │   75.0 │ cust_789    │ 003      │
│ monitor    │        1 │ 299.99 │ cust_321    │ 004      │
│ headphones │        1 │ 149.99 │ cust_654    │ 005      │
└────────────┴──────────┴────────┴─────────────┴──────────┘&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The new row of data 🎉&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_schemas&#34;&gt;Schemas&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now that we’ve got the basic connection between Kafka and Iceberg using Kafka Connect working, let’s look at it in a bit more detail.
The first thing that warrants a bit of attention is the schema of the data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s the first record of data from our Kafka topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;order_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;001&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;customer_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;cust_123&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;product&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;laptop&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;quantity&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;price&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;999.99&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Eyeballing it, you and I can probably guess at the data types of the schema.
Quantity is an integer, probably.
Price, a decimal (unless you don’t realise it’s a currency and guess that it’s a float or double).
Product is obviously a character field.
What about the order ID though?
It looks numeric, but has leading zeros; so a character field also?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;My point is, there is no &lt;strong&gt;declared schema&lt;/strong&gt;, only an inferred one.
What does it look like written to Iceberg?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;aws glue get-table &lt;span style=&#34;color: #f92672&#34;&gt;--region&lt;/span&gt; us-east-1 &lt;span style=&#34;color: #f92672&#34;&gt;--database-name&lt;/span&gt; rmoff_db &lt;span style=&#34;color: #f92672&#34;&gt;--name&lt;/span&gt; orders &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;--query&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Table.StorageDescriptor.Columns[].{Name:Name,Type:Type}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;--output&lt;/span&gt; table

+--------------+----------+
|        GetTable         |
+--------------+----------+
|     Name     |  Type    |
+--------------+----------+
|  product     |  string  |
|  quantity    |  bigint  |
|  price       |  double  |
|  customer_id |  string  |
|  order_id    |  string  |
+--------------+----------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Not bad—only the &lt;code&gt;price&lt;/code&gt; being stored as a &lt;code&gt;DOUBLE&lt;/code&gt; is wrong.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What about if we were to use a timestamp in the source data?
And a boolean?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s a new dataset in a Kafka topic.
It’s roughly based on click behaviour.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;click_ts&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;2023-02-01T14:30:25Z&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ad_cost&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1.50&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;is_conversion&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;001234567890&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using the same Kafka Connect approach as above:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-kc_clicks&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics&amp;#34;: &amp;#34;clicks&amp;#34;,
    &amp;#34;iceberg.tables&amp;#34;: &amp;#34;rmoff_db.clicks&amp;#34;,
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/01/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;key.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;key.converter.schemas.enable&amp;#34;: &amp;#34;false&amp;#34;,
    &amp;#34;value.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;value.converter.schemas.enable&amp;#34;: &amp;#34;false&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;it ends up like this in Iceberg:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;❯ aws glue get-table &lt;span style=&#34;color: #f92672&#34;&gt;--region&lt;/span&gt; us-east-1 &lt;span style=&#34;color: #f92672&#34;&gt;--database-name&lt;/span&gt; rmoff_db &lt;span style=&#34;color: #f92672&#34;&gt;--name&lt;/span&gt; clicks&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;--query&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Table.StorageDescriptor.Columns[].{Name:Name,Type:Type}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;--output&lt;/span&gt; table

+----------------+----------+
|         GetTable          |
+----------------+----------+
|      Name      |  Type    |
+----------------+----------+
|  click_ts      |  string  |
|  ad_cost       |  string  |
|  user_id       |  string  |
|  is_conversion |  string  |
+----------------+----------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here we start to see the real flaw if we just rely on inferred schemas.
Holding a currency as a string?
&lt;a href=&#34;https://www.destroyallsoftware.com/talks/wat&#34;&gt;Wat&lt;/a&gt;.
Storing a timestamp as a string?
Gross.
Using a string to hold a boolean?
Fine, until someone decides to put a value other than &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; in it. Or &lt;code&gt;True&lt;/code&gt;. Or &lt;code&gt;TRuE&lt;/code&gt;. And so on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Data types exist for a reason, and part of good data pipeline hygiene is making use of them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_enough_of_the_lecturinghow_do_i_use_an_explicit_schema_with_kafka_connect&#34;&gt;Enough of the lecturing…How do I use an explicit schema with Kafka Connect?&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One option (but not one I’d recommend) is &lt;a href=&#34;https://www.confluent.io/blog/kafka-connect-deep-dive-converters-serialization-explained/#json-schemas&#34;&gt;embedding the schema directly in the message&lt;/a&gt;.
This is actually what the &lt;code&gt;JsonConverter&lt;/code&gt; was defaulting to in the first example above and through an error because we’d not done it.
Here’s what the above &lt;code&gt;clicks&lt;/code&gt; record looks like with embedded schema:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;struct&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;field&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;click_ts&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;int64&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;org.apache.kafka.connect.data.Timestamp&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;optional&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;false&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;field&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ad_cost&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;org.apache.kafka.connect.data.Decimal&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;parameters&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;scale&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;optional&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;false&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;field&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;is_conversion&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;boolean&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;optional&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;false&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;field&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;optional&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;false&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;payload&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;click_ts&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1675258225000&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ad_cost&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;1.50&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;is_conversion&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;001234567890&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Even though our Kafka Connect worker is defaulting to using it, I’m going to explicitly configure &lt;code&gt;schemas.enable&lt;/code&gt; just for clarity:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-kc_clicks_schema&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics&amp;#34;: &amp;#34;clicks_with_schema&amp;#34;,
    &amp;#34;iceberg.tables&amp;#34;: &amp;#34;rmoff_db.clicks_embedded_schema&amp;#34;,
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/01/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;key.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;key.converter.schemas.enable&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;value.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;value.converter.schemas.enable&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The first time I try it, it fails:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;org.apache.kafka.connect.errors.DataException: Invalid bytes &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;for &lt;/span&gt;Decimal field
com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot access contents of TextNode as binary due to broken Base64 encoding: Illegal character &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;(&lt;/span&gt;code 0x2e&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;base64 &lt;/span&gt;content&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That’s because the &lt;code&gt;ad_cost&lt;/code&gt; field is defined as a logical &lt;code&gt;Decimal&lt;/code&gt; type, but physically stored as &lt;code&gt;bytes&lt;/code&gt;, so I need to write it as that in the topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;payload&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;click_ts&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1675258225000&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ad_cost&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;AJY=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;is_conversion&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;001234567890&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Where on earth do I get &lt;code&gt;AJY=&lt;/code&gt; from?
I’ll let &lt;a href=&#34;https://claude.ai/&#34;&gt;Claude&lt;/a&gt; explain:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For decimal 1.50 with scale 2, we need to ensure proper signed integer encoding:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Unscale&lt;/strong&gt;: 1.50 × 10² = 150&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Convert to signed bytes&lt;/strong&gt;: 150 as a positive integer needs to be encoded as &lt;code&gt;[0, 150]&lt;/code&gt; (2 bytes) or use proper big-endian encoding&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Base64 encode&lt;/strong&gt;: The bytes &lt;code&gt;[0, 150]&lt;/code&gt; encode to &lt;code&gt;&amp;#34;AJY=&amp;#34;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the connector restarted reading from a fresh topic with this newly-encoded decimal value in it, things look good in Iceberg:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ SELECT * FROM clicks_embedded_schema;
┌──────────────────────────┬───────────────┬───────────────┬──────────────┐
│         click_ts         │    ad_cost    │ is_conversion │   user_id    │
│ timestamp with time zone │ decimal(38,2) │    boolean    │   varchar    │
├──────────────────────────┼───────────────┼───────────────┼──────────────┤
│ 2023-02-01 13:30:25+00   │          1.50 │ true          │ 001234567890 │ &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Proper data types, yay!&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;BUT&lt;/strong&gt;…this is a pretty heavy way of doing things.
Bytes might be cheap, but do we really want to spend over 80% of the message on sending the full schema definition with &lt;em&gt;every single record&lt;/em&gt;?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is where a Schema Registry comes in.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_schema_registry&#34;&gt;Schema Registry&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A schema registry is basically what it says on the tin.
A registry, of schemas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Instead of passing the full schema each time (like above), a client will have a &lt;em&gt;reference&lt;/em&gt; to the schema in the message, and then retrieve the actual schema from the registry.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/sr.excalidraw.png&#34; alt=&#34;sr.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The most well known of the schema registries in the Kafka ecosystem is Confluent’s &lt;a href=&#34;https://github.com/confluentinc/schema-registry&#34;&gt;Schema Registry&lt;/a&gt;.
I’ll show you shortly how it is used automatically within a pipeline, but first I’m going to demonstrate its &amp;#34;manual&amp;#34; use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are multiple serialisation options available, including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Avro&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Protobuf&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSONSchema&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’m going to demonstrate Avro here.
A schema for the &lt;code&gt;clicks&lt;/code&gt; data above looks something like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;record&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ClickEvent&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;click_ts&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;long&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;logicalType&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;timestamp-millis&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ad_cost&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;logicalType&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;decimal&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;precision&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;scale&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;is_conversion&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;boolean&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Send this to Schema Registry using the REST API:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;http POST localhost:8081/subjects/clicks-value/versions &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
  Content-Type:application/vnd.schemaregistry.v1+json &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;{&amp;#34;type&amp;#34;:&amp;#34;record&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;ClickEvent&amp;#34;,&amp;#34;fields&amp;#34;:[{&amp;#34;name&amp;#34;:&amp;#34;click_ts&amp;#34;,&amp;#34;type&amp;#34;:{&amp;#34;type&amp;#34;:&amp;#34;long&amp;#34;,&amp;#34;logicalType&amp;#34;:&amp;#34;timestamp-millis&amp;#34;}},{&amp;#34;name&amp;#34;:&amp;#34;ad_cost&amp;#34;,&amp;#34;type&amp;#34;:{&amp;#34;type&amp;#34;:&amp;#34;bytes&amp;#34;,&amp;#34;logicalType&amp;#34;:&amp;#34;decimal&amp;#34;,&amp;#34;precision&amp;#34;:10,&amp;#34;scale&amp;#34;:2}},{&amp;#34;name&amp;#34;:&amp;#34;is_conversion&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;boolean&amp;#34;},{&amp;#34;name&amp;#34;:&amp;#34;user_id&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;string&amp;#34;}]}&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This will return the ID that the schema has been assigned.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now send the message to Kafka, specifying &lt;code&gt;value.schema.id&lt;/code&gt; as the schema ID returned in the step above:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;{&amp;#34;click_ts&amp;#34;: 1675258225000, &amp;#34;ad_cost&amp;#34;: &amp;#34;1.50&amp;#34;, &amp;#34;is_conversion&amp;#34;: true, &amp;#34;user_id&amp;#34;: &amp;#34;001234567890&amp;#34;}\n&amp;#39;&lt;/span&gt; | &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    docker compose &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-T&lt;/span&gt; kafka-connect kafka-avro-console-producer &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
                        &lt;span style=&#34;color: #f92672&#34;&gt;--bootstrap-server&lt;/span&gt; broker:9092 &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
                        &lt;span style=&#34;color: #f92672&#34;&gt;--topic&lt;/span&gt; clicks_registry &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
                        &lt;span style=&#34;color: #f92672&#34;&gt;--property&lt;/span&gt; schema.registry.url&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;http://schema-registry:8081 &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
                        &lt;span style=&#34;color: #f92672&#34;&gt;--property&lt;/span&gt; value.schema.id&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What we now have is a Kafka topic with a message that holds &lt;em&gt;just&lt;/em&gt; the payload plus a &lt;em&gt;pointer&lt;/em&gt; to the schema.
It’s the best of both worlds; a small message footprint, but a fully-defined schema available for any consumer to use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;An Avro-serialised message is smaller than a JSON one holding the same data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;# Count the bytes in Avro message&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;docker compose &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-T&lt;/span&gt; kcat kcat &lt;span style=&#34;color: #f92672&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-b&lt;/span&gt; broker:9092 &lt;span style=&#34;color: #f92672&#34;&gt;-t&lt;/span&gt; clicks_registry &lt;span style=&#34;color: #f92672&#34;&gt;-c1&lt;/span&gt; | &lt;span style=&#34;color: #f8f8f2&#34;&gt;wc&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-c&lt;/span&gt;
31

&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;# Count the bytes in JSON message&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;docker compose &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-T&lt;/span&gt; kcat kcat &lt;span style=&#34;color: #f92672&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-b&lt;/span&gt; broker:9092 &lt;span style=&#34;color: #f92672&#34;&gt;-t&lt;/span&gt; clicks &lt;span style=&#34;color: #f92672&#34;&gt;-c1&lt;/span&gt; | &lt;span style=&#34;color: #f8f8f2&#34;&gt;wc&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-c&lt;/span&gt;
108&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s finish off by sending this Avro data over to Iceberg:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-clicks-registry&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics&amp;#34;: &amp;#34;clicks_registry&amp;#34;,
    &amp;#34;iceberg.tables&amp;#34;: &amp;#34;rmoff_db.clicks_schema_registry&amp;#34;,
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/01/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;key.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;key.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;value.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;value.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The data lands in Iceberg with its data types looking good:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ SELECT * FROM clicks_schema_registry;
┌──────────────────────────┬───────────────┬───────────────┬──────────────┐
│         click_ts         │    ad_cost    │ is_conversion │   user_id    │
│ timestamp with time zone │ decimal(38,2) │    boolean    │   varchar    │
├──────────────────────────┼───────────────┼───────────────┼──────────────┤
│ 2023-02-01 13:30:25+00   │    8251118.56 │ true          │ 001234567890 │&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But…what’s this?
For some reason &lt;code&gt;ad_cost&lt;/code&gt; is &lt;code&gt;8251118.56&lt;/code&gt; even though the source data was &lt;code&gt;1.50&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Decimals…again&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Similar to the &lt;code&gt;Decimal&lt;/code&gt; issue above when I embedded the schema in a JSON message, providing a decimal value in Avro also requires special attention.
In this case it’s the Kafka producer that I’m using that needs to be persuaded to serialise it correctly.
This time I’ll let Gemini explain:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To represent the decimal &lt;code&gt;1.50&lt;/code&gt; for a &lt;code&gt;bytes&lt;/code&gt; field with a &lt;code&gt;Decimal&lt;/code&gt; logical type and a scale of 2, you must provide the value as &lt;code&gt;{&amp;#34;ad_cost&amp;#34;: &amp;#34;\\u0000\\u0096&amp;#34;}&lt;/code&gt;. Here’s why:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Unscaled Integer&lt;/strong&gt;: The &lt;code&gt;Decimal&lt;/code&gt; logical type is stored as a raw &lt;code&gt;bytes&lt;/code&gt; array representing an unscaled integer. For a value of &lt;code&gt;1.50&lt;/code&gt; and a &lt;code&gt;scale&lt;/code&gt; of &lt;code&gt;2&lt;/code&gt;, the unscaled integer is &lt;code&gt;1.50 * 10^2 = 150&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Signed Bytes&lt;/strong&gt;: Avro’s decimal representation uses signed, big-endian bytes. The integer &lt;code&gt;150&lt;/code&gt; is &lt;code&gt;0x96&lt;/code&gt; in hexadecimal. However, a single byte &lt;code&gt;0x96&lt;/code&gt; has its most significant bit set, causing it to be interpreted as a negative number in two’s complement.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Positive Number Padding&lt;/strong&gt;: To ensure the number is treated as positive &lt;code&gt;150&lt;/code&gt;, a &lt;code&gt;0x00&lt;/code&gt; padding byte must be prepended, resulting in the two-byte sequence &lt;code&gt;[0x00, 0x96]&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;JSON String Encoding&lt;/strong&gt;: The &lt;code&gt;kafka-avro-console-producer&lt;/code&gt; requires this byte sequence to be provided as a JSON string using unicode escapes, which is &lt;code&gt;&amp;#34;\u0000\u0096&amp;#34;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Shell Escaping&lt;/strong&gt;: Your shell will interpret and consume the single backslashes. To pass the literal escape sequences to the producer’s JSON parser, you must escape the backslashes themselves, resulting in &lt;code&gt;{&amp;#34;ad_cost&amp;#34;: &amp;#34;\\u0000\\u0096&amp;#34;}&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the serialisation of the decimal value corrected thus:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;{&amp;#34;click_ts&amp;#34;: 1675258225000, &amp;#34;ad_cost&amp;#34;: &amp;#34;\\u0000\\u0096&amp;#34; ,&amp;#34;is_conversion&amp;#34;: true, &amp;#34;user_id&amp;#34;: &amp;#34;001234567890&amp;#34;}\n&amp;#39;&lt;/span&gt; | &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    docker compose &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-T&lt;/span&gt; kafka-connect kafka-avro-console-producer &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
                        &lt;span style=&#34;color: #f92672&#34;&gt;--bootstrap-server&lt;/span&gt; broker:9092 &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
                        &lt;span style=&#34;color: #f92672&#34;&gt;--topic&lt;/span&gt; clicks_registry &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
                        &lt;span style=&#34;color: #f92672&#34;&gt;--property&lt;/span&gt; schema.registry.url&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;http://schema-registry:8081 &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
                        &lt;span style=&#34;color: #f92672&#34;&gt;--property&lt;/span&gt; value.schema.id&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I finally got the expected value showing in Iceberg:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ SELECT * FROM clicks_schema_registry;
┌──────────────────────────┬───────────────┬───────────────┬──────────────┐
│         click_ts         │    ad_cost    │ is_conversion │   user_id    │
│ timestamp with time zone │ decimal(38,2) │    boolean    │   varchar    │
├──────────────────────────┼───────────────┼───────────────┼──────────────┤
│ 2023-02-01 13:30:25+00   │          1.50 │ true          │ 001234567890 │&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_postgres_to_iceberg_via_kafka_connect&#34;&gt;Postgres to Iceberg via Kafka Connect&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s put this into practice now.
I’m going to use Kafka Connect with the Debezium connector to get data from Postgres and then write it to Iceberg with the same sink connector we’ve used above.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/pg00.excalidraw.png&#34; alt=&#34;pg00.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First, create and populate Postgres table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;clicks&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;click_ts&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIME&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;ZONE&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ad_cost&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DECIMAL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;is_conversion&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;BOOLEAN&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;user_id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;VARCHAR&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;clicks&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;click_ts&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ad_cost&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;is_conversion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2023-02-01 13:30:25+00&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;001234567890&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Then check we’ve got the Debezium connector installed on our Kafka Connect worker:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl get plugins &lt;span style=&#34;color: #f92672&#34;&gt;--types&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;source

 &lt;/span&gt;TYPE     CLASS                                                       VERSION
 &lt;span style=&#34;color: #f8f8f2&#34;&gt;source   &lt;/span&gt;io.debezium.connector.postgresql.PostgresConnector          3.1.2.Final&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and create a Debezium source connector:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;postgres-clicks-source&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.debezium.connector.postgresql.PostgresConnector&amp;#34;,
    &amp;#34;database.hostname&amp;#34;: &amp;#34;postgres&amp;#34;,
    &amp;#34;database.port&amp;#34;: &amp;#34;5432&amp;#34;,
    &amp;#34;database.user&amp;#34;: &amp;#34;postgres&amp;#34;,
    &amp;#34;database.password&amp;#34;: &amp;#34;Welcome123&amp;#34;,
    &amp;#34;database.dbname&amp;#34;: &amp;#34;postgres&amp;#34;,
    &amp;#34;table.include.list&amp;#34;: &amp;#34;public.clicks&amp;#34;,
    &amp;#34;topic.prefix&amp;#34;: &amp;#34;dbz&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using kcctl we can see that the connector is running, and writing data to a topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl describe connector postgres-clicks-source
Name:       postgres-clicks-source
Type:       &lt;span style=&#34;color: #f8f8f2&#34;&gt;source
&lt;/span&gt;State:      RUNNING
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
Topics:
  dbz.public.clicks&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If we take a look at the topic we can quickly see a mistake I’ve made in the configuration of the connector:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt; docker compose &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-T&lt;/span&gt; kcat kcat &lt;span style=&#34;color: #f92672&#34;&gt;-b&lt;/span&gt; broker:9092 &lt;span style=&#34;color: #f92672&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-t&lt;/span&gt; dbz.public.clicks &lt;span style=&#34;color: #f92672&#34;&gt;-c1&lt;/span&gt;

&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;schema&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;struct&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;fields&amp;#34;&lt;/span&gt;:[&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;struct&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;fields&amp;#34;&lt;/span&gt;:[&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;:true,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;io.debezium.time.ZonedTimestamp&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;:1,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;click_ts&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;bytes&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;:true,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;org.apache.kafka.connect.data.Decimal&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;:1,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;parameters&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;scale&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;connect.decimal.precision&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;38&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;ad_cost&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;boolean&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;:true,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;is_conversion&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;:true,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}]&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;:true,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;dbz.public.clicks.Value&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;before&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;struct&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;fields&amp;#34;&lt;/span&gt;:[&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;:true,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;io.debezium.time.ZonedTimestamp&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;:1,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;field&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;click_ts&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;bytes&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;optional&amp;#34;&lt;/span&gt;:true,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;name
[…]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It’s using the &lt;code&gt;JsonConverter&lt;/code&gt; with an embedded schema.
That’s not what we want, so let’s create a new version of the connector.
It’s important to create a new version, because the existing one won’t re-read messages from the topic just because we change its configuration because logically it has processed that data already.
We also need to make sure we write to a different topic; writing JSON and Avro to the same Kafka topic is a recipe for disaster (or at least, wailing and gnashing of teeth when a sink connector spectacularly fails to read the messages).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl delete connector postgres-clicks-source

&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;postgres-clicks-source-avro&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.debezium.connector.postgresql.PostgresConnector&amp;#34;,
    &amp;#34;database.hostname&amp;#34;: &amp;#34;postgres&amp;#34;,
    &amp;#34;database.port&amp;#34;: &amp;#34;5432&amp;#34;,
    &amp;#34;database.user&amp;#34;: &amp;#34;postgres&amp;#34;,
    &amp;#34;database.password&amp;#34;: &amp;#34;Welcome123&amp;#34;,
    &amp;#34;database.dbname&amp;#34;: &amp;#34;postgres&amp;#34;,
    &amp;#34;table.include.list&amp;#34;: &amp;#34;public.clicks&amp;#34;,
    &amp;#34;topic.prefix&amp;#34;: &amp;#34;dbz-avro&amp;#34;,
    &amp;#34;key.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;key.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;value.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;value.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we can see the Avro data in the topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;docker compose &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-T&lt;/span&gt; kcat kcat &lt;span style=&#34;color: #f92672&#34;&gt;-b&lt;/span&gt; broker:9092 &lt;span style=&#34;color: #f92672&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-t&lt;/span&gt; dbz-avro.public.clicks &lt;span style=&#34;color: #f92672&#34;&gt;-c1&lt;/span&gt;

62023-02-01T13:30:25.000000Z0012345678903.1.2.Finalpostgresqldbz-avroe
firstpostgres&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;[null,&amp;#34;&lt;/span&gt;34511440&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;]Ђӻ0
                                  public
                                        clicks
                                               reʷӻ0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To deserialise it correctly we use &lt;code&gt;-s avro&lt;/code&gt; as above, and we see that &lt;a href=&#34;https://debezium.io/documentation/reference/stable/transformations/event-flattening.html#_change_event_structure&#34;&gt;the payload from Debezium&lt;/a&gt; is more complex than a simple message:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;docker compose &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-T&lt;/span&gt; kcat kcat &lt;span style=&#34;color: #f92672&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-b&lt;/span&gt; broker:9092 &lt;span style=&#34;color: #f92672&#34;&gt;-t&lt;/span&gt; dbz-avro.public.clicks &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
                        &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; avro &lt;span style=&#34;color: #f92672&#34;&gt;-r&lt;/span&gt; http://schema-registry:8081 &lt;span style=&#34;color: #f92672&#34;&gt;-c1&lt;/span&gt; | jq &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;before&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;after&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;click_ts&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;2023-02-01T13:30:25.000000Z&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ad_cost&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;is_conversion&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;boolean&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;true&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;001234567890&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;source&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;3.1.2.Final&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;connector&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;postgresql&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;dbz-avro&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ts_ms&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1751447315595&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;snapshot&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;first&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;db&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Debezium, and any good CDC tool in general, doesn’t just capture the current state of a row; it captures &lt;em&gt;changes&lt;/em&gt;.
Since this is the initial snapshot, we have a blank &lt;code&gt;before&lt;/code&gt; section, the payload in &lt;code&gt;after&lt;/code&gt; (i.e. current state), and then some metadata (&lt;code&gt;source&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You &lt;em&gt;might&lt;/em&gt; want all of this raw change data sent to Iceberg, but more likely is that you just want the current state of the record.
To do this you can use a Kafka Connect Single Message Transformation (SMT).
Both Iceberg and Debezium ship with their own SMTs to do this.
Iceberg has &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/kafka-connect/#debeziumtransform&#34;&gt;&lt;code&gt;DebeziumTransform&lt;/code&gt;&lt;/a&gt; and Debezium &lt;a href=&#34;https://debezium.io/documentation/reference/stable/transformations/event-flattening.html&#34;&gt;&lt;code&gt;ExtractNewRecordState&lt;/code&gt;&lt;/a&gt;.
The differences between them that I can tell are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The Iceberg one is marked experimental, whilst the Debezium one has been used in production for years&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Iceberg one adds CDC metadata fields (operation type, offset, etc) along with the record state, whilst to do this with the Debezium one you’d need to include the &lt;a href=&#34;https://debezium.io/documentation/reference/stable/transformations/event-flattening.html#extract-new-record-state-add-fields&#34;&gt;&lt;code&gt;add.fields&lt;/code&gt;&lt;/a&gt; option.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s try the Iceberg one, which we’ll configure as part of the new sink connector itself:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-postgres-clicks&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics&amp;#34;: &amp;#34;dbz-avro.public.clicks&amp;#34;,
    &amp;#34;iceberg.tables&amp;#34;: &amp;#34;rmoff_db.postgres_clicks&amp;#34;,
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/01/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;key.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;key.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;value.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;value.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;,
    &amp;#34;transforms&amp;#34;: &amp;#34;dbz&amp;#34;,
    &amp;#34;transforms.dbz.type&amp;#34;: &amp;#34;io.tabular.iceberg.connect.transforms.DebeziumTransform&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s the resulting Iceberg table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ describe postgres_clicks;
┌───────────────┬──────────────────────────────────────────────────────────────┬
│  column_name  │                                           column_type        │
│    varchar    │                                             varchar          │
├───────────────┼──────────────────────────────────────────────────────────────┼
│ click_ts      │ VARCHAR                                                      │
│ ad_cost       │ DECIMAL(38,2)                                                │
│ is_conversion │ BOOLEAN                                                      │
│ user_id       │ VARCHAR                                                      │
│ _cdc          │ STRUCT(op VARCHAR, ts TIMESTAMP WITH TIME ZONE,              │
│               │        &amp;#34;offset&amp;#34; BIGINT, source VARCHAR, target VARCHAR)      │
└───────────────┴──────────────────────────────────────────────────────────────┴&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ SELECT * FROM postgres_clicks;
┌─────────────────────────────┬───────────────┬───────────────┬──────────────┬[…]
│          click_ts           │    ad_cost    │ is_conversion │   user_id    │[…]
│           varchar           │ decimal(38,2) │    boolean    │   varchar    │[…]
├─────────────────────────────┼───────────────┼───────────────┼──────────────┼[…]
│ 2023-02-01T13:30:25.000000Z │          1.50 │ true          │ 001234567890 │[…]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_data_type_fun_timestamps&#34;&gt;Data Type Fun: Timestamps&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One data type issue this time—pun intended.
The &lt;code&gt;click_ts&lt;/code&gt; should be a timestamp, but is showing up as a string in Iceberg.
To understand where this is occurring, I’ll start by checking the schema that Debezium wrote to the Schema Registry when it wrote the data to Kafka:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;http http://localhost:8081/subjects/dbz-avro.public.clicks-value/versions/latest | &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    jq &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;.schema | fromjson&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;click_ts&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;connect.version&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;connect.name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;io.debezium.time.ZonedTimestamp&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;],&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;},&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Per &lt;a href=&#34;https://debezium.io/documentation/reference/stable/connectors/postgresql.html#postgresql-basic-types&#34;&gt;the docs&lt;/a&gt;, it’s stored as a &lt;code&gt;string&lt;/code&gt;, but using the Kafka Connect logical type &lt;code&gt;io.debezium.time.ZonedTimestamp&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s have a look at the &lt;a href=&#34;https://rmoff.net/2020/12/17/twelve-days-of-smt-day-8-timestampconverter/&#34;&gt;TimestampConverter SMT&lt;/a&gt;.
This will hopefully let us convert the &lt;code&gt;string&lt;/code&gt; type (which holds the timestamp) into a logical &lt;code&gt;Timestamp&lt;/code&gt; type as part of the sink connector.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-postgres-clicks-new&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics&amp;#34;: &amp;#34;dbz-avro.public.clicks&amp;#34;,
    &amp;#34;iceberg.tables&amp;#34;: &amp;#34;rmoff_db.postgres_clicks&amp;#34;,
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/02/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;key.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;key.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;value.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;value.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;,
    &amp;#34;transforms&amp;#34;: &amp;#34;dbz,convert_ts&amp;#34;, &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    &amp;#34;transforms.dbz.type&amp;#34;: &amp;#34;io.tabular.iceberg.connect.transforms.DebeziumTransform&amp;#34;,
    &amp;#34;transforms.convert_ts.type&amp;#34; : &amp;#34;org.apache.kafka.connect.transforms.TimestampConverter&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\$&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Value&amp;#34;,
    &amp;#34;transforms.convert_ts.field&amp;#34; : &amp;#34;click_ts&amp;#34;,
    &amp;#34;transforms.convert_ts.format&amp;#34;: &amp;#34;yyyy-MM-dd&amp;#39;T&amp;#39;HH:mm:ss.SSSSSS&amp;#39;Z&amp;#39;&amp;#34;,
    &amp;#34;transforms.convert_ts.target.type&amp;#34;: &amp;#34;Timestamp&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The order of the transformations is important; for the &lt;code&gt;convert_ts&lt;/code&gt; transform to work the &lt;code&gt;click_ts&lt;/code&gt; field needs to have been unnested, which is what the &lt;code&gt;dbz&lt;/code&gt; transform does first.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the initial &lt;code&gt;postgres_clicks&lt;/code&gt; Iceberg table deleted, and the new version of the connector running (so as to make sure that the table gets recreated with-hopefully—the correct schema), we see this in Iceberg:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ describe postgres_clicks;
┌───────────────┬─────────────────────────────────────────────────────────────────[…]
│  column_name  │                                           column_type           […]
│    varchar    │                                             varchar             […]
├───────────────┼─────────────────────────────────────────────────────────────────[…]
│ click_ts      │ TIMESTAMP WITH TIME ZONE                                        […]
│ ad_cost       │ DECIMAL(38,2)                                                   […]
│ is_conversion │ BOOLEAN                                                         […]
│ user_id       │ VARCHAR                                                         […]
│ _cdc          │ STRUCT(op VARCHAR, ts TIMESTAMP WITH TIME ZONE, &amp;#34;offset&amp;#34; BIGINT,[…]
└───────────────┴─────────────────────────────────────────────────────────────────[…]

🟡◗ select click_ts, ad_cost, is_conversion, user_id from postgres_clicks;
┌──────────────────────────┬───────────────┬───────────────┬──────────────┐
│         click_ts         │    ad_cost    │ is_conversion │   user_id    │
│ timestamp with time zone │ decimal(38,2) │    boolean    │   varchar    │
├──────────────────────────┼───────────────┼───────────────┼──────────────┤
│ 2023-02-01 13:30:25+00   │          1.50 │ true          │ 001234567890 │
└──────────────────────────┴───────────────┴───────────────┴──────────────┘&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Compare the data types and data to the Postgres source:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;postgres=# \d clicks
                           Table &amp;#34;public.clicks&amp;#34;
    Column     |           Type           | Collation | Nullable | Default
---------------+--------------------------+-----------+----------+---------
 click_ts      | timestamp with time zone |           |          |
 ad_cost       | numeric(38,2)            |           |          |
 is_conversion | boolean                  |           |          |
 user_id       | character varying        |           |          |

postgres=# select * from clicks;
        click_ts        | ad_cost | is_conversion |   user_id
------------------------+---------+---------------+--------------
 2023-02-01 13:30:25+00 |    1.50 | t             | 001234567890&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Perfect!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you’re using &lt;code&gt;TIMESTAMP&lt;/code&gt; instead of &lt;code&gt;TIMESTAMP WITH TIME ZONE&lt;/code&gt; in Postgres then Debezium will store this as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;long&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;connect.version&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;connect.name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;io.debezium.time.MicroTimestamp&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and the Iceberg Kafka Connect sink write it, by default, as a &lt;code&gt;BIGINT&lt;/code&gt; to Iceberg (matching the &lt;code&gt;long&lt;/code&gt; logical type in the schema).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can use the same &lt;code&gt;TimestampConverter&lt;/code&gt; trick as above, instead specifying &lt;code&gt;unix.precision&lt;/code&gt; so that the transform treats the source value as an epoch value, converting it into a timestamp:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms.convert_ts.type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;          &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;org.apache.kafka.connect.transforms.TimestampConverter$Value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms.convert_ts.field&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;         &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;click_ts&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms.convert_ts.unix.precision&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;microseconds&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms.convert_ts.target.type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Timestamp&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The only problem is that this ends up in Iceberg as a &lt;code&gt;TIMESTAMP WITH TIME ZONE&lt;/code&gt;—i.e. &lt;em&gt;includes&lt;/em&gt; time zone, even though the source doesn’t.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_schema_evolution&#34;&gt;Schema Evolution&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What happens when we add a column to the source data being sent through the Kafka Connect Iceberg sink?
Let’s try it!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;clicks&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;COLUMN&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;campaign_id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;character&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;varying&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;clicks&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;click_ts&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ad_cost&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;is_conversion&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;campaign_id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2025-07-03 14:30:00+00&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;user_12345&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;campaign_summer_2025&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The table now looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;postgres=# SELECT * FROM clicks;
        click_ts        | ad_cost | is_conversion |   user_id    |     campaign_id
------------------------+---------+---------------+--------------+----------------------
 2023-02-01 13:30:25+00 |    1.50 | t             | 001234567890 |                          &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
 2025-07-03 14:30:00+00 |    2.50 | t             | user_12345   | campaign_summer_2025&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;This row existed already, so has no value for the new field, &lt;code&gt;campaign_id&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Over in Iceberg, we can see the new row—but no new column:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ select * from postgres_clicks;
┌──────────────────────┬───────────────┬───────────────┬──────────────┬─────────────────────[…]
│       click_ts       │    ad_cost    │ is_conversion │   user_id    │                     […]
│ timestamp with tim…  │ decimal(38,2) │    boolean    │   varchar    │  struct(op varchar, […]
├──────────────────────┼───────────────┼───────────────┼──────────────┼─────────────────────[…]
│ 2025-07-03 15:30:0…  │          2.50 │ true          │ user_12345   │ {&amp;#39;op&amp;#39;: I, &amp;#39;ts&amp;#39;: &amp;#39;202[…]
│ 2023-02-01 13:30:2…  │          1.50 │ true          │ 001234567890 │ {&amp;#39;op&amp;#39;: I, &amp;#39;ts&amp;#39;: &amp;#39;202[…]
└──────────────────────┴───────────────┴───────────────┴──────────────┴─────────────────────[…]

🟡◗ DESCRIBE postgres_clicks;
┌───────────────┬───────────────────────────────────────────────────────────────────────────[…]
│  column_name  │                                           column_type                     […]
│    varchar    │                                             varchar                       […]
├───────────────┼───────────────────────────────────────────────────────────────────────────[…]
│ click_ts      │ TIMESTAMP WITH TIME ZONE                                                  […]
│ ad_cost       │ DECIMAL(38,2)                                                             […]
│ is_conversion │ BOOLEAN                                                                   […]
│ user_id       │ VARCHAR                                                                   […]
│ _cdc          │ STRUCT(op VARCHAR, ts TIMESTAMP WITH TIME ZONE, &amp;#34;offset&amp;#34; BIGINT, source VA[…]
└───────────────┴───────────────────────────────────────────────────────────────────────────[…]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A quick perusal of &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/kafka-connect/#configuration&#34;&gt;the docs&lt;/a&gt; points us at &lt;code&gt;iceberg.tables.evolve-schema-enabled&lt;/code&gt;, which is &lt;code&gt;false&lt;/code&gt; by default.
As a side note, whilst the docs are good, you can also get a quick look at the configuration options a connector has by looking at the Kafka Connect worker log file for &lt;code&gt;IcebergSinkConfig values&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;[2025-07-03 09:28:58,309] INFO [iceberg-sink-postgres-clicks-new|task-0] IcebergSinkConfig values:
  iceberg.catalog = iceberg
  iceberg.connect.group-id = null
  iceberg.control.commit.interval-ms = 1000
  iceberg.control.commit.threads = 28
  iceberg.control.commit.timeout-ms = 1000
  iceberg.control.group-id = null
  iceberg.control.topic = control-iceberg
  iceberg.hadoop-conf-dir = null
  iceberg.tables = [rmoff_db.postgres_clicks]
  iceberg.tables.auto-create-enabled = true
  iceberg.tables.cdc-field = null
  iceberg.tables.default-commit-branch = null
  iceberg.tables.default-id-columns = null
  iceberg.tables.default-partition-by = null
  iceberg.tables.dynamic-enabled = false
  iceberg.tables.evolve-schema-enabled = false
  iceberg.tables.route-field = null
  iceberg.tables.schema-case-insensitive = false
  iceberg.tables.schema-force-optional = false
  iceberg.tables.upsert-mode-enabled = false&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, let’s create a new version of this connector and test it out.
I’m going to follow the same pattern as above; create the initial table and add a row, make sure it syncs to a new Iceberg table, then alter the table and add another row and see if that propagates as expected.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-postgres-clicks01&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics&amp;#34;: &amp;#34;dbz-avro.public.clicks01&amp;#34;,
    &amp;#34;iceberg.tables&amp;#34;: &amp;#34;rmoff_db.postgres_clicks01&amp;#34;,
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.evolve-schema-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/02/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;key.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;key.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;value.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;value.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;,
    &amp;#34;transforms&amp;#34;: &amp;#34;dbz,convert_ts&amp;#34;,
    &amp;#34;transforms.dbz.type&amp;#34;: &amp;#34;io.tabular.iceberg.connect.transforms.DebeziumTransform&amp;#34;,
    &amp;#34;transforms.convert_ts.type&amp;#34; : &amp;#34;org.apache.kafka.connect.transforms.TimestampConverter&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\$&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Value&amp;#34;,
    &amp;#34;transforms.convert_ts.field&amp;#34; : &amp;#34;click_ts&amp;#34;,
    &amp;#34;transforms.convert_ts.format&amp;#34;: &amp;#34;yyyy-MM-dd&amp;#39;T&amp;#39;HH:mm:ss.SSSSSS&amp;#39;Z&amp;#39;&amp;#34;,
    &amp;#34;transforms.convert_ts.target.type&amp;#34;: &amp;#34;Timestamp&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This works exactly as I’d hoped.
The Iceberg table has the new field (&lt;code&gt;campaign_id&lt;/code&gt;, after the &lt;code&gt;_cdc&lt;/code&gt; metadata):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ DESCRIBE postgres_clicks01;
┌───────────────┬───────────────────────────────────────────────────────────────────────────[…]
│  column_name  │                                           column_type                     […]
│    varchar    │                                             varchar                       […]
├───────────────┼───────────────────────────────────────────────────────────────────────────[…]
│ click_ts      │ TIMESTAMP WITH TIME ZONE                                                  […]
│ ad_cost       │ DECIMAL(38,2)                                                             […]
│ is_conversion │ BOOLEAN                                                                   […]
│ user_id       │ VARCHAR                                                                   […]
│ _cdc          │ STRUCT(op VARCHAR, ts TIMESTAMP WITH TIME ZONE, &amp;#34;offset&amp;#34; BIGINT, source VA[…]
│ campaign_id   │ VARCHAR                                                                   […]
└───────────────┴───────────────────────────────────────────────────────────────────────────[…]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and the new data is present too:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ select click_ts, ad_cost, is_conversion, user_id, campaign_id from postgres_clicks01;
┌──────────────────────────┬───────────────┬───────────────┬──────────────┬──────────────────[…]
│         click_ts         │    ad_cost    │ is_conversion │   user_id    │     campaign_id  […]
│ timestamp with time zone │ decimal(38,2) │    boolean    │   varchar    │       varchar    […]
├──────────────────────────┼───────────────┼───────────────┼──────────────┼──────────────────[…]
│ 2023-02-01 13:30:25+00   │          1.50 │ true          │ 001234567890 │ NULL             […]
│ 2025-07-03 15:30:00+01   │          2.50 │ true          │ user_12345   │ campaign_summer_2[…]
└──────────────────────────┴───────────────┴───────────────┴──────────────┴──────────────────[…]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_nn_many_to_many_sending_data_from_multiple_topics_to_many_iceberg_tables&#34;&gt;N:N (Many-to-Many / Sending data from multiple topics to many Iceberg tables)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So far I’ve shown you how to get one Postgres table to one Iceberg table.
Or to be more precise: one Kafka topic to one Iceberg table.
The Kafka Connect Iceberg sink simply reads from a Kafka topic, and that topic can be populated by anything, including Kafka Connect source connectors, or applications directly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Anyway, what about writing to multiple Iceberg tables.
Does that mean multiple Kafka Connect Iceberg sink instances?
No!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With Kafka Connect you can specify a list of topics with &lt;a href=&#34;https://kafka.apache.org/documentation/#sinkconnectorconfigs_topics&#34;&gt;&lt;code&gt;topics&lt;/code&gt;&lt;/a&gt;, or a regex with &lt;a href=&#34;https://kafka.apache.org/documentation/#sinkconnectorconfigs_topics.regex&#34;&gt;&lt;code&gt;topics.regex&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s try it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’m going to stick with Postgres here for my example to populate the multiple topics that we’ll then read from and send to multiple Postgres tables.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/kcpgnn.excalidraw.png&#34; alt=&#34;kcpgnn.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are four tables in my schema:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dt&lt;/span&gt;
           &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;List&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;relations&lt;/span&gt;
 &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;Schema&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Name&lt;/span&gt;    &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;Type&lt;/span&gt;  &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;Owner&lt;/span&gt;
&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;--------+-----------+-------+----------&lt;/span&gt;
 &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;europe&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customers&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;postgres&lt;/span&gt;
 &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;europe&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;    &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;postgres&lt;/span&gt;
 &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;europe&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;products&lt;/span&gt;  &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;postgres&lt;/span&gt;
 &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;europe&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;shipments&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;postgres&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ll create a Debezium connector that’s going to pick up all of them (&lt;code&gt;&amp;#34;schema.include.list&amp;#34;: &amp;#34;europe&amp;#34;,&lt;/code&gt;), writing each to its own Kafka topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;postgres-europe&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.debezium.connector.postgresql.PostgresConnector&amp;#34;,
    &amp;#34;database.hostname&amp;#34;: &amp;#34;postgres&amp;#34;,
    &amp;#34;database.port&amp;#34;: &amp;#34;5432&amp;#34;,
    &amp;#34;database.user&amp;#34;: &amp;#34;postgres&amp;#34;,
    &amp;#34;database.password&amp;#34;: &amp;#34;Welcome123&amp;#34;,
    &amp;#34;database.dbname&amp;#34;: &amp;#34;postgres&amp;#34;,
    &amp;#34;schema.include.list&amp;#34;: &amp;#34;europe&amp;#34;,
    &amp;#34;topic.prefix&amp;#34;: &amp;#34;dbz-avro&amp;#34;,
    &amp;#34;key.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;key.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;value.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;value.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With this running, we can see that it’s writing to four Kafka topics, as expected:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl describe connector postgres-europe
Name:       postgres-europe
Type:       &lt;span style=&#34;color: #f8f8f2&#34;&gt;source
&lt;/span&gt;State:      RUNNING
Worker ID:  kafka-connect:8083
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
Topics:
  dbz-avro.europe.customers
  dbz-avro.europe.orders
  dbz-avro.europe.products
  dbz-avro.europe.shipments&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To send these to Iceberg we need to tell the sink connector to handle multiple source topics.
For it to read from multiple topics we use &lt;code&gt;topics.regex&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;topics.regex&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;dbz-avro.europe.*&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When it comes to specifying the target Iceberg table you have two options:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;iceberg.tables&lt;/code&gt;.
You can put a comma-separated list of tables here, but as far as I can tell all that will do is write the same source data to each of the target tables (i.e. you end up with multiple Iceberg tables with the same contents).
This won’t work for multiple source topics if they have different schemas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set &lt;code&gt;iceberg.tables.dynamic-enabled&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, and then specify in &lt;code&gt;iceberg.tables.route-field&lt;/code&gt; the &lt;em&gt;field&lt;/em&gt; within the topic that holds the name of the target Iceberg table to write to.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using dynamic routing works fine if you’ve got a single source topic that holds this field.
The example in the documentation is a list of events with different &lt;code&gt;type&lt;/code&gt; values, and each event is routed to a different Iceberg table named based on the event type.
For our purpose here though we need to be a bit more imaginative.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The source data itself doesn’t hold any values that we can use for the table name.
For example, in &lt;code&gt;products&lt;/code&gt;, which field name can we use as the target table name?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;postgres=# \d products
                                        Table &amp;#34;europe.products&amp;#34;
     Column     |          Type          | Collation | Nullable |               Default
----------------+------------------------+-----------+----------+--------------------------[…]
 id             | integer                |           | not null | nextval(&amp;#39;products_id_seq&amp;#39;[…]
 product_name   | character varying(255) |           | not null |
 category       | character varying(100) |           |          |
 price          | numeric(10,2)          |           | not null |
 stock_quantity | integer                |           |          | 0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;None of them.
But what about in the metadata that Debezium provides?
Here’s a snippet of the message that Debezium writes to Kafka:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;before&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;after&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;source&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;3.1.2.Final&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;connector&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;postgresql&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;dbz-avro&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;europe&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;  &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;table&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;products&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Table name and schema!&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s try that in the Iceberg connector:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-postgres-europe&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics.regex&amp;#34;: &amp;#34;dbz-avro.europe.*&amp;#34;,
    &amp;#34;iceberg.tables.dynamic-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.route-field&amp;#34;: &amp;#34;source.table&amp;#34;,
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.evolve-schema-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/02/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;key.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;key.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;value.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;value.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;,
    &amp;#34;transforms&amp;#34;: &amp;#34;dbz&amp;#34;,
    &amp;#34;transforms.dbz.type&amp;#34;: &amp;#34;io.tabular.iceberg.connect.transforms.DebeziumTransform&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;However, this fails:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;org.apache.kafka.connect.errors.DataException: source is not a valid field name&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After a bit of Googling around I realised that perhaps the &lt;code&gt;route-field&lt;/code&gt; is applied &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;DebeziumTransform&lt;/code&gt; in the sink, and so need to be thinking about the final record schema.
Fortunately we still have a table as part of that data as part of the &lt;code&gt;_cdc&lt;/code&gt; field that the &lt;code&gt;DebeziumTransform&lt;/code&gt; adds.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So let’s try it with &lt;code&gt;&amp;#34;iceberg.tables.route-field&amp;#34;:&amp;#34;_cdc.target&amp;#34;&lt;/code&gt;.
Now we get a different error, and one that looks a bit more hopeful:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;software.amazon.awssdk.services.glue.model.EntityNotFoundException: Database europe not found.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You might wonder why I say that this is more hopeful :)
That’s because it’s &lt;em&gt;found&lt;/em&gt; the field!
It’s just not happy with it, because it’s taken the schema from Postgres (&lt;code&gt;europe&lt;/code&gt; in our example here) as the Iceberg &lt;em&gt;database&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Fortunately in &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/kafka-connect/#debeziumtransform&#34;&gt;the docs&lt;/a&gt; for the &lt;code&gt;DebeziumTransform&lt;/code&gt; we find the configuration option &lt;code&gt;cdc.target.pattern&lt;/code&gt; which we’re told defaults to &lt;code&gt;{db}.{table}&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s change it to move the schema to a table prefix (separated by an underscore: &lt;code&gt;{db}_{table}&lt;/code&gt;), and hardcode in the database that I want to use, and see what happens:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-postgres-europe&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics.regex&amp;#34;: &amp;#34;dbz-avro.europe.*&amp;#34;,
    &amp;#34;iceberg.tables.dynamic-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.route-field&amp;#34;:&amp;#34;_cdc.target&amp;#34;,
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.evolve-schema-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/02/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;key.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;key.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;value.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;value.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;,
    &amp;#34;transforms&amp;#34;: &amp;#34;dbz&amp;#34;,
    &amp;#34;transforms.dbz.type&amp;#34;: &amp;#34;io.tabular.iceberg.connect.transforms.DebeziumTransform&amp;#34;,
    &amp;#34;transforms.dbz.cdc.target.pattern&amp;#34;: &amp;#34;rmoff_db.{db}_{table}&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It works!
Over in Iceberg we have the four tables in the &lt;code&gt;rmoff_db&lt;/code&gt; database and a &lt;code&gt;europe_&lt;/code&gt; prefix:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ SHOW TABLES;
┌───────────────────────────┐
│           name            │
│          varchar          │
├───────────────────────────┤
[…]
│ europe_customers          │
│ europe_orders             │
│ europe_products           │
│ europe_shipments          │&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_dynamic_routing_from_topics_without_a_routing_field&#34;&gt;Dynamic routing from topics without a routing field&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The above is neat, but what if we are sending data from Kafka topics that &lt;em&gt;haven’t&lt;/em&gt; been populated by Debezium?
In that case we won’t be able to rely on having the name of a source table to assume as the name for the target Iceberg table.
Consider this Kafka topic, based on the one at the opening of this article:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;orders_json&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;order_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;001&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;customer_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;cust_123&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;product&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;laptop&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;quantity&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;price&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;999.99&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;No target topic name anywhere in the schema.
If it’s just one topic, we can hardcode the &lt;code&gt;iceberg.tables&lt;/code&gt; value.
But what about if we’ve got more topics like this, perhaps &lt;code&gt;products_json&lt;/code&gt; too?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;products_json&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;product_id&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;prod_001&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Gaming Laptop&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;category&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Electronics&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;price&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1299.99&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;stock&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;15&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We could run two Kafka Connect Iceberg sinks, but that’d be missing the point of the ability of Kafka Connect to work with multiple sources and targets.
We’d also end up with a lot of repeated configuration to align across the sinks.
And what about if we then add another table?
Create another sink?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Ideally we want to do something like this, and pick up &lt;em&gt;all&lt;/em&gt; topics matching a pattern, such as any that end in &lt;code&gt;_json&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;topics.regex&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;.*&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;_json&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But how to route them sensibly to an Iceberg table based on their &lt;em&gt;topic&lt;/em&gt; name, rather than a field within the payload itself (which is what the Iceberg sink’s dynamic routing is based on).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;SMTs to the rescue again!
This time one that’s built into Kafka Connect: &lt;a href=&#34;https://rmoff.net/2020/12/15/twelve-days-of-smt-day-6-insertfield-ii/&#34;&gt;&lt;code&gt;InsertField&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;                         &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;insertTopic&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms.insertTopic.type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;org.apache.kafka.connect.transforms.InsertField$Value&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms.insertTopic.topic.field&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;srcTopic&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Putting it together into a Sink connector config looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-json-topics&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics.regex&amp;#34;: &amp;#34;.*_json&amp;#34;,
    &amp;#34;iceberg.tables.dynamic-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.route-field&amp;#34;:&amp;#34;srcTopic&amp;#34;,
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.evolve-schema-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/02/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;key.converter&amp;#34;:&amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;key.converter.schemas.enable&amp;#34;:&amp;#34;false&amp;#34;,
    &amp;#34;value.converter&amp;#34;:&amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;value.converter.schemas.enable&amp;#34;:&amp;#34;false&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;,
    &amp;#34;transforms&amp;#34; : &amp;#34;insertTopic&amp;#34;,
    &amp;#34;transforms.insertTopic.type&amp;#34; : &amp;#34;org.apache.kafka.connect.transforms.InsertField&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\$&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Value&amp;#34;,
    &amp;#34;transforms.insertTopic.topic.field&amp;#34; : &amp;#34;srcTopic&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Unfortunately this fails:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;java.lang.IllegalArgumentException: Invalid table identifier: products_json&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That’s because an Iceberg table needs to be qualified by its database.
There’s no way that I can see in the connector to specify a default database.
There’s also no way in the &lt;code&gt;InsertField&lt;/code&gt; SMT to insert both some static text (the database qualifier) and the dynamic topic name
Argh!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Unless…unless…we change the topic name in-flight &lt;em&gt;first&lt;/em&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;                         &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;addDbPrefix&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms.addDbPrefix.type&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;org.apache.kafka.connect.transforms.RegexRouter&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms.addDbPrefix.regex&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;       &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;.*&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;transforms.addDbPrefix.replacement&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;rmoff_db.$0&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s chain these together and see.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-json-topics&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics.regex&amp;#34;: &amp;#34;.*_json&amp;#34;,
    &amp;#34;iceberg.tables.dynamic-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.route-field&amp;#34;:&amp;#34;srcTopic&amp;#34;,
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.evolve-schema-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/02/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;key.converter&amp;#34;:&amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;key.converter.schemas.enable&amp;#34;:&amp;#34;false&amp;#34;,
    &amp;#34;value.converter&amp;#34;:&amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;value.converter.schemas.enable&amp;#34;:&amp;#34;false&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;,
    &amp;#34;transforms&amp;#34; : &amp;#34;addDbPrefix, insertTopic&amp;#34;,
    &amp;#34;transforms.addDbPrefix.type&amp;#34; : &amp;#34;org.apache.kafka.connect.transforms.RegexRouter&amp;#34;,
    &amp;#34;transforms.addDbPrefix.regex&amp;#34; : &amp;#34;.*&amp;#34;,
    &amp;#34;transforms.addDbPrefix.replacement&amp;#34; : &amp;#34;rmoff_db.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$0&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;,
    &amp;#34;transforms.insertTopic.type&amp;#34; : &amp;#34;org.apache.kafka.connect.transforms.InsertField&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\$&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Value&amp;#34;,
    &amp;#34;transforms.insertTopic.topic.field&amp;#34; : &amp;#34;srcTopic&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What happened next may surprise you!
It certainly had me scratching my head.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;Caused by: java.lang.IllegalArgumentException: Invalid table identifier: rmoff_db.-zsh&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Wuuuuh… eh?!
Where has &lt;code&gt;-zsh&lt;/code&gt; come from??&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In short, I hadn’t escaped the &lt;code&gt;$&lt;/code&gt; of the &lt;code&gt;$0&lt;/code&gt; in my config, meaning that &lt;code&gt;$0&lt;/code&gt; was interpreted as a &lt;a href=&#34;https://www.gnu.org/software/bash/manual/bash.html#Special-Parameters&#34;&gt;special shell parameter&lt;/a&gt; and replaced with &lt;code&gt;-zsh&lt;/code&gt; &lt;em&gt;when it was passed to kcctl&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can validate this by looking closely at the &lt;code&gt;kcctl describe connector&lt;/code&gt; output:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl describe connector iceberg-sink-json-topics
Name:       iceberg-sink-json-topics
Type:       sink
State:      RUNNING
Worker ID:  kafka-connect:8083
Config:
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
  transforms.addDbPrefix.replacement:    rmoff_db.-zsh&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s escape the &lt;code&gt;$&lt;/code&gt; and try again:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-json-topics&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics.regex&amp;#34;: &amp;#34;.*_json&amp;#34;,
    &amp;#34;iceberg.tables.dynamic-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.route-field&amp;#34;:&amp;#34;srcTopic&amp;#34;,
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.evolve-schema-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/02/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;key.converter&amp;#34;:&amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;key.converter.schemas.enable&amp;#34;:&amp;#34;false&amp;#34;,
    &amp;#34;value.converter&amp;#34;:&amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;value.converter.schemas.enable&amp;#34;:&amp;#34;false&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;,
    &amp;#34;transforms&amp;#34; : &amp;#34;addDbPrefix, insertTopic&amp;#34;,
    &amp;#34;transforms.addDbPrefix.type&amp;#34; : &amp;#34;org.apache.kafka.connect.transforms.RegexRouter&amp;#34;,
    &amp;#34;transforms.addDbPrefix.regex&amp;#34; : &amp;#34;.*&amp;#34;,
    &amp;#34;transforms.addDbPrefix.replacement&amp;#34; : &amp;#34;rmoff_db.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\$&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;0&amp;#34;,
    &amp;#34;transforms.insertTopic.type&amp;#34; : &amp;#34;org.apache.kafka.connect.transforms.InsertField&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\$&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Value&amp;#34;,
    &amp;#34;transforms.insertTopic.topic.field&amp;#34; : &amp;#34;srcTopic&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As if by magic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ show tables;
┌───────────────────────────┐
│           name            │
│          varchar          │
├───────────────────────────┤
│ orders_json               │
│ products_json             │
[…]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-warning&#34; title=&#34;Warning&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;At this point though, the news isn’t so good.
Whilst the tables are created in the catalog as shown above, only the data files and initial metadata are written to storage; no snapshot is created by the commit process.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;aws s3 &lt;span style=&#34;color: #f92672&#34;&gt;--recursive&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;ls &lt;/span&gt;s3://rmoff-lakehouse/02
2025-07-03 17:03:11       2232 02/rmoff_db.db/orders_json/data/00001-1751558478326-e7f95114-8e7e-4505-886c-940db4a01835-00001.parquet
2025-07-03 17:01:18       1429 02/rmoff_db.db/orders_json/metadata/00000-c1b90515-019b-4856-a1f0-33e842b700e7.metadata.json
2025-07-03 17:03:11       2341 02/rmoff_db.db/products_json/data/00001-1751558480636-817e3f1d-e7ce-4a1d-a593-648048137863-00001.parquet
2025-07-03 17:01:20       1424 02/rmoff_db.db/products_json/metadata/00000-ad7c28f3-4ce6-4370-a6a2-8b434b4e5348.metadata.json&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ve &lt;a href=&#34;https://github.com/apache/iceberg/issues/13457&#34;&gt;logged this as a bug (#13457)&lt;/a&gt; that seems to be related to the use of SMTs to populate the field used by &lt;code&gt;iceberg.tables.dynamic-enabled&lt;/code&gt; / &lt;code&gt;iceberg.tables.route-field&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Dynamic routing &lt;strong&gt;does&lt;/strong&gt; work—as I showed above—if you’re using &lt;code&gt;route-field&lt;/code&gt; with &lt;strong&gt;a regular field that already exists in the message&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_n1_fan_in_writing_many_topics_to_one_table&#34;&gt;N:1 (Fan In / Writing many topics to one table)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s now look at a variation on the above.
Instead of many topics written each to their own table, what about multiple topics writing to the same table?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/n1.excalidraw.png&#34; alt=&#34;n1.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is a common requirement when data is sharded across geographies or business units, for example.
I’m using Postgres again as my source example, but this could equally just be any Kafka topic populated by any application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this example there is an instance of the &lt;code&gt;orders&lt;/code&gt; table across multiple schemas:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;table_schema&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;table_name&lt;/span&gt;
&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;--------------+------------&lt;/span&gt;
 &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;asia&lt;/span&gt;         &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;
 &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;europe&lt;/span&gt;       &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;
 &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;us_east&lt;/span&gt;      &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;
 &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;us_west&lt;/span&gt;      &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With Debezium we capture these into four Kafka topics (by specifying a regex &lt;code&gt;&amp;#34;table.include.list&amp;#34;: &amp;#34;.*orders&amp;#34;&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;postgres-orders&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.debezium.connector.postgresql.PostgresConnector&amp;#34;,
    &amp;#34;database.hostname&amp;#34;: &amp;#34;postgres&amp;#34;,
    &amp;#34;database.port&amp;#34;: &amp;#34;5432&amp;#34;,
    &amp;#34;database.user&amp;#34;: &amp;#34;postgres&amp;#34;,
    &amp;#34;database.password&amp;#34;: &amp;#34;Welcome123&amp;#34;,
    &amp;#34;database.dbname&amp;#34;: &amp;#34;postgres&amp;#34;,
    &amp;#34;table.include.list&amp;#34;: &amp;#34;.*orders&amp;#34;,
    &amp;#34;topic.prefix&amp;#34;: &amp;#34;dbz-avro&amp;#34;,
    &amp;#34;key.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;key.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;value.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;value.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl describe connector postgres-orders
Name:       postgres-orders
Type:       &lt;span style=&#34;color: #f8f8f2&#34;&gt;source
&lt;/span&gt;State:      RUNNING
Worker ID:  kafka-connect:8083
Config:
  connector.class:                      io.debezium.connector.postgresql.PostgresConnector
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
Topics:
  dbz-avro.asia.orders
  dbz-avro.europe.orders
  dbz-avro.us_east.orders
  dbz-avro.us_west.orders&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we can create a single Iceberg sink which will read from any orders topic (based on our regex), and write to a single &lt;code&gt;orders&lt;/code&gt; Iceberg table.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-postgres-orders&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics.regex&amp;#34;: &amp;#34;dbz-avro..*orders&amp;#34;,
    &amp;#34;iceberg.tables&amp;#34;: &amp;#34;rmoff_db.orders&amp;#34;,
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.evolve-schema-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/02/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;key.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;key.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;value.converter&amp;#34;: &amp;#34;io.confluent.connect.avro.AvroConverter&amp;#34;,
    &amp;#34;value.converter.schema.registry.url&amp;#34;: &amp;#34;http://schema-registry:8081&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;,
    &amp;#34;transforms&amp;#34;: &amp;#34;dbz&amp;#34;,
    &amp;#34;transforms.dbz.type&amp;#34;: &amp;#34;io.tabular.iceberg.connect.transforms.DebeziumTransform&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This works as it should, and we have an &lt;code&gt;orders&lt;/code&gt; table on it with the expected data.
Because we have the &lt;code&gt;_cdc&lt;/code&gt; field we can also get the source table easily:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ SELECT _cdc.source AS src_table, id, customer_name, quantity, price
    FROM orders;
┌────────────────┬───────┬──────────────────┬──────────┬───────────────┐
│   src_table    │  id   │  customer_name   │ quantity │     price     │
│    varchar     │ int32 │     varchar      │  int32   │ decimal(38,2) │
├────────────────┼───────┼──────────────────┼──────────┼───────────────┤
│ us_east.orders │     2 │ Bruce Wayne      │        1 │        299.99 │
│ us_west.orders │     1 │ Scott Lang       │        1 │        179.99 │
│ us_west.orders │     3 │ Steve Rogers     │        1 │        249.99 │
│ us_west.orders │     4 │ Wanda Maximoff   │        1 │        199.99 │
│ us_west.orders │     2 │ Natasha Romanoff │        2 │        129.99 │
│ us_west.orders │     5 │ Carol Danvers    │        1 │        399.99 │
│ asia.orders    │     4 │ Luke Cage        │        1 │         69.99 │
│ europe.orders  │     2 │ Barry Allen      │        1 │         79.99 │
│ europe.orders  │     1 │ Arthur Curry     │        1 │        189.99 │
[…]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s check the row counts match too.
Here’s the source, in Postgres:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;all_tables&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ct&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;asia&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;   &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;UNION&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;ALL&lt;/span&gt;
                    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ct&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;europe&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;UNION&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;ALL&lt;/span&gt;
                    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ct&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;us_east&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;UNION&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;ALL&lt;/span&gt;
                    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ct&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;us_west&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ct&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;all_tables&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;

 &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;sum&lt;/span&gt;
&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;-----&lt;/span&gt;
  &lt;span style=&#34;color: #ae81ff&#34;&gt;20&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;row&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and the target Iceberg table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ SELECT COUNT(*) from orders;
┌──────────────┐
│ count_star() │
│    int64     │
├──────────────┤
│      20      │
└──────────────┘&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You may notice that in the above example the &lt;code&gt;id&lt;/code&gt; field is no longer unique.
To make it unique you’d need to perhaps use a composite key that included the source table too:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;🟡◗&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;_cdc&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;source&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src_table&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;_cdc&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;source&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;&amp;#34;unique_id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customer_name&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders_newer&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;price&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;┌────────────────┬───────┬──────────────────┬─────────────────┐&lt;/span&gt;
&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;   &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src_table&lt;/span&gt;    &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt;   &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;unique_id&lt;/span&gt;     &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;customer_name&lt;/span&gt;  &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;
&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;    &lt;span style=&#34;color: #f8f8f2&#34;&gt;varchar&lt;/span&gt;     &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;int32&lt;/span&gt; &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;     &lt;span style=&#34;color: #f8f8f2&#34;&gt;varchar&lt;/span&gt;      &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;     &lt;span style=&#34;color: #f8f8f2&#34;&gt;varchar&lt;/span&gt;     &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;
&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;├────────────────┼───────┼──────────────────┼─────────────────┤&lt;/span&gt;
&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;asia&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;    &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;     &lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;asia&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt;    &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Jessica&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Jones&lt;/span&gt;   &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;
&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;asia&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;    &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;     &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;asia&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;    &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Kamala&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Khan&lt;/span&gt;     &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;
&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;us_east&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt; &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;     &lt;span style=&#34;color: #ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;us_east&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Clark&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Kent&lt;/span&gt;      &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;
&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;europe&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;  &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;     &lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;europe&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt;  &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Kara&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Zor&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;El&lt;/span&gt;     &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;│&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;…&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Another option is to perform this concatenation in-flight with a custom SMT, or to pre-process the topic using Flink SQL.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_1n_fan_out_writing_one_topic_to_many_tables&#34;&gt;1:N (Fan Out / Writing one topic to many tables)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The inverse of the above process is taking one topic and writing it out to multiple Iceberg tables.
This is what the built-in Iceberg &lt;code&gt;route-field&lt;/code&gt; is designed for, and works simply enough.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/07/1n.excalidraw.png&#34; alt=&#34;1n.excalidraw&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Imagine you’ve got a Kafka topic &lt;code&gt;wifi-logs&lt;/code&gt; that holds wifi data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;wifi-logs&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;2025-07-04T10:30:15Z&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;device_mac&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;aa:bb:cc:dd:ee:01&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ssid&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;HomeNetwork&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;category&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;web_browsing&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1024&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;wifi-logs&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;2025-07-04T10:30:45Z&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;device_mac&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;aa:bb:cc:dd:ee:02&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ssid&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;HomeNetwork&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;category&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;video_streaming&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;5120&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;wifi-logs&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;2025-07-04T10:31:12Z&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;device_mac&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;aa:bb:cc:dd:ee:03&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ssid&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;GuestNetwork&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;category&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;social_media&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;512&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;wifi-logs&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;2025-07-04T10:31:33Z&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;device_mac&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;aa:bb:cc:dd:ee:04&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ssid&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;HomeNetwork&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;category&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;gaming&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2048&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;wifi-logs&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;2025-07-04T10:32:01Z&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;device_mac&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;aa:bb:cc:dd:ee:05&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ssid&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;HomeNetwork&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;category&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;file_download&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;8192&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we want to send this data to Iceberg, but split it out by network.
To do this we specify the &lt;code&gt;ssid&lt;/code&gt; as the &lt;code&gt;route-field&lt;/code&gt; in the Iceberg sink:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-wifi-logs&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics.regex&amp;#34;: &amp;#34;wifi-logs&amp;#34;,
    &amp;#34;iceberg.tables.dynamic-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.route-field&amp;#34;:&amp;#34;ssid&amp;#34;,
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.evolve-schema-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/02/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;,
    &amp;#34;key.converter&amp;#34;:&amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;key.converter.schemas.enable&amp;#34;:&amp;#34;false&amp;#34;,
    &amp;#34;value.converter&amp;#34;:&amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;value.converter.schemas.enable&amp;#34;:&amp;#34;false&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Unfortunately this hits the same problem as above; the &lt;code&gt;route-field&lt;/code&gt; value must be a &lt;em&gt;fully qualified table name&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;Caused by: java.lang.IllegalArgumentException: Invalid table identifier: homenetwork&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Whereas above we had data from Debezium and we could fudge the &lt;code&gt;route-field&lt;/code&gt; value to include a database by making use of the &lt;code&gt;DebeziumTransform&lt;/code&gt; configuration, here we don’t have that option.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We need an SMT similar to that mentioned just before in the context of unique field values for a Fan-In scenario: an SMT that will concatenate a field’s value with another (or a static value, in this case).
That, or the option to specify a default database as part of the Iceberg sink configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But, we’ve still got a job to do—so let’s work around the problem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Turning to Flink SQL, we can map a Flink table to the original Kafka topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;wifi_logs&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;target&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;`timestamp`&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;device_mac&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ssid&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;255&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;category&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;`bytes`&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INTEGER&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;kafka&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;wifi-logs&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.bootstrap.servers&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;broker:9092&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;format&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;scan.startup.mode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;earliest-offset&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and then populate a new Flink table (writing to a Kafka topic) with the required field:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;wifi_logs_with_db_tb&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;kafka&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;wifi_logs_with_db_tb&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.bootstrap.servers&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;broker:9092&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;format&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;scan.startup.mode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;earliest-offset&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;rmoff_db.&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ssid&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;target_table&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;`wifi_logs`&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s a sample message from the resulting topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;wifi-logs&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;2025-07-04T10:30:15Z&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;device_mac&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;aa:bb:cc:dd:ee:01&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;ssid&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;HomeNetwork&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;category&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;web_browsing&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1024&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;target_table&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;rmoff_db.HomeNetwork&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Here’s our new field created for the purpose of the &lt;code&gt;route-field&lt;/code&gt; configuration&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now let’s try it with the Iceberg sink:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-wifi-logs&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics&amp;#34;: &amp;#34;wifi_logs_with_db_tb&amp;#34;,
    &amp;#34;iceberg.tables.dynamic-enabled&amp;#34;: &amp;#34;true&amp;#34;, &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    &amp;#34;iceberg.tables.route-field&amp;#34;:&amp;#34;target_table&amp;#34;, &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.evolve-schema-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/02/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;,
    &amp;#34;key.converter&amp;#34;:&amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;key.converter.schemas.enable&amp;#34;:&amp;#34;false&amp;#34;,
    &amp;#34;value.converter&amp;#34;:&amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;value.converter.schemas.enable&amp;#34;:&amp;#34;false&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Use dynamic routing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Use the new &lt;code&gt;target_table&lt;/code&gt; to define the target table to which to write the data&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The tables have been created…&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;aws glue get-tables &lt;span style=&#34;color: #f92672&#34;&gt;--database-name&lt;/span&gt; rmoff_db &lt;span style=&#34;color: #f92672&#34;&gt;--region&lt;/span&gt; us-east-1 &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;--query&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;TableList[].Name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;--output&lt;/span&gt; table

+--------------------+
|      GetTables     |
+--------------------+
|  guestnetwork      |
|  homenetwork       |&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;…and populated 🎉&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ SELECT * FROM homenetwork;
┌───────────────────┬───────┬──────────────────────┬─────────────────┬─────────────┬────────[…]
│    device_mac     │ bytes │     target_table     │    category     │    ssid     │  target[…]
│      varchar      │ int64 │       varchar        │     varchar     │   varchar   │  varcha[…]
├───────────────────┼───────┼──────────────────────┼─────────────────┼─────────────┼────────[…]
│ aa:bb:cc:dd:ee:01 │  1024 │ rmoff_db.HomeNetwork │ web_browsing    │ HomeNetwork │ wifi-lo[…]
│ aa:bb:cc:dd:ee:02 │  5120 │ rmoff_db.HomeNetwork │ video_streaming │ HomeNetwork │ wifi-lo[…]
│ aa:bb:cc:dd:ee:04 │  2048 │ rmoff_db.HomeNetwork │ gaming          │ HomeNetwork │ wifi-lo[…]
│ aa:bb:cc:dd:ee:05 │  8192 │ rmoff_db.HomeNetwork │ file_download   │ HomeNetwork │ wifi-lo[…]
└───────────────────┴───────┴──────────────────────┴─────────────────┴─────────────┴────────[…]
Run Time (s): real 2.671 user 0.181888 sys 0.060846

🟡◗ SELECT * FROM guestnetwork;
┌───────────────────┬───────┬───────────────────────┬──────────────┬──────────────┬─────────[…]
│    device_mac     │ bytes │     target_table      │   category   │     ssid     │  target […]
│      varchar      │ int64 │        varchar        │   varchar    │   varchar    │  varchar[…]
├───────────────────┼───────┼───────────────────────┼──────────────┼──────────────┼─────────[…]
│ aa:bb:cc:dd:ee:03 │  512  │ rmoff_db.GuestNetwork │ social_media │ GuestNetwork │ wifi-log[…]
└───────────────────┴───────┴───────────────────────┴──────────────┴──────────────┴─────────[…]
Run Time (s): real 2.544 user 0.108161 sys 0.020404
🟡◗&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_selective_syncing_of_kafka_records_to_iceberg&#34;&gt;Selective syncing of Kafka records to Iceberg&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The last thing I want to show you is using SMT to conditionally send data to the Iceberg sink.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Looking at the same example of &lt;code&gt;wifi-log&lt;/code&gt; data, here’s how you’d create a sink connector to only send records where the &lt;code&gt;ssid&lt;/code&gt; is &lt;code&gt;HomeNetwork&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This uses the &lt;a href=&#34;https://kafka.apache.org/documentation/#org.apache.kafka.connect.transforms.Filter&#34;&gt;&lt;code&gt;Filter&lt;/code&gt;&lt;/a&gt; SMT, combined with an optional &lt;a href=&#34;https://kafka.apache.org/documentation/#connect_predicates&#34;&gt;Predicate&lt;/a&gt; so that &lt;code&gt;Filter&lt;/code&gt; will &lt;em&gt;conditionally&lt;/em&gt; drop records.
The predicate is built using a community plugin called &lt;a href=&#34;https://github.com/denisw/kafka-connect-jmespath&#34;&gt;&lt;code&gt;MatchesJMESPath&lt;/code&gt;&lt;/a&gt;, and provides a way to specify conditional matches against field values.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;iceberg-sink-wifi-logs-HomeNetwork&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;io.tabular.iceberg.connect.IcebergSinkConnector&amp;#34;,
    &amp;#34;topics&amp;#34;: &amp;#34;wifi-logs&amp;#34;,
    &amp;#34;iceberg.tables.dynamic-enabled&amp;#34;: &amp;#34;false&amp;#34;,
    &amp;#34;iceberg.tables&amp;#34;:&amp;#34;tmp.wifi_logs_home_network_only&amp;#34;, &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    &amp;#34;iceberg.tables.auto-create-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.tables.evolve-schema-enabled&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;iceberg.catalog.catalog-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.glue.GlueCatalog&amp;#34;,
    &amp;#34;iceberg.catalog.warehouse&amp;#34;: &amp;#34;s3://rmoff-lakehouse/05/&amp;#34;,
    &amp;#34;iceberg.catalog.io-impl&amp;#34;: &amp;#34;org.apache.iceberg.aws.s3.S3FileIO&amp;#34;,
    &amp;#34;iceberg.control.commit.interval-ms&amp;#34;: &amp;#34;1000&amp;#34;,
    &amp;#34;key.converter&amp;#34;:&amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;key.converter.schemas.enable&amp;#34;:&amp;#34;false&amp;#34;,
    &amp;#34;value.converter&amp;#34;:&amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;value.converter.schemas.enable&amp;#34;:&amp;#34;false&amp;#34;,
    &amp;#34;transforms&amp;#34;: &amp;#34;filterHomeNetwork&amp;#34;, &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
    &amp;#34;transforms.filterHomeNetwork.type&amp;#34;: &amp;#34;org.apache.kafka.connect.transforms.Filter&amp;#34;, &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
    &amp;#34;transforms.filterHomeNetwork.predicate&amp;#34;: &amp;#34;notHomeNetwork&amp;#34;, &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
    &amp;#34;predicates&amp;#34;: &amp;#34;notHomeNetwork&amp;#34;, &lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;(5)&lt;/b&gt;
    &amp;#34;predicates.notHomeNetwork.type&amp;#34;: &amp;#34;de.denisw.kafka.connect.jmespath.MatchesJMESPath&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\$&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Value&amp;#34;, &lt;i class=&#34;conum&#34; data-value=&#34;6&#34;&gt;&lt;/i&gt;&lt;b&gt;(6)&lt;/b&gt;
    &amp;#34;predicates.notHomeNetwork.query&amp;#34;: &amp;#34;ssid != &amp;#39;HomeNetwork&amp;#39;&amp;#34; &lt;i class=&#34;conum&#34; data-value=&#34;7&#34;&gt;&lt;/i&gt;&lt;b&gt;(7)&lt;/b&gt;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Write the resulting records to the &lt;code&gt;tmp.wifi_logs_home_network_only&lt;/code&gt; table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;List of transformation names&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Use a &lt;a href=&#34;https://kafka.apache.org/documentation/#org.apache.kafka.connect.transforms.Filter&#34;&gt;Filter transform&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Only apply the transform to the current record &lt;em&gt;if&lt;/em&gt; the predicate &lt;code&gt;notHomeNetwork&lt;/code&gt; is true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;5&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;List of predicate names&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;6&#34;&gt;&lt;/i&gt;&lt;b&gt;6&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Use the &lt;a href=&#34;https://github.com/denisw/kafka-connect-jmespath&#34;&gt;&lt;code&gt;MatchesJMESPath&lt;/code&gt;&lt;/a&gt; predicate on the Value part of the record (i.e. not the key or header)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;7&#34;&gt;&lt;/i&gt;&lt;b&gt;7&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;The predicate is true if the &lt;code&gt;ssid&lt;/code&gt; field does not equal &lt;code&gt;HomeNetwork&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you run this sink you get an Iceberg table with only the HomeNetwork wifi data in it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;🟡◗ SELECT * FROM wifi_logs_home_network_only;
┌───────────────────┬───────┬─────────────────┬─────────────┬───────────┬──────────────────────┐
│    device_mac     │ bytes │    category     │    ssid     │  target   │      timestamp       │
│      varchar      │ int64 │     varchar     │   varchar   │  varchar  │       varchar        │
├───────────────────┼───────┼─────────────────┼─────────────┼───────────┼──────────────────────┤
│ aa:bb:cc:dd:ee:01 │  1024 │ web_browsing    │ HomeNetwork │ wifi-logs │ 2025-07-04T10:30:15Z │
│ aa:bb:cc:dd:ee:02 │  5120 │ video_streaming │ HomeNetwork │ wifi-logs │ 2025-07-04T10:30:45Z │
│ aa:bb:cc:dd:ee:04 │  2048 │ gaming          │ HomeNetwork │ wifi-logs │ 2025-07-04T10:31:33Z │&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_appendices&#34;&gt;Appendices&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_debugging&#34;&gt;Debugging&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can increase the log level of the Kafka Connect worker for specific components:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;http PUT localhost:8083/admin/loggers/org.apache.iceberg.metrics Content-Type:application/json &lt;span style=&#34;color: #f8f8f2&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;TRACE
http PUT localhost:8083/admin/loggers/org.apache.iceberg.aws Content-Type:application/json &lt;span style=&#34;color: #f8f8f2&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;TRACE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;See &lt;a href=&#34;https://rmoff.net/2020/01/16/changing-the-logging-level-for-kafka-connect-dynamically/&#34;&gt;Changing the Logging Level for Kafka Connect Dynamically&lt;/a&gt; for more detail.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It can be useful for inspection of SMTs:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;curl &lt;span style=&#34;color: #f92672&#34;&gt;-s&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-X&lt;/span&gt; PUT http://localhost:8083/admin/loggers/org.apache.kafka.connect.runtime.TransformationChain &lt;span style=&#34;color: #f92672&#34;&gt;-H&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;Content-Type:application/json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-d&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;{&amp;#34;level&amp;#34;: &amp;#34;TRACE&amp;#34;}&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You’ll then see in the logs something like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;Applying transformation io.tabular.iceberg.connect.transforms.DebeziumTransform to
    SinkRecord{kafkaOffset=2, timestampType=CreateTime, originalTopic=dbz-avro.public.clicks_no_tz, originalKafkaPartition=1, originalKafkaOffset=2}
    ConnectRecord{topic=&amp;#39;dbz-avro.public.clicks_no_tz&amp;#39;, kafkaPartition=1, key=null, keySchema=null,
        value=Struct{after=Struct{click_ts=1675258225000000,ad_cost=1.50,is_conversion=true,user_id=001234567890},source=Struct{version=3.1.2.Final,connector=postgresql,name=dbz-avro,ts_ms=1751471423083,snapshot=false,db=postgres,sequence=[&amp;#34;34643256&amp;#34;,&amp;#34;34643544&amp;#34;],ts_us=1751471423083360,ts_ns=1751471423083360000,schema=public,table=clicks_no_tz,txId=780,lsn=34643544},op=c,ts_ms=1751471423553,ts_us=1751471423553059,ts_ns=1751471423553059129},
        valueSchema=Schema{dbz-avro.public.clicks_no_tz.Envelope:STRUCT}, timestamp=1751471423743, headers=ConnectHeaders(headers=)}


Applying transformation org.apache.kafka.connect.transforms.TimestampConverter$Value to
    SinkRecord{kafkaOffset=2, timestampType=CreateTime, originalTopic=dbz-avro.public.clicks_no_tz, originalKafkaPartition=1, originalKafkaOffset=2}
    ConnectRecord{topic=&amp;#39;dbz-avro.public.clicks_no_tz&amp;#39;, kafkaPartition=1, key=null, keySchema=null,
        value=Struct{click_ts=1675258225000000,ad_cost=1.50,is_conversion=true,user_id=001234567890,_cdc=Struct{op=I,ts=Wed Jul 02 15:50:23 GMT 2025,offset=2,source=public.clicks_no_tz,target=public.clicks_no_tz}},
        valueSchema=Schema{dbz-avro.public.clicks_no_tz.Value:STRUCT}, timestamp=1751471423743, headers=ConnectHeaders(headers=)}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can also use the &lt;a href=&#34;https://github.com/jcustenborder/kafka-connect-simulator/&#34;&gt;kafka-connect-simulator&lt;/a&gt; sink connector to test your SMTs:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;kcctl apply &lt;span style=&#34;color: #f92672&#34;&gt;-f&lt;/span&gt; - &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;
{
  &amp;#34;name&amp;#34;: &amp;#34;smt-test&amp;#34;,
  &amp;#34;config&amp;#34;: {
    &amp;#34;connector.class&amp;#34;: &amp;#34;com.github.jcustenborder.kafka.connect.simulator.SimulatorSinkConnector&amp;#34;,
    &amp;#34;topics&amp;#34;: &amp;#34;wifi-logs&amp;#34;,
    &amp;#34;log.entries&amp;#34;: &amp;#34;true&amp;#34;,
    &amp;#34;key.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;key.converter.schemas.enable&amp;#34;: &amp;#34;false&amp;#34;,
    &amp;#34;value.converter&amp;#34;: &amp;#34;org.apache.kafka.connect.json.JsonConverter&amp;#34;,
    &amp;#34;value.converter.schemas.enable&amp;#34;: &amp;#34;false&amp;#34;,
    &amp;#34;transforms&amp;#34;: &amp;#34;addDbPrefix, insertTopic&amp;#34;,
    &amp;#34;transforms.addDbPrefix.type&amp;#34;: &amp;#34;org.apache.kafka.connect.transforms.RegexRouter&amp;#34;,
    &amp;#34;transforms.addDbPrefix.regex&amp;#34;: &amp;#34;.*&amp;#34;,
    &amp;#34;transforms.addDbPrefix.replacement&amp;#34;: &amp;#34;rmoff_db.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\$&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;0&amp;#34;,
    &amp;#34;transforms.insertTopic.type&amp;#34;: &amp;#34;org.apache.kafka.connect.transforms.InsertField&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;\$&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;Value&amp;#34;,
    &amp;#34;transforms.insertTopic.topic.field&amp;#34;: &amp;#34;srcTopic&amp;#34;
  }
}
EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When you create this you’ll see in the Kafka Connect worker logs the actual records that a sink will be working with after the SMTs have been applied:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;2025-07-04 09:49:41,542] INFO &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;test2|task-0] record.value&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;={&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;device_mac&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;aa:bb:cc:dd:ee:01, &lt;span style=&#34;color: #f8f8f2&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;1024, &lt;span style=&#34;color: #f8f8f2&#34;&gt;srcTopic&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;rmoff_db.wifi-logs, &lt;span style=&#34;color: #f8f8f2&#34;&gt;category&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;web_browsing, &lt;span style=&#34;color: #f8f8f2&#34;&gt;ssid&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;HomeNetwork, &lt;span style=&#34;color: #f8f8f2&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;wifi-logs, &lt;span style=&#34;color: #f8f8f2&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;2025-07-04T10:30:15Z&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;(&lt;/span&gt;com.github.jcustenborder.kafka.connect.simulator.SimulatorSinkTask:50&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;)&lt;/span&gt;                                                        │
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;2025-07-04 09:49:41,542] INFO &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;test2|task-0] record.value&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;={&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;device_mac&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;aa:bb:cc:dd:ee:02, &lt;span style=&#34;color: #f8f8f2&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;5120, &lt;span style=&#34;color: #f8f8f2&#34;&gt;srcTopic&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;rmoff_db.wifi-logs, &lt;span style=&#34;color: #f8f8f2&#34;&gt;category&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;video_streaming, &lt;span style=&#34;color: #f8f8f2&#34;&gt;ssid&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;HomeNetwork, &lt;span style=&#34;color: #f8f8f2&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;wifi-logs, &lt;span style=&#34;color: #f8f8f2&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;2025-07-04T10:30:45Z&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;(&lt;/span&gt;com.github.jcustenborder.kafka.connect.simulator.SimulatorSinkTask:50&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;)&lt;/span&gt;                                                     │
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;2025-07-04 09:49:41,542] INFO &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;test2|task-0] record.value&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;={&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;device_mac&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;aa:bb:cc:dd:ee:03, &lt;span style=&#34;color: #f8f8f2&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;512, &lt;span style=&#34;color: #f8f8f2&#34;&gt;srcTopic&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;rmoff_db.wifi-logs, &lt;span style=&#34;color: #f8f8f2&#34;&gt;category&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;social_media, &lt;span style=&#34;color: #f8f8f2&#34;&gt;ssid&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;GuestNetwork, &lt;span style=&#34;color: #f8f8f2&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;wifi-logs, &lt;span style=&#34;color: #f8f8f2&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;2025-07-04T10:31:12Z&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;(&lt;/span&gt;com.github.jcustenborder.kafka.connect.simulator.SimulatorSinkTask:50&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;)&lt;/span&gt;                                                        │&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_kafka_connect_version_problems&#34;&gt;Kafka Connect version problems&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I saw this error from the connector:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code&gt;java.lang.NoSuchMethodError: &amp;#39;org.apache.kafka.clients.admin.ListConsumerGroupOffsetsOptions org.apache.kafka.clients.admin.ListConsumerGroupOffsetsOptions.requireStable(boolean)&amp;#39;
        at io.tabular.iceberg.connect.channel.CommitterImpl.fetchStableConsumerOffsets(CommitterImpl.java:116)
        at io.tabular.iceberg.connect.channel.CommitterImpl.&amp;lt;init&amp;gt;(CommitterImpl.java:97)
        at io.tabular.iceberg.connect.channel.CommitterImpl.&amp;lt;init&amp;gt;(CommitterImpl.java:70)
        at io.tabular.iceberg.connect.channel.CommitterImpl.&amp;lt;init&amp;gt;(CommitterImpl.java:62)
        at io.tabular.iceberg.connect.channel.TaskImpl.&amp;lt;init&amp;gt;(TaskImpl.java:37)
        at io.tabular.iceberg.connect.IcebergSinkTask.open(IcebergSinkTask.java:56)
        at org.apache.kafka.connect.runtime.WorkerSinkTask.openPartitions(WorkerSinkTask.java:637)
        at org.apache.kafka.connect.runtime.WorkerSinkTask.access$1200(WorkerSinkTask.java:72)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This happened with cp-kafka-connect &lt;code&gt;7.2.15&lt;/code&gt;.
Switching to 8.0.0 resolved the problem.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_documentation_and_links&#34;&gt;Documentation and Links&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GitHub: &lt;a href=&#34;https://github.com/apache/iceberg/tree/main/kafka-connect&#34;&gt;Apache Iceberg - Kafka Connect sink&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docs: &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/kafka-connect/&#34;&gt;Apache Iceberg - Kafka Connect sink&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Confluent Hub: &lt;a href=&#34;https://www.confluent.io/hub/tabular/iceberg-kafka-connect&#34;&gt;Apache Iceberg sink&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docs: &lt;a href=&#34;https://kafka.apache.org/documentation/#connect_transforms&#34;&gt;Apache Kafka - Transforms&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This blog: &lt;a href=&#34;https://rmoff.net/categories/single-message-transform/&#34;&gt;SMT articles&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Interesting links - June 2025</title>
      <link>https://rmoff.net/2025/06/27/interesting-links-june-2025/</link>
      <pubDate>2025-06-27</pubDate>
      
      <guid>https://rmoff.net/2025/06/27/interesting-links-june-2025/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/06/t_IMG_0787.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Not got time for all this? I’ve marked 🔥 for my top reads of the month&lt;/em&gt; :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_open_table_formats_data_lakehouses&#34;&gt;Open Table Formats / Data Lakehouses&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;🔥 Instead of enthusiastically hopping on the Iceberg bandwagon with both webbed feet, DuckDB Labs have been quietly building their own format.
&lt;a href=&#34;https://ducklake.select/&#34;&gt;DuckLake&lt;/a&gt; was &lt;a href=&#34;https://ducklake.select/manifesto/&#34;&gt;announced&lt;/a&gt; at the beginning of the month, and is a replacement for &lt;em&gt;both&lt;/em&gt; an OTF such as Iceberg &lt;em&gt;and&lt;/em&gt; the metadata catalog that an OTF user will invariably need to wire up too.
I had a &lt;a href=&#34;https://rmoff.net/2025/06/02/digging-into-ducklake/&#34;&gt;quick poke around it&lt;/a&gt;, and &lt;a href=&#34;https://tobilg.com/the-age-of-10-dollar-a-month-lakehouses&#34;&gt;Tobias Müller&lt;/a&gt; and &lt;a href=&#34;https://medium.com/@mcgeehan/quacks-stacks-5565069a5ef0&#34;&gt;Thomas F McGeehan V&lt;/a&gt; both went into it in more detail, along with &lt;a href=&#34;https://motherduck.com/blog/ducklake-motherduck/&#34;&gt;MotherDuck&lt;/a&gt; who’ll unsurprisingly be offering it as a managed service.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The catalog space is a vital one for OTFs, and there are various projects springing up alongside the more established Unity and Polaris catalogs.
Some do slightly different things (such as management e.g. compaction) or have a broader ambition (cataloging &lt;em&gt;all&lt;/em&gt; your data, not just OTF):&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/apache/amoro&#34;&gt;apache/amoro&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/nimtable/nimtable&#34;&gt;nimtable&lt;/a&gt; (from RisingWave)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/apache/gravitino&#34;&gt;apache/gravitino&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I’ve written about writing to Iceberg from Kafka with Flink &lt;a href=&#34;https://www.decodable.co/blog/kafka-to-iceberg-with-flink&#34;&gt;before&lt;/a&gt;, but shipped &lt;a href=&#34;https://rmoff.net/2025/06/24/writing-to-apache-iceberg-on-s3-using-flink-sql-with-glue-catalog/&#34;&gt;a new blog this week&lt;/a&gt; that throws AWS Glue Data Catalog into the mix.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Details of the latest Iceberg version &lt;a href=&#34;https://www.databricks.com/blog/iceberg-v3-moving-ecosystem-towards-unification&#34;&gt;Iceberg v3: Moving the Ecosystem Towards Unification&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In a blog post that makes me nostalgic for &lt;a href=&#34;https://rmoff.net/2010/12/30/data-warehousing-and-statistics-in-oracle-11g-incremental-global-statistics/&#34;&gt;my Oracle days&lt;/a&gt;, Yuval Yogev writes about &lt;a href=&#34;https://medium.com/@yogevyuval/making-sense-of-apache-iceberg-statistics-5a114d8e90d1&#34;&gt;statistics in Iceberg&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some useful points to think about from Jacek Migdal covering where &lt;a href=&#34;https://quesma.com/blog-detail/apache-iceberg-practical-limitations-2025&#34;&gt;Iceberg might not be the right fit for your requirements&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vu Trinh has a nice summary of &lt;a href=&#34;https://freedium.cfd/https://blog.det.life/how-did-meta-modernize-their-lakehouse-f2fec45af2f4&#34;&gt;how Meta modernised their lakehouse&lt;/a&gt;, based on &lt;a href=&#34;https://www.cidrdb.org/cidr2023/papers/p77-chattopadhyay.pdf&#34;&gt;a paper from 2023&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apache Hudi is still kicking around and in use—this blog post from Shiyan Xu details &lt;a href=&#34;https://blog.datumagic.ai/p/apache-hudi-does-xyz-110&#34;&gt;file pruning with multi-modal index&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_kafka_and_event_streaming&#34;&gt;Kafka and Event Streaming&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;🔥 LinkedIn, the birthplace of Kafka, have published details of their Kafka replacement, &lt;a href=&#34;https://www.linkedin.com/blog/engineering/infrastructure/introducing-northguard-and-xinfra&#34;&gt;Northguard and Xinfra&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chris Riccomini has a hot take on &lt;a href=&#34;https://materializedview.io/p/kafka-end-of-beginning&#34;&gt;Kafka: The End of the Beginning&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Responsive’s Almog Gavra has &lt;a href=&#34;https://www.linkedin.com/posts/agavra_ive-improved-kafka-throughput-by-over-20x-activity-7333178297721266176-12pK/&#34;&gt;written about&lt;/a&gt; a new serialisation format with performance benefits in data streaming called &lt;a href=&#34;https://github.com/imprint-serde/imprint&#34;&gt;Imprint&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you run Apache Kafka, &lt;a href=&#34;https://kafka.apache.org/cve-list&#34;&gt;this list of CVEs that the project publishes&lt;/a&gt; is worth keeping an eye on. There were three CVEs published earlier this month impacting various versions including up to 3.9.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kloia explains &lt;a href=&#34;https://blog.kloia.com/how-we-solved-kafka-event-sequencing-in-our-online-grocery-application-e1420e6b9198&#34;&gt;how they solved Kafka event sequencing&lt;/a&gt; in their online grocery application&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ShareChat migrated away from a multi-AZ deployment of Apache Kafka to Warpstream, and &lt;a href=&#34;https://medium.com/@warpstream/cost-effective-logging-at-scale-sharechats-journey-to-warpstream-2beac9ecd217&#34;&gt;explains why in this post&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agoda describes how they &lt;a href=&#34;https://medium.com/agoda-engineering/how-agoda-handles-kafka-consumer-failover-across-data-centers-a3edbacef6d0&#34;&gt;handle Kafka consumer failover across data centers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Expedia Group Tech shares details of &lt;a href=&#34;https://medium.com/expedia-group-tech/preventing-revenue-loss-with-real-time-a-b-test-monitoring-605698817457&#34;&gt;their real-time A/B test monitoring system&lt;/a&gt;, built on Apache Pinot and Kafka.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_stream_processing&#34;&gt;Stream Processing&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Grab have built a bespoke Flink SQL platform that they describe &lt;a href=&#34;https://engineering.grab.com/the-complete-stream-processing-journey-on-flinksql&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Running Flink SQL once you get out of your development environment can be tricky.
The excellently-named DataSQRL have &lt;a href=&#34;https://github.com/DataSQRL/flink-sql-runner/&#34;&gt;published&lt;/a&gt; a companion to the Flink Kubernetes operator to run SQL jobs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Luthra Sahil has some practical advice for &lt;a href=&#34;https://medium.com/@luthra.sahil.txs/exception-handling-in-kafka-streams-f5c9a82f4a3e&#34;&gt;exception handling in Kafka Streams&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Riskified have written about their &lt;a href=&#34;https://aws.amazon.com/blogs/big-data/unlock-self-serve-streaming-sql-with-amazon-managed-service-for-apache-flink/&#34;&gt;migration from ksqlDB to Flink&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The team at EloElo have been busy, writing a &lt;a href=&#34;https://tech-blogs.eloelo.in/scaling-real-time-processing-with-flink-on-eks-github-ci-cd-and-argocd-700b678ff0a2&#34;&gt;two-part&lt;/a&gt; &lt;a href=&#34;https://tech-blogs.eloelo.in/deploying-apache-flink-on-eks-with-argocd-github-actions-part-2-from-zero-to-real-time-hero-9708d173f3c5&#34;&gt;series&lt;/a&gt; on running Apache Flink in EKS, as well as &lt;a href=&#34;https://tech-blogs.eloelo.in/building-eloelos-data-platform-part-i-our-2-year-journey-to-batch-real-time-lakehouse-on-open-def6c8b79dd4&#34;&gt;details of their batch &amp;amp; realtime data platform&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 Excellent example (as always) from Simon Aubury of using &lt;a href=&#34;https://simonaubury.substack.com/p/when-plans-change-at-500-feet-complex-event-processing-of-ads-b-aviation-data-with-apache-flink-52b6381d6a20?triedRedirect=true&#34;&gt;Complex Event Processing (CEP) in Flink with ADS-B aviation data&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Details of how Swiggy built their &lt;a href=&#34;https://bytes.swiggy.com/rill-state-implementation-937bf51e077f&#34;&gt;streaming data platform&lt;/a&gt; on Flink, and use it for &lt;a href=&#34;https://bytes.swiggy.com/enabling-real-time-business-monitoring-with-klaxon-668fa14c5e38&#34;&gt;real-time business monitoring&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Trade Republic shares how they built a system to calculate bond yield to maturity in real-time &lt;a href=&#34;https://engineering.traderepublic.com/real-time-bond-yield-to-maturity-d1ea4e144951&#34;&gt;using Kafka and Redis&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_ai&#34;&gt;AI&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;🔥 I’m so bored of AI already, even though it is revolutionising how we do things.
That said, I did enjoy reading this article: &lt;a href=&#34;https://fly.io/blog/youre-all-nuts/&#34;&gt;My AI Skeptic Friends Are All Nuts&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An example from the Debezium folks showing &lt;a href=&#34;https://debezium.io/blog/2025/05/19/debezium-as-part-of-your-ai-solution/&#34;&gt;how Debezium, Milvus, and Ollama can work together&lt;/a&gt; to form a Retrieval-Augmented Generation (RAG) pipeline&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pinterest Engineering explains how they use Ray in their &lt;a href=&#34;https://medium.com/pinterest-engineering/scaling-pinterest-ml-infrastructure-with-ray-from-training-to-end-to-end-ml-pipelines-4038b9e837a0&#34;&gt;ML Infrastructure&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_cdc_debezium&#34;&gt;CDC / Debezium&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;🔥 &lt;a href=&#34;https://www.morling.dev/blog/backfilling-postgres-toast-columns-debezium-change-events/&#34;&gt;Backfilling Postgres TOAST Columns in Debezium Data Change Events&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some good detail from Mohammad Mahdi Azadjalal on &lt;a href=&#34;https://medium.com/@mm.azadjalal/mastering-cdc-with-postgresql-debezium-and-kafka-connect-challenges-solutions-225368007f69&#34;&gt;setting up CDC with PostgreSQL, Debezium, and Kafka Connect&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/snyk/skemium&#34;&gt;snyk/skemium: Generate and Compare Debezium CDC (Change Data Capture) Avro Schema, directly from your Database&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kleinanzeigen writes about &lt;a href=&#34;https://medium.com/berlin-tech-blog/handling-user-migration-with-debezium-apache-kafka-and-a-synchronization-algorithm-with-cycle-3c239b32326f&#34;&gt;their approach to a zero-downtime user migration&lt;/a&gt; using Debezium and Kafka.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_data_platforms_architecture&#34;&gt;Data Platforms &amp;amp; Architecture&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Benn Stancil asks the important question: &lt;a href=&#34;https://benn.substack.com/p/which-way-from-here&#34;&gt;which way from here&lt;/a&gt; for the analytics and data industry?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Netflix Engineering introduces their Unified Data Architecture (UDA) with the principle of &lt;a href=&#34;https://netflixtechblog.com/uda-unified-data-architecture-6a6aee261d8d&#34;&gt;Model Once, Represent Everywhere&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I’d be fascinated to know what proportion of companies are still running Hadoop.
Pinterest, for one, are, and they’ve written about the &lt;a href=&#34;https://medium.com/pinterest-engineering/automated-migration-and-scaling-of-hadoop-clusters-69c0967228e4&#34;&gt;automated migration and scaling&lt;/a&gt; of their Hadoop clusters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Atlassian shares how they are &lt;a href=&#34;https://www.atlassian.com/blog/atlassian-engineering/opensearch-admission-control-resiliency&#34;&gt;enhancing resiliency in their OpenSearch clusters&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Instacart tech talks about &lt;a href=&#34;https://tech.instacart.com/how-instacart-built-a-modern-search-infrastructure-on-postgres-c528fa601d54&#34;&gt;building their modern search infrastructure on Postgres&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Grab Engineering on &lt;a href=&#34;https://engineering.grab.com/counter-service-how-we-rewrote-it-in-rust&#34;&gt;how they rewrote their Counter Service in Rust&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The tech team at Just Eat on &lt;a href=&#34;https://medium.com/justeattakeaway-tech/how-data-products-become-the-promethean-fire-8f837fdac6ef?source=rss----7d57dc194585---4&#34;&gt;How Data Products Become the Promethean Fire&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Uber are prolific in their technical blog posts, and have three for us this month:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Their &lt;a href=&#34;https://www.uber.com/en-GB/blog/how-uber-migrated-from-hive-to-spark-sql-for-etl-workloads/&#34;&gt;migration from Hive to Spark SQL for ETL workloads&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.uber.com/en-GB/blog/evolution-of-ubers-search-platform/&#34;&gt;evolution of their search platform&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Their approach to &lt;a href=&#34;https://www.uber.com/en-GB/blog/from-archival-to-access/&#34;&gt;Config-Driven Data Pipelines&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_databases_engines_performance&#34;&gt;Databases Engines &amp;amp; Performance&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A look at how &lt;a href=&#34;https://www.pixelstech.net/article/1747708863-openai%3a-scaling-postgresql-to-the-next-level&#34;&gt;OpenAI are scaling PostgreSQL&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I love this kind of &lt;a href=&#34;https://tigerbeetle.com/blog/2025-06-06-fuzzer-blind-spots-meet-jepsen&#34;&gt;well-written, deep dive blog from TigerBeetle&lt;/a&gt; about a bug that &lt;a href=&#34;https://jepsen.io/analyses/tigerbeetle-0.16.11&#34;&gt;Jepsen found&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A deep dive from LanceDB on &lt;a href=&#34;https://blog.lancedb.com/columnar-file-readers-in-depth-repetition-definition-levels/&#34;&gt;Columnar File Readers in Depth: Repetition &amp;amp; Definition Levels&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Two interesting DuckDB extensions, providing &lt;a href=&#34;https://github.com/Query-farm/radio&#34;&gt;real-time support&lt;/a&gt; and &lt;a href=&#34;https://github.com/Query-farm/airport&#34;&gt;support for Apache Arrow&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 Chris Riccomini started &lt;a href=&#34;https://bsky.app/profile/chris.blue/post/3lqvp3hre5226&#34;&gt;a good thread on Bluesky about graph databases&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://livestore.dev/&#34;&gt;LiveStore&lt;/a&gt; is a state management framework and local-first data layer for high-performance apps, based on SQLite and event-sourcing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jan Nidzwetzki writes about &lt;a href=&#34;https://jnidzwetzki.github.io/2025/06/03/art-of-query-optimization.html&#34;&gt;The Art of SQL Query Optimization&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;InfluxDB’s Andrew Lamb did a talk on &lt;a href=&#34;https://www.youtube.com/watch?v=74YsJT1-Rdk&#34;&gt;accelerating Apache Parquet with metadata stores and specialized indexes using Apache DataFusion&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Part of Arrow, &lt;a href=&#34;https://arrow.apache.org/docs/format/FlightSql.html&#34;&gt;Flight SQL&lt;/a&gt; is &lt;em&gt;a protocol for interacting with SQL databases using the Arrow in-memory format and the Flight RPC framework&lt;/em&gt;.
&lt;a href=&#34;https://github.com/TFMV/porter&#34;&gt;Porter&lt;/a&gt; implements Flight SQL to provide a server on top of DuckDB or Clickhouse.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_and_finally&#34;&gt;And finally…&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;Nothing to do with data, but stuff that I’ve found interesting or has made me smile.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_human_apis_a_k_a_the_soft_squishy_stuff&#34;&gt;Human APIs (a.k.a The Soft Squishy Stuff)&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://fs.blog/chestertons-fence/&#34;&gt;Chesterton’s Fence: A Lesson in Thinking&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@royrapoport/that-burning-feeling-when-youre-right-cee8b8d05492&#34;&gt;That Burning Feeling When You’re Right&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 &lt;a href=&#34;https://read.developingskills.fyi/p/win-by-giving-in&#34;&gt;Win By Giving In&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 &lt;a href=&#34;https://randsinrepose.com/archives/shields-down/&#34;&gt;Shields Down&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.petdance.com/2017/03/31/skip-the-exit-interview-when-you-leave-your-job/&#34;&gt;Skip the exit interview when you leave your job&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_misc&#34;&gt;Misc&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nytimes.com/2025/04/29/world/asia/vietnam-war-photography-impact.html&#34;&gt;How Photography From the Vietnam War Changed America&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_geek&#34;&gt;Geek&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A lovely nerdy example of reverse engineering: &lt;a href=&#34;https://rachelbythebay.com/w/2025/05/22/ssl/&#34;&gt;Why I no longer have an old-school cert on my https site&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔥 &lt;a href=&#34;https://magnus919.com/2025/05/the-xenon-death-flash-how-a-camera-nearly-killed-the-raspberry-pi-2/&#34;&gt;The Xenon Death Flash: How a Camera Nearly Killed the Raspberry Pi 2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_data_viz&#34;&gt;Data Viz&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A lovely example of some creativity to illustrate data: &lt;a href=&#34;https://nightingaledvs.com/a-garden-of-sleep/&#34;&gt;A Garden of Sleep: Tracking the Emotional Distance Between Two Bedtimes - Nightingale&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Tip&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
If you like these kind of links you might like to read about &lt;a href=&#34;https://rmoff.net/2024/05/22/how-i-try-to-keep-up-with-the-data-tech-world-a-list-of-data-blogs/&#34;&gt;How I Try To Keep Up With The Data Tech World (A List of Data Blogs)&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Writing to Apache Iceberg on S3 using Flink SQL with Glue catalog</title>
      <link>https://rmoff.net/2025/06/24/writing-to-apache-iceberg-on-s3-using-flink-sql-with-glue-catalog/</link>
      <pubDate>2025-06-24</pubDate>
      
      <guid>https://rmoff.net/2025/06/24/writing-to-apache-iceberg-on-s3-using-flink-sql-with-glue-catalog/</guid>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://rmoff.net/images/2025/06/t_IMG_0440.webp" medium="image" type="image/jpg" width="100" height="100" />
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this blog post I’ll show how you can use Flink SQL to write to Iceberg on S3, storing metadata about the Iceberg tables in the &lt;a href=&#34;https://docs.aws.amazon.com/glue/latest/dg/components-overview.html#data-catalog-intro&#34;&gt;AWS Glue Data Catalog&lt;/a&gt;.
First off, I’ll walk through the dependencies and a simple smoke-test, and then put it into practice using it to write data from a Kafka topic to Iceberg.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://iceberg.apache.org&#34;&gt;Apache Iceberg&lt;/a&gt; is a table format that provides a way of storing tabular data on object storage that can be read and written to by lots of different engines.
When you’re using Iceberg you’ll need a &lt;a href=&#34;https://iceberg.apache.org/terms/#catalog&#34;&gt;metadata catalog&lt;/a&gt; so that other users of the data can discover what tables exist and where.
Here I’m using &lt;a href=&#34;https://docs.aws.amazon.com/glue/latest/dg/components-overview.html#data-catalog-intro&#34;&gt;Glue Data Catalog&lt;/a&gt;, but other catalogs that you might use in its place include
&lt;a href=&#34;https://cwiki.apache.org/confluence/display/hive/design#Design-Metastore&#34;&gt;Hive Metastore&lt;/a&gt;,
&lt;a href=&#34;https://polaris.apache.org/&#34;&gt;Apache Polaris&lt;/a&gt;,
&lt;a href=&#34;https://www.unitycatalog.io/&#34;&gt;Unity Catalog&lt;/a&gt;,
and so on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
You can find the Docker Compose for this article &lt;a href=&#34;https://github.com/rmoff/examples/tree/main/iceberg/flink-kafka-aws&#34;&gt;here&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_dependencies&#34;&gt;Dependencies&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’m using Flink 1.20, since as of the time of writing (2025-06-24) the Iceberg connector doesn’t yet support Flink 2.0 (&lt;a href=&#34;https://lists.apache.org/thread/1ozjw2wj24scj0vspx89nbjrkpz7xovv&#34;&gt;it’s due&lt;/a&gt; with Iceberg 1.10.0).
The dependencies listed below are specifically for this version.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-note&#34; title=&#34;Note&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;One of the things that makes Flink SQL &lt;em&gt;so much fun&lt;/em&gt; is doing the JAR dance each time.
I’ve &lt;a href=&#34;https://www.decodable.co/blog/flink-sql-and-the-joy-of-jars&#34;&gt;written&lt;/a&gt; and &lt;a href=&#34;https://talks.rmoff.net/9GpIYA/the-joy-of-jars-and-other-flink-sql-troubleshooting-tales&#34;&gt;spoken&lt;/a&gt; about it &lt;a href=&#34;https://www.decodable.co/blog/troubleshooting-flink-sql-s3-problems&#34;&gt;ad&lt;/a&gt; &lt;a href=&#34;https://www.decodable.co/blog/flink-sql-misconfiguration-misunderstanding-and-mishaps&#34;&gt;nauseam&lt;/a&gt;, so check those links out if you want more background.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_iceberg&#34;&gt;Iceberg&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We’re writing to Iceberg, so need the &lt;a href=&#34;https://iceberg.apache.org/multi-engine-support/#apache-flink&#34;&gt;Flink Iceberg connector&lt;/a&gt;, which is part of the Iceberg project.
The JAR is &lt;a href=&#34;https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-flink-runtime-1.20/1.9.1/iceberg-flink-runtime-1.20-1.9.1.jar&#34;&gt;&lt;code&gt;iceberg-flink-runtime-1.20-1.9.1.jar&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_aws_s3_and_glue&#34;&gt;AWS S3 and Glue&lt;/h3&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_jars&#34;&gt;JARs&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;AWS has an &lt;a href=&#34;https://iceberg.apache.org/docs/nightly/aws/#flink&#34;&gt;integration for Iceberg&lt;/a&gt; which provides support for both S3 and Glue data catalog.
The JAR is &lt;a href=&#34;https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-aws-bundle/1.9.1/iceberg-aws-bundle-1.9.1.jar&#34;&gt;&lt;code&gt;iceberg-aws-bundle-1.9.1.jar&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_s3_bucket&#34;&gt;S3 bucket&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You’ll need an S3 bucket to write your Iceberg tables.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_authentication&#34;&gt;Authentication&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You need to give Flink a way to authenticate to AWS.
There are &lt;a href=&#34;https://nightlies.apache.org/flink/flink-docs-master/docs/deployment/filesystems/s3/#configure-access-credentials&#34;&gt;different ways&lt;/a&gt; to do this.
I’ve gone for the very simple—and extremely insecure—method of setting environment variables.
Remember that Flink is a distributed system and &lt;em&gt;each component must have these environment variables set&lt;/em&gt;.
Otherwise you’ll find one thing works (e.g. some table DDL) whilst another doesn’t (e.g. writing data to the table), because different components in Flink come into play at different stages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In Docker Compose I use this syntax to pass through to the container the value of the variables, that I’ve set locally on the host machine:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;yaml&#34;&gt;    &lt;span style=&#34;color: #a6e22e&#34;&gt;environment&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}&lt;/span&gt;
      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;AWS_REGION=${AWS_REGION:-us-east-1}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that I had to set &lt;code&gt;AWS_REGION&lt;/code&gt;, even though it’s the default one (&lt;code&gt;us-east-1&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_random_jiggling_hadoop_jars&#34;&gt;Random jiggling (Hadoop JARs)&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some, or all, of these are needed, because &lt;code&gt;$REASONS&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;It’s a list I’ve built up by trial and error.
You can also just get Hadoop itself (lol, remember that?) and add it to the classpath.
If you don’t add these you’ll get various &lt;code&gt;java.lang.ClassNotFoundException&lt;/code&gt; errors.
Feel free to play whack-a-mole and eliminate the redundant ones from the list and let me know which can be scratched off :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;https://repo1.maven.org/maven2/org/apache/commons/commons-configuration2/2.1.1/commons-configuration2-2.1.1.jar
https://repo1.maven.org/maven2/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar
https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-auth/3.3.4/hadoop-auth-3.3.4.jar
https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-common/3.3.4/hadoop-common-3.3.4.jar
https://repo1.maven.org/maven2/org/apache/hadoop/thirdparty/hadoop-shaded-guava/1.1.1/hadoop-shaded-guava-1.1.1.jar
https://repo1.maven.org/maven2/org/codehaus/woodstox/stax2-api/4.2.1/stax2-api-4.2.1.jar
https://repo1.maven.org/maven2/com/fasterxml/woodstox/woodstox-core/5.3.0/woodstox-core-5.3.0.jar
https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-hdfs-client/3.3.4/hadoop-hdfs-client-3.3.4.jar
https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-mapreduce-client-core/3.3.4/hadoop-mapreduce-client-core-3.3.4.jar&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_kafka&#34;&gt;Kafka&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Since I want to read from Kafka in the full example below, we need the &lt;a href=&#34;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/table/kafka/&#34;&gt;Flink SQL Kafka connector&lt;/a&gt;.
The JAR is &lt;a href=&#34;https://repo1.maven.org/maven2/org/apache/flink/flink-sql-connector-kafka/3.4.0-1.20/flink-sql-connector-kafka-3.4.0-1.20.jar&#34;&gt;&lt;code&gt;flink-sql-connector-kafka-3.4.0-1.20.jar&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_jar_location&#34;&gt;JAR location&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I put JARs in subfolders under &lt;code&gt;./lib&lt;/code&gt; to make it easier to organise and see what’s there:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;lib
├── hadoop
│   ├── commons-configuration2-2.1.1.jar
│   ├── commons-logging-1.1.3.jar
│   ├── hadoop-auth-3.3.4.jar
│   ├── hadoop-common-3.3.4.jar
│   ├── hadoop-hdfs-client-3.3.4.jar
│   ├── hadoop-mapreduce-client-core-3.3.4.jar
│   ├── hadoop-shaded-guava-1.1.1.jar
│   ├── stax2-api-4.2.1.jar
│   └── woodstox-core-5.3.0.jar
├── iceberg
│   ├── iceberg-aws-bundle-1.9.1.jar
│   └── iceberg-flink-runtime-1.20-1.9.1.jar
├── kafka
│   └── flink-sql-connector-kafka-3.4.0-1.20.jar&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can also just put them straight under &lt;code&gt;./lib&lt;/code&gt; if you’d rather.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_checkpointing&#34;&gt;Checkpointing&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You need to configure &lt;a href=&#34;https://nightlies.apache.org/flink/flink-docs-master/docs/dev/datastream/fault-tolerance/checkpointing/#checkpointing&#34;&gt;checkpointing&lt;/a&gt; in Flink in order for it to write data files.
If you don’t then you’ll see metadata get written, but no actual data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can configure checkpointing within your SQL session by running:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;execution.checkpointing.interval&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;30s&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_smoke_testing_icebergs3glue&#34;&gt;Smoke testing Iceberg/S3/Glue&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Before we get data from Kafka into Iceberg, let’s just make sure the Iceberg/S3/Glue component is working.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This will launch a Flink SQL client if you’re using the Docker Compose that &lt;a href=&#34;https://github.com/rmoff/examples/tree/main/iceberg/flink-kafka-aws&#34;&gt;I’ve shared&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;docker compose &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-it&lt;/span&gt; jobmanager bash &lt;span style=&#34;color: #f92672&#34;&gt;-c&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;./bin/sql-client.sh&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;There are two ways to write an Iceberg table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Explicitly, using the Iceberg connector in the table DDL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implicitly, by declaring an Iceberg catalog in Flink and creating a table within it&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s check both.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_creating_an_iceberg_table_in_flink_sql_using_the_iceberg_connector&#34;&gt;Creating an Iceberg table in Flink SQL using the Iceberg connector&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This will create a table called &lt;code&gt;test01&lt;/code&gt; in the Glue database &lt;code&gt;my_glue_db&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;test01&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;col1&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;iceberg&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;catalog-name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;catalog-database&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;my_glue_db&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;warehouse&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;s3://rmoff-lakehouse/00/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;catalog-impl&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;org.apache.iceberg.aws.glue.GlueCatalog&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;ioImpl&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;org.apache.iceberg.aws.s3.S3FileIO&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;code&gt;catalog-name&lt;/code&gt; is a mandatory configuration but as far as I can tell doesn’t have any impact on the written table, and is only used within Flink as part of the operator name.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now write a row of data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;test01&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;INFO&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Submitting&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;update&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;statement&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;cluster&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;INFO&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;update&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;statement&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;has&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;been&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;successfully&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;submitted&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;cluster&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Job&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ID&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;6742&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;c18db85384825217b75fdb12b784&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock warning&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-warning&#34; title=&#34;Warning&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;At this point, all that’s happened is &lt;em&gt;the job to write the data has been &lt;strong&gt;submitted&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Don’t assume that because it was successfully &lt;strong&gt;submitted&lt;/strong&gt; it’s been successfully &lt;strong&gt;executed&lt;/strong&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Check that the data has been written to the table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;test01&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+-------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;op&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;col1&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+-------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;I&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;          &lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+-------------+&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Received&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;total&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;77&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;seconds&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Inspect the object storage:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;aws s3 &lt;span style=&#34;color: #f92672&#34;&gt;--recursive&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;ls &lt;/span&gt;s3://rmoff-lakehouse/00
2025-06-24 16:44:34        423 00/my_glue_db.db/test01/data/00000-0-a2de3a7d-6075-4d80-a440-fb0e702ec4b8-00001.parquet
2025-06-24 16:44:28        874 00/my_glue_db.db/test01/metadata/00000-9808fb50-5694-4331-afb7-ee02fa7fa8ee.metadata.json
2025-06-24 16:44:36       1995 00/my_glue_db.db/test01/metadata/00001-a74b52b7-7fda-4e35-a044-17c2cae96aef.metadata.json
2025-06-24 16:44:35       6964 00/my_glue_db.db/test01/metadata/79f37e16-6b9d-491f-b96b-d4795b66bac1-m0.avro
2025-06-24 16:44:35       4455 00/my_glue_db.db/test01/metadata/snap-5270520003556673576-1-79f37e16-6b9d-491f-b96b-d4795b66bac1.avro&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you only see &lt;code&gt;.metadata.json&lt;/code&gt; files, it could be that Flink hasn’t checkpointed yet—see above.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You’ll see the table in the Glue data catalog:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/06/2025-06-24T16-03-21-626Z.webp&#34; alt=&#34;2025 06 24T16 03 21 626Z&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_creating_a_table_in_flink_sql_within_an_iceberg_catalog&#34;&gt;Creating a table in Flink SQL within an Iceberg catalog&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The other route to creating an Iceberg table is to create a Flink SQL Catalog that is of an Iceberg type, pointing to the Glue data catalog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&amp;#34;a Flink SQL Catalog that is of an Iceberg type, pointing to the Glue data catalog&amp;#34;&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;😖 &lt;em&gt;Whuuuhh what does this even mean?&lt;/em&gt;
&lt;em&gt;Find out more in this article that I wrote previously: &lt;a href=&#34;https://www.decodable.co/blog/catalogs-in-flink-sql-a-primer&#34;&gt;Catalogs in Flink SQL—A Primer&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First create a catalog:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CATALOG&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_iceberg_catalog&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;iceberg&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;warehouse&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;s3://rmoff-lakehouse/00/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;catalog-impl&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;org.apache.iceberg.aws.glue.GlueCatalog&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;io-impl&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;org.apache.iceberg.aws.s3.S3FileIO&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Set the catalog as the active one:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;USE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CATALOG&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_iceberg_catalog&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can now see what Glue databases exist:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SHOW&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;DATABASES&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;------------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;database&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;------------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;       &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_glue_db&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;         &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;rmoff_db&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;              &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;tmp&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;------------------+&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;set&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want, you can create a new database in Glue data catalog:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;DATABASE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;new_glue_db&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now set the database (existing, or new) as the active one:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;USE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_iceberg_catalog&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;new_glue_db&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Finally, create and populate the new table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;test02&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;col1&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;test02&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The end result is the same as above - a table registered in the Glue data catalog, with Iceberg data stored in S3:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;test02&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+-------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;op&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;col1&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+-------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;I&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;          &lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+-------------+&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Received&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;total&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;65&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;seconds&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;aws glue get-tables &lt;span style=&#34;color: #f92672&#34;&gt;--region&lt;/span&gt; us-east-1 &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;--database-name&lt;/span&gt; new_glue_db &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;--query&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;TableList[].Name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;--output&lt;/span&gt; table

+----------+
| GetTables|
+----------+
|  test02  |
+----------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;aws s3 &lt;span style=&#34;color: #f92672&#34;&gt;--recursive&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;ls &lt;/span&gt;s3://rmoff-lakehouse/00
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]
2025-06-24 17:32:51        423 00/new_glue_db.db/test02/data/00000-0-0c2f7b3e-6b84-44eb-add7-79ff16f7854d-00001.parquet
2025-06-24 17:32:42        679 00/new_glue_db.db/test02/metadata/00000-202c2e5e-db26-42cc-85df-a6e3c8b61b83.metadata.json
2025-06-24 17:32:53       1800 00/new_glue_db.db/test02/metadata/00001-2b15df7b-c93a-4cc8-a755-43e10afbeb44.metadata.json
2025-06-24 17:32:53       6963 00/new_glue_db.db/test02/metadata/6ef46eac-d442-40c8-bfaa-644cb84e5f0e-m0.avro
2025-06-24 17:32:53       4455 00/new_glue_db.db/test02/metadata/snap-4874299872284941836-1-6ef46eac-d442-40c8-bfaa-644cb84e5f0e.avro&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_kafka_iceberg_s3glue&#34;&gt;Kafka → Iceberg (S3/Glue)&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we can put this into practice, and use it to stream data from Kafka to Iceberg on S3, with Glue data catalog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_define_the_kafka_source&#34;&gt;Define the Kafka source&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s a table that stores its data in Kafka.
I’m creating it outside of the Glue/Iceberg catalog because within it it always writes it as Iceberg.
Note that if you actually use the &lt;code&gt;generic_in_memory&lt;/code&gt; catalog you’ll need to define your tables in every Flink session.
See &lt;a href=&#34;https://www.decodable.co/blog/catalogs-in-flink-sql-a-primer&#34;&gt;Catalogs in Flink SQL—A Primer&lt;/a&gt; for more details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CATALOG&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;generic_in_memory&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;DATABASE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;kafka&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;kafka_transactions&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;transaction_id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;user_id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;amount&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DECIMAL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;currency&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;merchant&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;transaction_time&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;kafka&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;properties.bootstrap.servers&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;broker:9092&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;format&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;scan.startup.mode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;earliest-offset&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;transactions&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we’ll write some data to it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;kafka_transactions&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;TXN_001&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;USER_123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;GBP&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Amazon&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2025-06-23 10:30:00&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;TXN_002&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;USER_456&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;GBP&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Starbucks&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2025-06-23 10:35:00&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;TXN_003&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;USER_789&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;89&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;USD&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Shell&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2025-06-23 10:40:00&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;TXN_004&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;USER_123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;156&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;EUR&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Tesco&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2025-06-23 10:45:00&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;TXN_005&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;USER_321&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;GBP&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;McDonald&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;s&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2025-06-23 10:50:00&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Check the data’s there on the Kafka topic:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;docker compose &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-it&lt;/span&gt; kcat kcat &lt;span style=&#34;color: #f92672&#34;&gt;-b&lt;/span&gt; broker:9092 &lt;span style=&#34;color: #f92672&#34;&gt;-C&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;-t&lt;/span&gt; transactions &lt;span style=&#34;color: #f92672&#34;&gt;-c5&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;transaction_id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;TXN_001&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;USER_123&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;amount&amp;#34;&lt;/span&gt;:45.99,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;currency&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;GBP&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;merchant&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;Amazon&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;transaction_time&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;2025-06-23 10:30:00&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;transaction_id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;TXN_002&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;USER_456&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;amount&amp;#34;&lt;/span&gt;:12.5,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;currency&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;GBP&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;merchant&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;Starbucks&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;transaction_time&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;2025-06-23 10:35:00&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;transaction_id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;TXN_003&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;USER_789&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;amount&amp;#34;&lt;/span&gt;:89.99,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;currency&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;USD&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;merchant&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;Shell&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;transaction_time&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;2025-06-23 10:40:00&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;transaction_id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;TXN_004&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;USER_123&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;amount&amp;#34;&lt;/span&gt;:156.75,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;currency&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;EUR&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;merchant&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;Tesco&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;transaction_time&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;2025-06-23 10:45:00&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;transaction_id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;TXN_005&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;USER_321&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;amount&amp;#34;&lt;/span&gt;:8.99,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;currency&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;GBP&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;merchant&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;McDonald&amp;#39;s&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;transaction_time&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#34;2025-06-23 10:50:00&amp;#34;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_send_kafka_data_to_iceberg_using_this_one_simple_trick&#34;&gt;💡 Send Kafka data to Iceberg using this one simple trick 😉&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we create an Iceberg table, populated by what’s in the Kafka topic.
It’s just a single SQL statement:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_iceberg_catalog&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_glue_db&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;transactions&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;AS&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;kafka_transactions&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Flink then reads from the Kafka topic, and writes it to the Iceberg table.
We can see the Iceberg table has been created in Glue data catalog:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;aws glue get-tables &lt;span style=&#34;color: #f92672&#34;&gt;--region&lt;/span&gt; us-east-1 &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;--database-name&lt;/span&gt; my_glue_db &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;--query&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;TableList[].Name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;\&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;--output&lt;/span&gt; table
&lt;span style=&#34;color: #f92672&#34;&gt;------------------&lt;/span&gt;
|    GetTables   |
+----------------+
|  test01        |
|  transactions  |
+----------------+&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and it’s been populated:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/06/2025-06-24T17-05-34-439Z.webp&#34; alt=&#34;2025 06 24T17 05 34 439Z&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;A Flink SQL &lt;code&gt;CREATE TABLE…AS SELECT&lt;/code&gt; (known as &lt;code&gt;CTAS&lt;/code&gt;) is a continuous query—a job that will run forever until you cancel it, executing the &lt;code&gt;SELECT&lt;/code&gt; query and writing the results to the target table.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That means that if we add more rows to the source Kafka table (which is just a Kafka topic, and can be populated by any Kafka producer):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;kafka&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;kafka_transactions&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;TXN_006&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;USER_456&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;GBP&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Wayne Enterprises&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2025-06-23 10:55:00&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;TXN_007&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;USER_789&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;USD&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Stark Industries&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2025-06-23 11:00:00&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;TXN_008&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;USER_654&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;EUR&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Daily Planet&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;TIMESTAMP&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2025-06-23 11:05:00&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;we’ll shortly see the same data appear on the Iceberg table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;https://rmoff.net/images/2025/06/2025-06-24T17-10-32-925Z.webp&#34; alt=&#34;2025 06 24T17 10 32 925Z&#34;/&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_insert_overwrite&#34;&gt;INSERT OVERWRITE&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Iceberg tables can be written to using:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://iceberg.apache.org/docs/nightly/flink-writes/#insert-into&#34;&gt;&lt;code&gt;INSERT INTO&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://iceberg.apache.org/docs/nightly/flink-writes/#insert-overwrite&#34;&gt;&lt;code&gt;INSERT OVERWRITE&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://iceberg.apache.org/docs/nightly/flink-writes/#upsert&#34;&gt;&lt;code&gt;UPSERT&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In the examples above we’ve used &lt;code&gt;INSERT INTO&lt;/code&gt;, either explicitly to populate an existing table, or implicitly with the &lt;code&gt;CREATE TABLE…AS SELECT&lt;/code&gt; statement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can use &lt;code&gt;INSERT OVERWRITE&lt;/code&gt; to overwrite the existing tables contents.
This sounds useful for things like refreshing dimension tables if you don’t want to retain history (a.k.a Slowly Changing Dimension Type 0).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s the intial state of the table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;USE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_iceberg_catalog&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;new_glue_db&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dim01&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dim01&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dim01&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+-------------+--------------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;op&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;          &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;                           &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+-------------+--------------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;I&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;          &lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;                            &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;foo&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;I&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;          &lt;span style=&#34;color: #ae81ff&#34;&gt;43&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;                            &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;bar&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+-------------+--------------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Received&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;total&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;19&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;seconds&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now to overwrite it.
&lt;code&gt;INSERT OVERWRITE&lt;/code&gt; is only available in a batch Flink job, so we set that first:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;execution.runtime-mode&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;batch&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and then overwrite the data:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;OVERWRITE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dim01&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;wibble&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dim01&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+--------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+--------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;wibble&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+--------+&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;seconds&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I wonder if this could also be useful when working with fact data that’s partitioned by date, and you want to refresh an entire partition—perhaps with data that was late and you now have a complete picture of the day.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;-- Create a partitioned table&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;amount&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DECIMAL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;order_date&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATE&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;PARTITIONED&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;order_date&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;-- Populate it&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATE&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2024-06-24&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATE&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2024-06-24&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;150&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATE&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2024-06-25&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With the table populated you’ll see the data is physically partitioned on disk, with the data files under a folder path that includes the partition value (e.g. &lt;code&gt;/order_date=2024-06-24/&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;$ &lt;/span&gt;aws s3 &lt;span style=&#34;color: #f92672&#34;&gt;--recursive&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;ls &lt;/span&gt;s3://rmoff-lakehouse/00/my_glue_db.db/orders/
2025-06-25 11:07:24       1020 00/my_glue_db.db/orders/data/order_date&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;2024-06-24/00000-0-9a3c536e-cf26-43ad-940f-dde15931e3c1-00001.parquet
2025-06-25 11:07:24        985 00/my_glue_db.db/orders/data/order_date&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;2024-06-25/00000-0-9a3c536e-cf26-43ad-940f-dde15931e3c1-00002.parquet
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;[&lt;/span&gt;…]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Query the table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+--------+------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;amount&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;order_date&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+--------+------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2024&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;75&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2024&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;150&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2024&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+--------+------------+&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;76&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;seconds&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now let’s replace the data for &lt;code&gt;2024-06-24&lt;/code&gt;, leaving &lt;code&gt;2024-06-25&lt;/code&gt; untouched:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;OVERWRITE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;PARTITION&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;order_date&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2024-06-24&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+--------+------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;amount&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;order_date&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+--------+------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;150&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2024&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2024&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;75&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2024&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2024&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #ae81ff&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2024&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----+--------+------------+&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;79&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;seconds&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that Flink enforces something to stop you being stupid; you can’t specify the partition value in the &lt;code&gt;INSERT&lt;/code&gt; values because you’d risk ending up with inconsistent data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;OVERWRITE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;orders&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;PARTITION&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;order_date&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2024-06-24&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATE&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2024-06-23&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATE&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2024-06-24&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATE&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2024-06-27&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATE&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;2024-06-24&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ERROR&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Could&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;execute&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;statement&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Reason&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;flink&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;table&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;api&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ValidationException&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;Column&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;types&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;sink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;my_iceberg_catalog.my_glue_db.orders&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;match&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Cause&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Different&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;number&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;columns&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Query&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;EXPR&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;EXPR&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DECIMAL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;EXPR&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;EXPR&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Sink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;amount&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DECIMAL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;order_date&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;DATE&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_upsert&#34;&gt;UPSERT&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Whereas &lt;code&gt;INSERT OVERWRITE&lt;/code&gt; says &amp;#34;&lt;em&gt;write this data over whatever may be there already&lt;/em&gt;&amp;#34;, an &lt;code&gt;UPSERT&lt;/code&gt; is a more courteous operation, telling Flink to &amp;#34;&lt;em&gt;write this data, and if the key exists already update it, and if not, insert it&lt;/em&gt;&amp;#34;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let’s see it in action.
To start with, you need a key on your table—since the whole point of an &lt;code&gt;UPSERT&lt;/code&gt; is that it’ll match on the key to determine whether it’s an &lt;code&gt;UPDATE&lt;/code&gt; (the key exists already) or an &lt;code&gt;INSERT&lt;/code&gt; (it doesn’t).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;inventory&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;product_id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;product_name&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;quantity&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;product_id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ENFORCED&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;inventory&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;101&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Running shoes&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;102&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;GPS watch&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Gels&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;inventory&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;------------+---------------+----------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;product_id&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;product_name&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;quantity&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;------------+---------------+----------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;102&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;GPS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;watch&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;103&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;          &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Gels&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;       &lt;span style=&#34;color: #ae81ff&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;101&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Running&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;shoes&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;       &lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;------------+---------------+----------+&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;seconds&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To use &lt;code&gt;UPSERT&lt;/code&gt; it’s the same &lt;code&gt;INSERT INTO&lt;/code&gt; syntax, but &lt;code&gt;UPSERT&lt;/code&gt; is set as a &lt;a href=&#34;https://iceberg.apache.org/docs/latest/flink-configuration/#write-options&#34;&gt;configuration&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This can be at the query level, using a query hint:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;inventory&lt;/span&gt;
    &lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;/*+ OPTIONS(&amp;#39;upsert-enabled&amp;#39;=&amp;#39;true&amp;#39;) */&lt;/span&gt; &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;102&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;GPS watch ⌚&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Upsert query hint&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;inventory&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;------------+---------------+----------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;product_id&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;product_name&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;quantity&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;------------+---------------+----------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;102&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;GPS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;watch&lt;/span&gt; &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;⌚&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;103&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;          &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Gels&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;       &lt;span style=&#34;color: #ae81ff&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;101&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Running&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;shoes&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;       &lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;------------+---------------+----------+&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;40&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;seconds&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can also configure a table to use &lt;code&gt;UPSERT&lt;/code&gt; always:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;inventory&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;write.upsert.enabled&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;inventory&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;VALUES&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;103&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Gels 🍫&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;inventory&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;------------+---------------+----------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;product_id&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;product_name&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;quantity&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;------------+---------------+----------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;103&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Gels&lt;/span&gt; &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;🍫&lt;/span&gt;  &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;       &lt;span style=&#34;color: #ae81ff&#34;&gt;28&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;102&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;GPS&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;watch&lt;/span&gt; &lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;⌚&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #ae81ff&#34;&gt;101&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Running&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;shoes&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;       &lt;span style=&#34;color: #ae81ff&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;------------+---------------+----------+&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;seconds&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_examining_iceberg_metadata&#34;&gt;Examining Iceberg metadata&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The &lt;a href=&#34;https://iceberg.apache.org/docs/latest/flink/&#34;&gt;Iceberg docs for Flink&lt;/a&gt; are pretty comprehensive.
Something else that caught my eye when perusing them was the metadata tables.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each Iceberg table has a bunch of metadata associated with it, covering things like physical data file locations, snapshots, manifests, and so on.
For my RDBMS readers, you can think of these as the equivalent of &lt;code&gt;V$&lt;/code&gt; tables in Oracle, &lt;code&gt;pg_*&lt;/code&gt; tables in Postgres, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find details of the tables in &lt;a href=&#34;https://iceberg.apache.org/docs/latest/flink-queries/#inspecting-tables&#34;&gt;the Iceberg docs&lt;/a&gt;.
The tables themselves are a suffix that you append to your actual table name.
So if you want to see the list of files for a table called &lt;code&gt;foo&lt;/code&gt;, you’d query table &lt;code&gt;foo$files&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here’s a list of the tables/suffixes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$history&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$metadata_log_entries&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$snapshots&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$files&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$manifests&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$partitions&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$all_data_files&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$all_manifests&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$refs&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For example, to look at the snapshots associated with the &lt;code&gt;dim01&lt;/code&gt; table above:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;DESCRIBE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dim01&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;snapshots&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;---------------+---------------------------------------+-------+-----+--------+-----------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;          &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;                                  &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;extras&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;watermark&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;---------------+---------------------------------------+-------+-----+--------+-----------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;committed_at&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;                      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;TIMESTAMP_LTZ&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FALSE&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;snapshot_id&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;                                &lt;span style=&#34;color: #f8f8f2&#34;&gt;BIGINT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;FALSE&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;parent_id&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;                                &lt;span style=&#34;color: #f8f8f2&#34;&gt;BIGINT&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TRUE&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;operation&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;                                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TRUE&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;manifest_list&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;                                &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TRUE&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;       &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;summary&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;MAP&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TRUE&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;     &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;        &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;           &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;---------------+---------------------------------------+-------+-----+--------+-----------+&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;set&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;committed_at&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;snapshot_id&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;operation&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;summary&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dim01&lt;/span&gt;&lt;span style=&#34;color: #960050;background-color: #1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;snapshots&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----------------------------+---------------------+-----------+--------------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;               &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;committed_at&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;         &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;snapshot_id&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;operation&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;                        &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;summary&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----------------------------+---------------------+-----------+--------------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;390000&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1088585618716047739&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;    &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;append&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;flink&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;bea66d&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;...&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;2025&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;844000&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;8184558532161473513&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;overwrite&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;flink&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;operator&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;bea66d&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;...&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----------------------------+---------------------+-----------+--------------------------------+&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #ae81ff&#34;&gt;75&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;seconds&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_appendix_troubleshooting&#34;&gt;Appendix: Troubleshooting&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_a_managed_table_factory_that_implements_org_apache_flink_table_factories_managedtablefactory_is_not_in_the_classpath&#34;&gt;A managed table factory that implements org.apache.flink.table.factories.ManagedTableFactory is not in the classpath.&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Can you spot the error here?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CATALOG&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_iceberg_catalog&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;WITH&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;iceberg&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;warehouse&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;s3://rmoff-lakehouse/00/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;catalog-impl&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;org.apache.iceberg.aws.glue.GlueCatalog&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;io-impl&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;org.apache.iceberg.aws.s3.S3FileIO&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;     &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;INFO&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;Execute&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;statement&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;succeeded&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dim01&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ERROR&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Could&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;execute&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;statement&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Reason&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;flink&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;table&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;api&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ValidationException&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;Table&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;options&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;contain&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;an&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;option&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;connector&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;discovering&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;connector&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Therefore&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;assumes&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;managed&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;table&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;However&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;managed&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;factory&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;that&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;implements&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;apache&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;flink&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;table&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;factories&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;ManagedTableFactory&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;classpath&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I’ve created the Iceberg catalog, and then the table within it.
Except I didn’t!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I created the Iceberg catalog, and then created a table in the &lt;em&gt;current catalog and database&lt;/em&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SHOW&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CURRENT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CATALOG&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----------------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;current&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;catalog&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----------------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;default_catalog&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;----------------------+&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;set&lt;/span&gt;


&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SHOW&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CURRENT&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;DATABASE&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;-----------------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;current&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;database&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;-----------------------+&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;      &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;default_database&lt;/span&gt; &lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;|&lt;/span&gt;
&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #75715e;font-style: italic&#34;&gt;-----------------------+&lt;/span&gt;
&lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;set&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Before creating the table I need to either fully qualify the table name:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_iceberg_catalog&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_glue_db&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dim01&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;INFO&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;Execute&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;statement&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;succeeded&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;em&gt;or&lt;/em&gt; change the current catalog and database for the session first:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;rouge highlight&#34; style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;&lt;code data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;USE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_iceberg_catalog&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;my_glue_db&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;INFO&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;Execute&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;statement&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;succeeded&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;Flink&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color: #f92672;font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;dim02&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;STRING&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;INFO&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;Execute&lt;/span&gt; &lt;span style=&#34;color: #66d9ef;font-weight: bold&#34;&gt;statement&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;succeeded&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2;background-color: #49483e&#34;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>