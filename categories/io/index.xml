<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>io on rmoff&#39;s random ramblings2</title>
    <link>https://rmoff.net/categories/io/</link>
    <description>Recent content in io on rmoff&#39;s random ramblings2</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Mar 2011 00:00:00 +0000</lastBuildDate><atom:link href="https://rmoff.net/categories/io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting good quality I/O throughput data</title>
      <link>https://rmoff.net/2011/03/11/getting-good-quality-i/o-throughput-data/</link>
      <pubDate>Fri, 11 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://rmoff.net/2011/03/11/getting-good-quality-i/o-throughput-data/</guid>
      <description>This post expands on one I made last year here about sampling frequency (of I/O throughput, but it&amp;rsquo;s a generic concept). The background to this is my analysis of the performance and capacity of our data warehouse on Oracle 11g.
Before I get too boring, here&amp;rsquo;s the fun bit:
Pork Pies per Hour (PP/h) Jim wants to enter a championship pork-pie eating competition. He&amp;rsquo;s timed himself practising and over the course of an hour he eats four pork pies.</description>
    </item>
    
    <item>
      <title>Comparing methods for recording I/O - V$SYSSTAT vs HP Measureware</title>
      <link>https://rmoff.net/2011/03/09/comparing-methods-for-recording-i/o-vsysstat-vs-hp-measureware/</link>
      <pubDate>Wed, 09 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://rmoff.net/2011/03/09/comparing-methods-for-recording-i/o-vsysstat-vs-hp-measureware/</guid>
      <description>I wrote last year about Graphing I/O data using gnuplot and Oracle V$SYSSTAT, using a script from Kevin Closson in his article How To Produce Raw, Spreadsheet-Ready Physical I/O Data With PL/SQL. Good For Exadata, Good For Traditional Storage. Here I&amp;rsquo;ve got a simple comparison of the data recorded through this script (in essence, Oracle&amp;rsquo;s V$SYSSTAT), and directly on the OS through HP&amp;rsquo;s MeasureWare. It&amp;rsquo;s graphed out with my new favourite tool, rrdtool:</description>
    </item>
    
    <item>
      <title>Graphing I/O data using gnuplot and Oracle V$SYSSTAT</title>
      <link>https://rmoff.net/2010/10/26/graphing-i/o-data-using-gnuplot-and-oracle-vsysstat/</link>
      <pubDate>Tue, 26 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>https://rmoff.net/2010/10/26/graphing-i/o-data-using-gnuplot-and-oracle-vsysstat/</guid>
      <description>Continuing in the beard-scratching theme of Unix related posts (previously - awk), here&amp;rsquo;s a way to graph out the I/O profile of your Oracle database via the Oracle metrics in gv$sysstat, and gnuplot. This is only the system I/O as observed by Oracle, so for belts &amp;amp; braces (or to placate a cynical sysadmin ;-)) you may want to cross-reference it with something like sar.
First, a pretty picture of what you can get:</description>
    </item>
    
    <item>
      <title>The danger of averages - Measuring I/O throughput</title>
      <link>https://rmoff.net/2010/09/14/the-danger-of-averages-measuring-i/o-throughput/</link>
      <pubDate>Tue, 14 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://rmoff.net/2010/09/14/the-danger-of-averages-measuring-i/o-throughput/</guid>
      <description>This query, based on AWR snapshots on sys.wrh$_sysstat, includes in its metrics the I/O read throughput for a given snapshot duration.
However it&amp;rsquo;s important to realise the huge limitation to this figure - it&amp;rsquo;s an average. It completely shoots you in the foot if you&amp;rsquo;re looking at capacity requirements.
Consider this real-life example extracted from the above query:
[sourcecode] Timestamp Total Read MBPS =========================================== 14-SEP-10 05.15.12.660 113.748 14-SEP-10 06.00.40.953 202.250 14-SEP-10 06.</description>
    </item>
    
  </channel>
</rss>
