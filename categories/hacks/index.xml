<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hacks on rmoff&#39;s random ramblings</title>
    <link>https://rmoff.net/categories/hacks/</link>
    <description>Recent content in hacks on rmoff&#39;s random ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Dec 2019 20:23:49 +0000</lastBuildDate><atom:link href="https://rmoff.net/categories/hacks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Copy MongoDB collections from remote to local instance</title>
      <link>https://rmoff.net/2019/12/17/copy-mongodb-collections-from-remote-to-local-instance/</link>
      <pubDate>Tue, 17 Dec 2019 20:23:49 +0000</pubDate>
      
      <guid>https://rmoff.net/2019/12/17/copy-mongodb-collections-from-remote-to-local-instance/</guid>
      <description>This is revisiting the blog I wrote a while back, which showed using mongodump and mongorestore to copy a MongoDB database from one machine (a Unifi CloudKey) to another. This time instead of a manual lift and shift, I wanted a simple way to automate the update of the target with changes made on the source.
 The source is as before, Unifiâ€™s CloudKey, which runs MongoDB to store its data about the network - devices, access points, events, and so on.</description>
    </item>
    
  </channel>
</rss>
