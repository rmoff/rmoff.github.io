<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>API on rmoff&#39;s random ramblings</title>
    <link>https://rmoff.net/categories/api/</link>
    <description>Recent content in API on rmoff&#39;s random ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Mar 2025 15:26:13 +0000</lastBuildDate><atom:link href="https://rmoff.net/categories/api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Confluent Cloud for Apache Flink - Exploring the API</title>
      <link>https://rmoff.net/2025/03/25/confluent-cloud-for-apache-flink-exploring-the-api/</link>
      <pubDate>Tue, 25 Mar 2025 15:26:13 +0000</pubDate>
      
      <guid>https://rmoff.net/2025/03/25/confluent-cloud-for-apache-flink-exploring-the-api/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.confluent.io/en-gb/blog/serverless-flink-confluent-cloud-generally-available/&#34;&gt;Confluent Cloud for Apache Flink&lt;/a&gt; gives you access to run Flink workloads using a serverless platform on Confluent Cloud.
After &lt;a href=&#34;https://rmoff.net/2025/03/13/creating-an-http-source-connector-on-confluent-cloud-from-the-cli/&#34;&gt;poking around the Confluent Cloud API for configuring connectors&lt;/a&gt; I wanted to take a look at the same for Flink.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Using the API is useful particularly if you want to script a deployment, or automate a bulk operation that might be tiresome to do otherwise.
Itâ€™s also handy if you just prefer living in the CLI :)&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Lifting the Lid on OBIEE 12c Web Services - Part 1</title>
      <link>https://rmoff.net/2016/05/24/lifting-the-lid-on-obiee-12c-web-services-part-1/</link>
      <pubDate>Tue, 24 May 2016 21:15:00 +0000</pubDate>
      
      <guid>https://rmoff.net/2016/05/24/lifting-the-lid-on-obiee-12c-web-services-part-1/</guid>
      <description>Architecturally, OBIEE 12c is - on the surface - pretty similar to OBIEE 11g. Sure, we&amp;rsquo;ve lost OPMN in favour of Node Manager, but all the old favourites are there - WebLogic Servers, BI Server (nqsserver / OBIS), Presentation Services (sawserver / OBIPS), and so on.
But, scratch beneath the surface, or have a gander at slide decks such as this one from BIWA this year, and you realise that change is afoot.</description>
    </item>
    
  </channel>
</rss>
