<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rest on rmoff&#39;s random ramblings</title>
    <link>https://rmoff.github.io/categories/rest/</link>
    <description>Recent content in Rest on rmoff&#39;s random ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Jan 2019 11:25:40 +0000</lastBuildDate>
    
	<atom:link href="https://rmoff.github.io/categories/rest/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Confluent Schema Registry REST API cheatsheet</title>
      <link>https://rmoff.github.io/post/schema-registry-cheatsheet/</link>
      <pubDate>Thu, 17 Jan 2019 11:25:40 +0000</pubDate>
      
      <guid>https://rmoff.github.io/post/schema-registry-cheatsheet/</guid>
      <description>The Schema Registry support a REST API for finding out information about the schemas within it. Here&amp;#8217;s a quick cheatsheat with REST calls that I often use.
   List &#39;subjects&#39; (topics)
$ curl -s &amp;#34;http://localhost:8081/subjects/&amp;#34; [&amp;#34;COMP_WATCH_BY_EMP_ID_T-value&amp;#34;]⏎    List schema for given ID
$ curl -s &amp;#34;http://localhost:8081/schemas/ids/1&amp;#34; {&amp;#34;schema&amp;#34;:&amp;#34;{\&amp;#34;type\&amp;#34;:\&amp;#34;record\&amp;#34;,\&amp;#34;name\&amp;#34;:\&amp;#34;KsqlDataSourceSchema\&amp;#34;,\&amp;#34;namespace\&amp;#34;:\&amp;#34;io.confluent.ksql.avro_schemas\&amp;#34;,\&amp;#34;fields\&amp;#34;:[{\&amp;#34;name\&amp;#34;:\&amp;#34;EMP_ID\&amp;#34;,\&amp;#34;type\&amp;#34;:[\&amp;#34;null\&amp;#34;,\&amp;#34;string\&amp;#34;],\&amp;#34;default\&amp;#34;:null},{\&amp;#34;name\&amp;#34;:\&amp;#34;EMP_NAME\&amp;#34;,\&amp;#34;type\&amp;#34;:[\&amp;#34;null\&amp;#34;,\&amp;#34;string\&amp;#34;],\&amp;#34;default\&amp;#34;:null},{\&amp;#34;name\&amp;#34;:\&amp;#34;EMP_KEY\&amp;#34;,\&amp;#34;type\&amp;#34;:[\&amp;#34;null\&amp;#34;,\&amp;#34;string\&amp;#34;],\&amp;#34;default\&amp;#34;:null},{\&amp;#34;name\&amp;#34;:\&amp;#34;MACADDR\&amp;#34;,\&amp;#34;type\&amp;#34;:[\&amp;#34;null\&amp;#34;,\&amp;#34;string\&amp;#34;],\&amp;#34;default\&amp;#34;:null}]}&amp;#34;}⏎    List latest schema for given subject
$ curl -s &amp;#34;http://localhost:8081/subjects/COMP_WATCH_BY_EMP_ID_T-value/versions/latest&amp;#34;|jq &amp;#39;.&amp;#39; { &amp;#34;subject&amp;#34;: &amp;#34;COMP_WATCH_BY_EMP_ID_T-value&amp;#34;, &amp;#34;version&amp;#34;: 1, &amp;#34;id&amp;#34;: 1, &amp;#34;schema&amp;#34;: &amp;#34;{\&amp;#34;type\&amp;#34;:\&amp;#34;record\&amp;#34;,\&amp;#34;name\&amp;#34;:\&amp;#34;KsqlDataSourceSchema\&amp;#34;,\&amp;#34;namespace\&amp;#34;:\&amp;#34;io.</description>
    </item>
    
    <item>
      <title>Lifting the Lid on OBIEE 12c Web Services - Part 2</title>
      <link>https://rmoff.github.io/2016/05/28/lifting-the-lid-on-obiee-12c-web-services-part-2/</link>
      <pubDate>Sat, 28 May 2016 20:30:00 +0000</pubDate>
      
      <guid>https://rmoff.github.io/2016/05/28/lifting-the-lid-on-obiee-12c-web-services-part-2/</guid>
      <description>In OBIEE 12c data-model-cmd is a wrapper for some java code which ultimately calls an internal RESTful web service in OBIEE 12c, bi-lcm. We saw in the previous post how these internal web services can be opened up slightly, and we&amp;rsquo;re going to do the same again here. Which means, time for the same caveat:
None of these Web Services are documented, and they should therefore be assumed to be completely unsupported by Oracle.</description>
    </item>
    
    <item>
      <title>Lifting the Lid on OBIEE 12c Web Services - Part 1</title>
      <link>https://rmoff.github.io/2016/05/24/lifting-the-lid-on-obiee-12c-web-services-part-1/</link>
      <pubDate>Tue, 24 May 2016 21:15:00 +0000</pubDate>
      
      <guid>https://rmoff.github.io/2016/05/24/lifting-the-lid-on-obiee-12c-web-services-part-1/</guid>
      <description>Architecturally, OBIEE 12c is - on the surface - pretty similar to OBIEE 11g. Sure, we&amp;rsquo;ve lost OPMN in favour of Node Manager, but all the old favourites are there - WebLogic Servers, BI Server (nqsserver / OBIS), Presentation Services (sawserver / OBIPS), and so on.
But, scratch beneath the surface, or have a gander at slide decks such as this one from BIWA this year, and you realise that change is afoot.</description>
    </item>
    
  </channel>
</rss>