<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on rmoff&#39;s random ramblings</title>
    <link>https://rmoff.github.io/categories/docker/</link>
    <description>Recent content in Docker on rmoff&#39;s random ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Jan 2019 10:18:20 +0000</lastBuildDate>
    
	<atom:link href="https://rmoff.github.io/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What to Do When Docker on the Mac Runs Out of Space</title>
      <link>https://rmoff.github.io/post/what-to-do-when-docker-runs-out-of-space/</link>
      <pubDate>Wed, 09 Jan 2019 10:18:20 +0000</pubDate>
      
      <guid>https://rmoff.github.io/post/what-to-do-when-docker-runs-out-of-space/</guid>
      <description>I use Docker and Docker Compose a lot. Like, every day. It&amp;#8217;s a fantastic way to build repeatable demos and examples, that can be torn down and spun up in a repeatable way. But…what happens when the demo that was working is spun up and then tail spins down in a blaze of flames?
 Here&amp;#8217;s the excerpt of a log from my Oracle container:
 $ docker-compose up -d ; docker-compose logs -f oracle Recreating connect-jdbc_oracle_1_4be0ad4479f8 .</description>
    </item>
    
    <item>
      <title>Pull new version of multiple Docker images</title>
      <link>https://rmoff.github.io/post/docker-pull-new-version/</link>
      <pubDate>Mon, 17 Dec 2018 17:44:02 +0000</pubDate>
      
      <guid>https://rmoff.github.io/post/docker-pull-new-version/</guid>
      <description>Tiny little snippet this one. Given a list of images:
 $ docker images|grep confluent confluentinc/cp-enterprise-kafka 5.0.0 d0c5528d7f99 3 months ago 600MB confluentinc/cp-kafka 5.0.0 373a4e31e02e 3 months ago 558MB confluentinc/cp-zookeeper 5.0.0 3cab14034c43 3 months ago 558MB confluentinc/cp-ksql-server 5.0.0 691bc3c1991f 4 months ago 493MB confluentinc/cp-ksql-cli 5.0.0 e521f3e787d6 4 months ago 488MB …  Now there&amp;#8217;s a new version available, and you want to pull down all the latest ones for it:</description>
    </item>
    
    <item>
      <title>Docker Tips and Tricks with KSQL and Kafka</title>
      <link>https://rmoff.github.io/2018/12/15/docker-tips-and-tricks-with-ksql-and-kafka/</link>
      <pubDate>Sat, 15 Dec 2018 22:00:55 +0000</pubDate>
      
      <guid>https://rmoff.github.io/2018/12/15/docker-tips-and-tricks-with-ksql-and-kafka/</guid>
      <description>A few years ago a colleague of mine told me about this thing called Docker, and I must admit I dismissed it as a fad…how wrong was I. Docker, and Docker Compose, are one of my key tools of the trade. With them I can build self-contained environments for tutorials, demos, conference talks etc. Tear it down, run it again, without worrying that somewhere a local config changed and will break things.</description>
    </item>
    
    <item>
      <title>Logging in as root on Oracle Database Docker image</title>
      <link>https://rmoff.github.io/2018/11/30/logging-in-as-root-on-oracle-database-docker-image/</link>
      <pubDate>Fri, 30 Nov 2018 12:13:41 +0000</pubDate>
      
      <guid>https://rmoff.github.io/2018/11/30/logging-in-as-root-on-oracle-database-docker-image/</guid>
      <description>&lt;p&gt;tl;dr:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker &lt;span style=&#34;color:#008000&#34;&gt;exec&lt;/span&gt; --interactive &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            --tty &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            --user root &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            --workdir / &lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;&lt;/span&gt;            oracle-container-name bash&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ERROR: Invalid interpolation format for &#34;command&#34; option in service…</title>
      <link>https://rmoff.github.io/2018/11/20/error-invalid-interpolation-format-for-command-option-in-service/</link>
      <pubDate>Tue, 20 Nov 2018 17:47:54 +0000</pubDate>
      
      <guid>https://rmoff.github.io/2018/11/20/error-invalid-interpolation-format-for-command-option-in-service/</guid>
      <description>&lt;p&gt;Doing some funky Docker Compose stuff, including:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Accessing Kafka Docker containers&#39; JMX from host</title>
      <link>https://rmoff.github.io/2018/09/17/accessing-kafka-docker-containers-jmx-from-host/</link>
      <pubDate>Mon, 17 Sep 2018 15:29:48 +0000</pubDate>
      
      <guid>https://rmoff.github.io/2018/09/17/accessing-kafka-docker-containers-jmx-from-host/</guid>
      <description>See also docs.
To help future Googlers… with the Confluent docker images for Kafka, KSQL, Kafka Connect, etc, if you want to access JMX metrics from within, you just need to pass two environment variables: &amp;lt;x&amp;gt;_JMX_HOSTNAME and &amp;lt;x&amp;gt;_JMX_PORT, prefixed by a component name.
 &amp;lt;x&amp;gt;_JMX_HOSTNAME - the hostname/IP of the JMX host machine, as accessible from the JMX Client.
This is used by the JMX client to connect back into JMX, so must be accessible from the host machine running the JMX client.</description>
    </item>
    
    <item>
      <title>Kafka Listeners - Explained</title>
      <link>https://rmoff.github.io/2018/08/02/kafka-listeners-explained/</link>
      <pubDate>Thu, 02 Aug 2018 19:38:00 +0000</pubDate>
      
      <guid>https://rmoff.github.io/2018/08/02/kafka-listeners-explained/</guid>
      <description>This question comes up on StackOverflow and such places a lot, so here&amp;rsquo;s something to try and help.
tl;dr : You need to set advertised.listeners (or KAFKA_ADVERTISED_LISTENERS if you&amp;rsquo;re using Docker images) to the external address (host/IP) so that clients can correctly connect to it. Otherwise they&amp;rsquo;ll try to connect to the internal host address–and if that&amp;rsquo;s not reachable then problems ensue.
In this post I&amp;rsquo;ll talk about why this is necessary, and then show how to do it, based on a couple of scenarios - Docker, and AWS.</description>
    </item>
    
    <item>
      <title>Kafka Listeners - Explained</title>
      <link>https://rmoff.github.io/2018/08/02/kafka-listeners-explained/</link>
      <pubDate>Thu, 02 Aug 2018 19:38:00 +0000</pubDate>
      
      <guid>https://rmoff.github.io/2018/08/02/kafka-listeners-explained/</guid>
      <description>This question comes up on StackOverflow and such places a lot, so here&amp;rsquo;s something to try and help.
tl;dr : You need to set advertised.listeners (or KAFKA_ADVERTISED_LISTENERS if you&amp;rsquo;re using Docker images) to the external address (host/IP) so that clients can correctly connect to it. Otherwise they&amp;rsquo;ll try to connect to the internal host address–and if that&amp;rsquo;s not reachable then problems ensue.
In this post I&amp;rsquo;ll talk about why this is necessary, and then show how to do it, based on a couple of scenarios - Docker, and AWS.</description>
    </item>
    
    <item>
      <title>Running a Docker Container on Proxmox for BitTorrent Sync</title>
      <link>https://rmoff.github.io/2016/06/07/running-a-docker-container-on-proxmox-for-bittorrent-sync/</link>
      <pubDate>Tue, 07 Jun 2016 21:43:26 +0000</pubDate>
      
      <guid>https://rmoff.github.io/2016/06/07/running-a-docker-container-on-proxmox-for-bittorrent-sync/</guid>
      <description>(Previously, previously, previously)
Since Proxmox 4 has a recent Linux kernel and mainline one at that, it means that Docker can be run on it. I&amp;rsquo;ve yet to really dig into Docker and work out when it makes sense in place of Linux Containers (LXC), so this is going to be a learning experience for me.
To install Docker, add Backports repo to apt:
root@proxmox01:~# cat /etc/apt/sources.list.d/backports.list deb http://ftp.debian.org/debian jessie-backports main  And then install:</description>
    </item>
    
    <item>
      <title>A New Arrival</title>
      <link>https://rmoff.github.io/2016/06/07/a-new-arrival/</link>
      <pubDate>Tue, 07 Jun 2016 20:43:20 +0000</pubDate>
      
      <guid>https://rmoff.github.io/2016/06/07/a-new-arrival/</guid>
      <description>After a long and painful delivery, I&amp;rsquo;m delighted to announce the arrival of a new addition to my household &amp;hellip; :
This custom-build from Scan 3XS is sat in my study quietly humming away. I&amp;rsquo;m going to use it for hosting VMs for R&amp;amp;D on OBIEE, Big Data Lite, Elastic, InfluxDB, Kafka, etc. I&amp;rsquo;ll blog various installations that I&amp;rsquo;ve done on it as a reference for myself, and anyone else interested.</description>
    </item>
    
  </channel>
</rss>