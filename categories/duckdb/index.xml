<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DuckDB on rmoff&#39;s random ramblings</title>
    <link>https://rmoff.net/categories/duckdb/</link>
    <description>Recent content in DuckDB on rmoff&#39;s random ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Jan 2024 12:12:32 +0000</lastBuildDate><atom:link href="https://rmoff.net/categories/duckdb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1Ô∏è‚É£üêùüèéÔ∏èü¶Ü (1BRC in SQL with DuckDB)</title>
      <link>https://rmoff.net/2024/01/03/1%EF%B8%8F%E2%83%A3%EF%B8%8F-1brc-in-sql-with-duckdb/</link>
      <pubDate>Wed, 03 Jan 2024 12:12:32 +0000</pubDate>
      
      <guid>https://rmoff.net/2024/01/03/1%EF%B8%8F%E2%83%A3%EF%B8%8F-1brc-in-sql-with-duckdb/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Why should the Java folk have all the fun?!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;My friend and collegue &lt;a href=&#34;https://twitter.com/gunnarmorling/&#34;&gt;Gunnar Morling&lt;/a&gt; &lt;a href=&#34;https://www.morling.dev/blog/one-billion-row-challenge/&#34;&gt;launched a fun challenge&lt;/a&gt; this week: how fast can you aggregate and summarise a billion rows of data? Cunningly named The One Billion Row Challenge (1BRC for short), it&amp;rsquo;s aimed at Java coders to look at new features in the language and optimisation techniques.&lt;/p&gt;
&lt;p&gt;Not being a Java coder myself, and seeing how the challenge has already unofficially spread to other communities &lt;a href=&#34;https://www.reddit.com/r/rust/comments/18ws370/optimizing_a_one_billion_row_challenge_in_rust/&#34;&gt;including Rust and Python&lt;/a&gt; I thought I&amp;rsquo;d join in the fun using what I know best: SQL.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Quickly Convert CSV to Parquet with DuckDB</title>
      <link>https://rmoff.net/2023/03/14/quickly-convert-csv-to-parquet-with-duckdb/</link>
      <pubDate>Tue, 14 Mar 2023 15:12:31 +0000</pubDate>
      
      <guid>https://rmoff.net/2023/03/14/quickly-convert-csv-to-parquet-with-duckdb/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a neat little trick you can use with &lt;a href=&#34;https://duckdb.org/&#34;&gt;DuckDB&lt;/a&gt; to convert a CSV file into a Parquet file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;COPY&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;	    &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;read_csv(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;~/data/source.csv&amp;#39;&lt;/span&gt;,AUTO_DETECT&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TRUE&lt;/span&gt;))&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;TO&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;~/data/target.parquet&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(FORMAT&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;PARQUET&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;CODEC&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#39;ZSTD&amp;#39;&lt;/span&gt;);&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Aligning mismatched Parquet schemas in DuckDB</title>
      <link>https://rmoff.net/2023/03/03/aligning-mismatched-parquet-schemas-in-duckdb/</link>
      <pubDate>Fri, 03 Mar 2023 14:36:08 +0000</pubDate>
      
      <guid>https://rmoff.net/2023/03/03/aligning-mismatched-parquet-schemas-in-duckdb/</guid>
      <description>&lt;p&gt;What do you do when you want to query over multiple parquet files but the schemas don&amp;rsquo;t quite line up? Let&amp;rsquo;s find out üëáüèª&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Data Engineering in 2022: Wrangling the feedback data from Current 22 with dbt</title>
      <link>https://rmoff.net/2022/10/24/data-engineering-in-2022-wrangling-the-feedback-data-from-current-22-with-dbt/</link>
      <pubDate>Mon, 24 Oct 2022 12:27:14 +0000</pubDate>
      
      <guid>https://rmoff.net/2022/10/24/data-engineering-in-2022-wrangling-the-feedback-data-from-current-22-with-dbt/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I started my dbt journey by &lt;a href=&#34;https://rmoff.net/2022/10/20/data-engineering-in-2022-exploring-dbt-with-duckdb/&#34;&gt;poking and pulling at the pre-built jaffle_shop demo running with DuckDB as its data store&lt;/a&gt;. Now I want to see if I can put it to use myself to wrangle the session feedback data that came in from &lt;a href=&#34;https://2022.currentevent.io/&#34;&gt;Current 2022&lt;/a&gt;. I‚Äôve &lt;a href=&#34;https://rmoff.net/2022/10/14/current-22-session-analysis-with-duckdb-and-jupyter-notebook/&#34;&gt;analysed&lt;/a&gt; this already, but it struck me that a particular part of it would benefit from some tidying up - and be a good excuse to see what it‚Äôs like using dbt to do so.&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Data Engineering in 2022: Exploring dbt with DuckDB</title>
      <link>https://rmoff.net/2022/10/20/data-engineering-in-2022-exploring-dbt-with-duckdb/</link>
      <pubDate>Thu, 20 Oct 2022 17:07:04 +0000</pubDate>
      
      <guid>https://rmoff.net/2022/10/20/data-engineering-in-2022-exploring-dbt-with-duckdb/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I‚Äôve been wanting to try out dbt for some time now, and a recent long-haul flight seemed like the obvious opportunity to do so. Except many of the tutorials with dbt that I found were based on using Cloud, and airplane WiFi is generally sucky or non-existant. Then I found the &lt;a href=&#34;https://github.com/dbt-labs/jaffle_shop_duckdb&#34;&gt;DuckDB-based demo of dbt&lt;/a&gt;, which seemed to fit the bill (ü¶Ü geddit?!) perfectly, since DuckDB runs locally. In addition, &lt;a href=&#34;https://duckdb.org/&#34;&gt;DuckDB&lt;/a&gt; had appeared on my radar recently and I was keen to check it out.&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Current 22 - Session Analysis with DuckDB and Jupyter Notebook</title>
      <link>https://rmoff.net/2022/10/14/current-22-session-analysis-with-duckdb-and-jupyter-notebook/</link>
      <pubDate>Fri, 14 Oct 2022 16:15:57 +0000</pubDate>
      
      <guid>https://rmoff.net/2022/10/14/current-22-session-analysis-with-duckdb-and-jupyter-notebook/</guid>
      <description>&lt;p&gt;At &lt;a href=&#34;https://2022.currentevent.io/&#34;&gt;Current 2022&lt;/a&gt; the audience was given the option to submit ratings. Here&amp;rsquo;s some analysis I&amp;rsquo;ve done on the raw data. It&amp;rsquo;s interesting to poke about it, and it also gave me an excuse to try using &lt;a href=&#34;https://duckdb.org/docs/guides/python/jupyter&#34;&gt;DuckDB in a notebook&lt;/a&gt;!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
