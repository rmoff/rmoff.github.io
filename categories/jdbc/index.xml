<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jdbc on rmoff&#39;s random ramblings</title>
    <link>https://rmoff.github.io/categories/jdbc/</link>
    <description>Recent content in Jdbc on rmoff&#39;s random ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Jul 2016 15:23:14 +0000</lastBuildDate>
    
	<atom:link href="https://rmoff.github.io/categories/jdbc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kafka Connect JDBC - Oracle - Number of groups must be positive</title>
      <link>https://rmoff.github.io/2016/07/27/kafka-connect-jdbc-oracle-number-of-groups-must-be-positive/</link>
      <pubDate>Wed, 27 Jul 2016 15:23:14 +0000</pubDate>
      
      <guid>https://rmoff.github.io/2016/07/27/kafka-connect-jdbc-oracle-number-of-groups-must-be-positive/</guid>
      <description>There are various reasons for this error, but the one I hit was that the table name is case sensitive, and returned from Oracle by the JDBC driver in uppercase.
If you specify the tablename in your connecter config in lowercase, it won&amp;rsquo;t be matched, and this error is thrown. You can validate this by setting debug logging (edit etc/kafka/connect-log4j.properties to set log4j.rootLogger=DEBUG, stdout), and observe: (I&amp;rsquo;ve truncated some of the output for legibility)</description>
    </item>
    
    <item>
      <title>Connecting to OBIEE via JDBC - with jisql</title>
      <link>https://rmoff.github.io/2016/03/28/connecting-to-obiee-via-jdbc-with-jisql/</link>
      <pubDate>Mon, 28 Mar 2016 21:01:00 +0000</pubDate>
      
      <guid>https://rmoff.github.io/2016/03/28/connecting-to-obiee-via-jdbc-with-jisql/</guid>
      <description>OBIEE supports JDBC as a connection protocol, using the driver available on all installations of OBIEE, bijdbc.jar. This makes connecting to OBIEE from custom or third-party applications very easy. Once connected, you issue &amp;ldquo;Logical SQL&amp;rdquo; against the &amp;ldquo;tables&amp;rdquo; of the Presentation Layer. An example of logical SQL is:
SELECT &amp;quot;Time&amp;quot;.&amp;quot;T05 Per Name Year&amp;quot; saw_0 FROM &amp;quot;A - Sample Sales&amp;quot;  To find more Logical SQL simply inspect your nqquery.log (obis-query.log in 12c), or Usage Tracking.</description>
    </item>
    
  </channel>
</rss>