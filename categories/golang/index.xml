<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on rmoff&#39;s random ramblings</title>
    <link>https://rmoff.net/categories/golang/</link>
    <description>Recent content in Golang on rmoff&#39;s random ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Jul 2020 16:59:05 +0100</lastBuildDate>
    
	<atom:link href="https://rmoff.net/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Learning Golang (some rough notes) - S01E10 - Concurrency (Web Crawler)</title>
      <link>https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/</link>
      <pubDate>Fri, 03 Jul 2020 16:59:05 +0100</pubDate>
      
      <guid>https://rmoff.net/2020/07/03/learning-golang-some-rough-notes-s01e10-concurrency-web-crawler/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üëâ &lt;a href=&#34;https://tour.golang.org/concurrency/9&#34;&gt;A Tour of Go : sync.Mutex&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In the &lt;a href=&#34;https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e09-concurrency-channels-goroutines/&#34;&gt;previous exercise&lt;/a&gt; I felt my &lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;absence of a formal CompSci background&lt;/a&gt; with the introduction of Binary Sorted Trees, and now I am concious of it again with learning about mutex. I&amp;#8217;d &lt;em&gt;heard&lt;/em&gt; of them before, mostly when Oracle performance folk were talking about wait types - TIL it stands for &lt;code&gt;mutual exclusion&lt;/code&gt;!&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Learning Golang (some rough notes) - S01E09 - Concurrency (Channels, Goroutines)</title>
      <link>https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e09-concurrency-channels-goroutines/</link>
      <pubDate>Thu, 02 Jul 2020 16:59:05 +0100</pubDate>
      
      <guid>https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e09-concurrency-channels-goroutines/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://tour.golang.org/concurrency/1&#34;&gt;A Tour of Go : Goroutines&lt;/a&gt; was OK but as with some previous material I headed over to &lt;a href=&#34;https://gobyexample.com/goroutines&#34;&gt;Go by example&lt;/a&gt; for clearer explanations.&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Learning Golang (some rough notes) - S01E08 - Images</title>
      <link>https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e08-images/</link>
      <pubDate>Thu, 02 Jul 2020 14:59:05 +0100</pubDate>
      
      <guid>https://rmoff.net/2020/07/02/learning-golang-some-rough-notes-s01e08-images/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üëâ &lt;a href=&#34;https://tour.golang.org/methods/25&#34;&gt;A Tour of Go : Exercise: Images&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is based on the Picture generator from the &lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e02-slices/&#34;&gt;Slices exercise&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Learning Golang (some rough notes) - S01E07 - Readers</title>
      <link>https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e07-readers/</link>
      <pubDate>Wed, 01 Jul 2020 15:59:05 +0100</pubDate>
      
      <guid>https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e07-readers/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üëâ &lt;a href=&#34;https://tour.golang.org/methods/21&#34;&gt;A Tour of Go : Readers&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I&amp;#8217;m not intending to pick holes in the Tour‚Ä¶but it&amp;#8217;s not helping itself ;-)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For an introductory text, it makes a ton of assumptions about the user. Here it introduces Readers, and the explanation is good‚Äîbut the example code looks like this:&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Learning Golang (some rough notes) - S01E06 - Errors</title>
      <link>https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e06-errors/</link>
      <pubDate>Wed, 01 Jul 2020 10:59:05 +0100</pubDate>
      
      <guid>https://rmoff.net/2020/07/01/learning-golang-some-rough-notes-s01e06-errors/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üëâ &lt;a href=&#34;https://tour.golang.org/methods/20&#34;&gt;A Tour of Go : Exercise: Errors&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Like Interfaces, the Tour didn&amp;#8217;t really do it for me on Errors either. Too absract, and not enough explanation of the code examples for my liking. It also doesn&amp;#8217;t cover the &lt;a href=&#34;https://golang.org/pkg/errors/&#34;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; package which other tutorial do. I&amp;#8217;m not clear if that&amp;#8217;s because the errors package isn&amp;#8217;t used much, or the Tour focusses only on teaching the raw basics.&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Learning Golang (some rough notes) - S01E05 - Interfaces</title>
      <link>https://rmoff.net/2020/06/30/learning-golang-some-rough-notes-s01e05-interfaces/</link>
      <pubDate>Tue, 30 Jun 2020 16:59:05 +0100</pubDate>
      
      <guid>https://rmoff.net/2020/06/30/learning-golang-some-rough-notes-s01e05-interfaces/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üëâ &lt;a href=&#34;https://tour.golang.org/methods/9&#34;&gt;A Tour of Go : Interfaces&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This page really threw me, for several reasons:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The text notes that there&amp;#8217;s an error (&lt;em&gt;so why don&amp;#8217;t they fix it?&lt;/em&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The provided code doesn&amp;#8217;t run (presumably because of the above error)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It&amp;#8217;s not clear if this is a deliberate error to illustrate a point, or just a snafu&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Learning Golang (some rough notes) - S01E04 - Function Closures</title>
      <link>https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e04-function-closures/</link>
      <pubDate>Mon, 29 Jun 2020 14:59:05 +0100</pubDate>
      
      <guid>https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e04-function-closures/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üëâ &lt;a href=&#34;https://tour.golang.org/moretypes/25&#34;&gt;A Tour of Go : Function Closures&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So far the Tour has been ü§î and üßê and even ü§® but function closures had me ü§Ø ‚Ä¶&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Each of the words on the page made sense but strung together in a sentence didn&amp;#8217;t really make any sense to me.&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Learning Golang (some rough notes) - S01E03 - Maps</title>
      <link>https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e03-maps/</link>
      <pubDate>Mon, 29 Jun 2020 13:59:05 +0100</pubDate>
      
      <guid>https://rmoff.net/2020/06/29/learning-golang-some-rough-notes-s01e03-maps/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üëâ &lt;a href=&#34;https://tour.golang.org/moretypes/23&#34;&gt;A Tour of Go : Exercise - Maps&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;quoteblock&#34;&gt;
&lt;blockquote&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Implement WordCount&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This is probably bread-and-butter for any seasoned programmer, but I enjoyed the simple process and satisfaction of breaking the problem down into steps to solve using what the tutorial had just covered. Sketching out the logic in pseudo-code first, I figured that I wanted to do this:&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Learning Golang (some rough notes) - S01E02 - Slices</title>
      <link>https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e02-slices/</link>
      <pubDate>Thu, 25 Jun 2020 11:20:23 +0100</pubDate>
      
      <guid>https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e02-slices/</guid>
      <description>&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;Learning Go : Background&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üëâ &lt;a href=&#34;https://tour.golang.org/moretypes/7&#34;&gt;A Tour of Go : Slices&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Slices made sense, until I got to &lt;a href=&#34;https://tour.golang.org/moretypes/11&#34;&gt;&lt;em&gt;Slice length and capacity&lt;/em&gt;&lt;/a&gt;. Two bits puzzled me in this code:&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Learning Golang (some rough notes) - S01E01 - Pointers</title>
      <link>https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e01-pointers/</link>
      <pubDate>Thu, 25 Jun 2020 11:15:23 +0100</pubDate>
      
      <guid>https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e01-pointers/</guid>
      <description>&lt;div class=&#34;admonitionblock note&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;div class=&#34;title&#34;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;a href=&#34;https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/&#34;&gt;Learning Go : Background&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;üëâ &lt;a href=&#34;https://tour.golang.org/moretypes/1&#34;&gt;A Tour of Go : Pointers&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I&amp;#8217;ve never used pointers before. Found plenty of good resources about &lt;strong&gt;what&lt;/strong&gt; they are, e.g.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.callicoder.com/golang-pointers/&#34; class=&#34;bare&#34;&gt;https://www.callicoder.com/golang-pointers/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dave.cheney.net/2017/04/26/understand-go-pointers-in-less-than-800-words-or-your-money-back&#34; class=&#34;bare&#34;&gt;https://dave.cheney.net/2017/04/26/understand-go-pointers-in-less-than-800-words-or-your-money-back&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But &lt;strong&gt;why&lt;/strong&gt;? It&amp;#8217;s like explaining patiently to someone that 2+2 = 4, without really explaining &lt;strong&gt;why&lt;/strong&gt; would we want to add two numbers together in the first place.&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Learning Golang (some rough notes) - S01E00</title>
      <link>https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/</link>
      <pubDate>Thu, 25 Jun 2020 11:13:23 +0100</pubDate>
      
      <guid>https://rmoff.net/2020/06/25/learning-golang-some-rough-notes-s01e00/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;My background is not a traditional CompSci one. I studied Music at university, and managed to wangle my way into IT through various means, ending up doing what I do now with no formal training in coding, and a grab-bag of hacky programming attempts on my CV. My weapons of choice have been BBC Basic, VBA, ASP, and more recently some very unpythonic-Python. It&amp;#8217;s got me by, but I figured recently I&amp;#8217;d like to learn something new, and several people pointed to Go as a good option.&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>